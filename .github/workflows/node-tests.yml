name: Node tests

on:
  pull_request:
  schedule:
    - cron: "5 2 * * *"

concurrency:
  group: node-tests-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest-low

    outputs:
      src: ${{ steps.changes.outputs.src}}

    steps:
      - uses: dorny/paths-filter@ebc4d7e9ebcb0b1eb21480bb8f43113e996ac77a # v3.0.1
        id: changes
        continue-on-error: true
        with:
          filters: |
            src:
              - '.github/workflows/**'
              - '**/__tests__/**'
              - '**/__mocks__/**'
              - '**/src/**'
              - '**/appinfo/info.xml'
              - 'package.json'
              - 'package-lock.json'
              - 'tsconfig.json'
              - '**.js'
              - '**.ts'
              - '**.vue'
              - '**.handlebars'

  versions:
    runs-on: ubuntu-latest
    needs: changes

    if: ${{ github.repository_owner != 'nextcloud-gmbh' && needs.changes.outputs.src != 'false' }}

    outputs:
      nodeVersion: ${{ steps.versions.outputs.nodeVersion }}
      npmVersion: ${{ steps.versions.outputs.npmVersion }}

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Read package.json node and npm engines version
        uses: skjnldsv/read-package-engines-version-actions@8205673bab74a63eb9b8093402fd9e0e018663a1
        id: versions
        with:
          fallbackNode: '^20'
          fallbackNpm: '^9'

  test:
    runs-on: ubuntu-latest
    needs: [versions, changes]

    if: ${{ needs.versions.result != 'failure' && needs.changes.outputs.src != 'false' }}

    env:
      CYPRESS_INSTALL_BINARY: 0
      PUPPETEER_SKIP_DOWNLOAD: true

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Set up node ${{ needs.versions.outputs.nodeVersion }}
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8
        with:
          node-version: ${{ needs.versions.outputs.nodeVersion }}

      - name: Set up npm ${{ needs.versions.outputs.npmVersion }}
        run: npm i -g npm@"${{ needs.versions.outputs.npmVersion }}"

      - name: Install dependencies
        run: npm ci

      - name: Show cypress version
        run: npm run cypress:version

      - name: Test and process coverage
        run: npm run test:coverage

      - name: Collect coverage
        uses: codecov/codecov-action@ab904c41d6ece82784817410c45d8b8c02684457 # v3.1.6
        with:
          files: ./coverage/lcov.info

  jsunit:
    runs-on: ubuntu-latest
    needs: [versions, changes]

    if: ${{ needs.versions.result != 'failure' && needs.changes.outputs.src != 'false' }}

    env:
      CYPRESS_INSTALL_BINARY: 0

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Set up node ${{ needs.versions.outputs.nodeVersion }}
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8
        with:
          node-version: ${{ needs.versions.outputs.nodeVersion }}

      - name: Set up npm ${{ needs.versions.outputs.npmVersion }}
        run: npm i -g npm@"${{ needs.versions.outputs.npmVersion }}"

      - name: Install dependencies
        run: npm ci

      - name: Show cypress version
        run: npm run cypress:version

      - name: Test
        run: npm run test:jsunit

  handlebars:
    runs-on: ubuntu-latest
    needs: [versions, changes]

    if: ${{ needs.versions.result != 'failure' && needs.changes.outputs.src != 'false' }}

    env:
      CYPRESS_INSTALL_BINARY: 0
      PUPPETEER_SKIP_DOWNLOAD: true

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Set up node ${{ needs.versions.outputs.nodeVersion }}
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8
        with:
          node-version: ${{ needs.versions.outputs.nodeVersion }}

      - name: Set up npm ${{ needs.versions.outputs.npmVersion }}
        run: npm i -g npm@"${{ needs.versions.outputs.npmVersion }}"

      - name: Install dependencies
        run: npm ci

      - name: Show cypress version
        run: npm run cypress:version

      - name: Run compile
        run: ./build/compile-handlebars-templates.sh

  summary:
    permissions:
      contents: none
    runs-on: ubuntu-latest-low
    needs: [changes, test, jsunit, handlebars]

    if: always()

    name: node-test-summary

    steps:
      - name: Summary status
        run: if ${{ needs.changes.outputs.src != 'false' && needs.test.result != 'success' && needs.jsunit.result != 'success' && needs.handlebars.result != 'success' }}; then exit 1; fi
