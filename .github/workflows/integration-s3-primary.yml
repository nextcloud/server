name: S3 primary storage integration tests
on:
  pull_request:

concurrency:
  group: integration-s3-primary-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest-low

    outputs:
      src: ${{ steps.changes.outputs.src}}

    steps:
      - uses: dorny/paths-filter@ebc4d7e9ebcb0b1eb21480bb8f43113e996ac77a # v3.0.1
        id: changes
        continue-on-error: true
        with:
          filters: |
            src:
              - '.github/workflows/**'
              - '3rdparty/**'
              - '**/*.php'
              - '**/lib/**'
              - '**/tests/**'
              - '**/vendor-bin/**'
              - 'build/integration/**'
              - '.php-cs-fixer.dist.php'
              - 'composer.json'
              - 'composer.lock'

  integration-s3-primary:
    runs-on: ubuntu-latest
    needs: changes

    if: needs.changes.outputs.src != 'false' && github.repository_owner != 'nextcloud-gmbh'

    strategy:
      # do not stop on another job's failure
      fail-fast: false
      matrix:
        php-versions: ['8.0']
        key: ['objectstore', 'objectstore_multibucket']

    name: php${{ matrix.php-versions }}-${{ matrix.key }}-minio

    services:
      redis:
        image: ghcr.io/nextcloud/continuous-integration-redis:latest
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3
        ports:
          - 6379:6379/tcp
      minio:
        image: bitnami/minio
        env:
          MINIO_ROOT_USER: nextcloud
          MINIO_ROOT_PASSWORD: bWluaW8tc2VjcmV0LWtleS1uZXh0Y2xvdWQ=
          MINIO_DEFAULT_BUCKETS: nextcloud
        ports:
          - "9000:9000"

    steps:
      - name: Checkout server
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          submodules: true

      - name: Set up php ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@4bd44f22a98a19e0950cbad5f31095157cc9621b # v2
        with:
          php-version: ${{ matrix.php-versions }}
          # https://docs.nextcloud.com/server/stable/admin_manual/installation/source_installation.html#prerequisites-for-manual-installation
          extensions: bz2, ctype, curl, dom, fileinfo, gd, iconv, intl, json, libxml, mbstring, openssl, pcntl, posix, redis, session, simplexml, xmlreader, xmlwriter, zip, zlib, sqlite, pdo_sqlite
          coverage: 'none'
          ini-file: development
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Wait for S3
        run: |
          sleep 10
          curl -f -m 1 --retry-connrefused --retry 10 --retry-delay 10 http://localhost:9000/minio/health/ready

      - name: Set up Nextcloud
        run: |
          mkdir data
          echo '<?php $CONFIG=["${{ matrix.key }}" => ["class" => "OC\Files\ObjectStore\S3", "arguments" => ["bucket" => "nextcloud", "autocreate" => true, "key" => "nextcloud", "secret" => "bWluaW8tc2VjcmV0LWtleS1uZXh0Y2xvdWQ=", "hostname" => "localhost", "port" => 9000, "use_ssl" => false, "use_path_style" => true, "uploadPartSize" => 52428800]]];' > config/config.php
          echo '<?php $CONFIG=["redis" => ["host" => "localhost", "port" => 6379], "memcache.local" => "\OC\Memcache\Redis", "memcache.distributed" => "\OC\Memcache\Redis"];' > config/redis.config.php
          ./occ maintenance:install --verbose --database=sqlite --database-name=nextcloud --database-host=127.0.0.1 --database-user=root --database-pass=rootpassword --admin-user admin --admin-pass admin
          php -f index.php

      - name: Integration
        run: |
          cd build/integration
          bash run.sh --tags "~@failure-s3" dav_features/webdav-related.feature

      - name: S3 logs
        if: always()
        run: |
          cat data/nextcloud.log
          docker ps -a
          docker ps -aq | while read container ; do IMAGE=$(docker inspect --format='{{.Config.Image}}' $container); echo $IMAGE; docker logs $container; echo "\n\n" ; done


  s3-primary-integration-summary:
    permissions:
      contents: none
    runs-on: ubuntu-latest-low
    needs: [changes, integration-s3-primary]

    if: always()

    steps:
      - name: Summary status
        run: if ${{ needs.changes.outputs.src != 'false' && needs.integration-s3-primary.result != 'success' }}; then exit 1; fi
