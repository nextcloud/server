name: S3 primary storage
on:
  pull_request:
    paths:
      - '.github/workflows/**'
      - '3rdparty/**'
      - '**/*.php'
      - '**/lib/**'
      - '**/tests/**'
      - '**/vendor-bin/**'
      - '.php-cs-fixer.dist.php'
      - 'composer.json'
      - 'composer.lock'

concurrency:
  group: s3-primary-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  s3-primary-tests-minio:
    runs-on: ubuntu-20.04

    if: ${{ github.repository_owner != 'nextcloud-gmbh' }}

    strategy:
      # do not stop on another job's failure
      fail-fast: false
      matrix:
        php-versions: ['8.0']
        key: ['objectstore', 'objectstore_multibucket']

    name: php${{ matrix.php-versions }}-${{ matrix.key }}-minio

    services:
      minio:
        env:
          MINIO_ACCESS_KEY: minio
          MINIO_SECRET_KEY: minio123
        image: bitnami/minio:2021.12.29
        ports:
          - "9000:9000"

    steps:
      - name: Checkout server
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          submodules: true

      - name: Set up php ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@c5fc0d8281aba02c7fda07d3a70cc5371548067d #v2.25.2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, fileinfo, intl, sqlite, pdo_sqlite, zip, gd
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Nextcloud
        run: |
          composer install
          mkdir data
          echo '<?php $CONFIG=["${{ matrix.key }}" => ["class" => "OC\Files\ObjectStore\S3", "arguments" => ["bucket" => "nextcloud", "autocreate" => true, "key" => "minio", "secret" => "minio123", "hostname" => "localhost", "port" => 9000, "use_ssl" => false, "use_path_style" => true, "uploadPartSize" => 52428800]]];' > config/config.php
          ./occ maintenance:install --verbose --database=sqlite --database-name=nextcloud --database-host=127.0.0.1 --database-user=root --database-pass=rootpassword --admin-user admin --admin-pass password
          php -f index.php

      - name: Wait for S3
        run: |
          sleep 10
          curl -f -m 1 --retry-connrefused --retry 10 --retry-delay 10 http://localhost:9000/minio/health/ready

      - name: PHPUnit
        run: composer run test:db
      - name: S3 logs
        if: always()
        run: |
          docker ps -a
          docker logs $(docker ps -aq)


  s3-primary-summary:
    runs-on: ubuntu-latest
    needs: [s3-primary-tests-minio]

    if: always()

    steps:
      - name: Summary status
        run: if ${{ needs.s3-primary-tests-minio.result != 'success' }}; then exit 1; fi
