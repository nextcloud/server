name: S3 External storage
on:
  pull_request:
    paths:
      - 'apps/files_external/**'

concurrency:
  group: s3-external-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  APP_NAME: files_external

jobs:
  s3-external-tests-minio:
    runs-on: ubuntu-latest

    if: ${{ github.repository_owner != 'nextcloud-gmbh' }}

    strategy:
      # do not stop on another job's failure
      fail-fast: false
      matrix:
        php-versions: ['8.0', '8.1']

    name: php${{ matrix.php-versions }}-minio

    services:
      minio:
        env:
          MINIO_ACCESS_KEY: minio
          MINIO_SECRET_KEY: minio123
        image: bitnami/minio:2021.10.6
        ports:
          - "9000:9000"

    steps:
      - name: Checkout server
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          submodules: true

      - name: Set up php ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@c5fc0d8281aba02c7fda07d3a70cc5371548067d #v2.25.2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, fileinfo, intl, sqlite, pdo_sqlite, zip, gd
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Nextcloud
        run: |
          composer install
          mkdir data
          ./occ maintenance:install --verbose --database=sqlite --database-name=nextcloud --database-host=127.0.0.1 --database-user=root --database-pass=rootpassword --admin-user admin --admin-pass password
          ./occ app:enable --force ${{ env.APP_NAME }}
          php -S localhost:8080 &
      - name: PHPUnit
        run: |
          echo "<?php return ['run' => true, 'secret' => 'actually-not-secret', 'passwordsalt' => 'actually-not-secret', 'hostname' => 'localhost','key' => 'minio','secret' => 'minio123', 'bucket' => 'bucket', 'port' => 9000, 'use_ssl' => false, 'autocreate' => true, 'use_path_style' => true];" > apps/${{ env.APP_NAME }}/tests/config.amazons3.php
          composer run test:files_external apps/files_external/tests/Storage/Amazons3Test.php
          composer run test:files_external apps/files_external/tests/Storage/VersionedAmazonS3Test.php
      - name: S3 logs
        if: always()
        run: |
          docker ps -a
          docker logs $(docker ps -aq)
  s3-external-tests-localstack:
    runs-on: ubuntu-latest

    if: ${{ github.repository_owner != 'nextcloud-gmbh' }}

    strategy:
      # do not stop on another job's failure
      fail-fast: false
      matrix:
        php-versions: ['8.0', '8.1']

    name: php${{ matrix.php-versions }}-localstack

    services:
      minio:
        env:
          SERVICES: s3
          DEBUG: 1
        image: localstack/localstack:0.12.7
        ports:
          - "4566:4566"

    steps:
      - name: Checkout server
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          submodules: true

      - name: Set up php ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@c5fc0d8281aba02c7fda07d3a70cc5371548067d #v2.25.2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, fileinfo, intl, sqlite, pdo_sqlite, zip, gd
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Nextcloud
        run: |
          composer install
          mkdir data
          ./occ maintenance:install --verbose --database=sqlite --database-name=nextcloud --database-host=127.0.0.1 --database-user=root --database-pass=rootpassword --admin-user admin --admin-pass password
          ./occ app:enable --force ${{ env.APP_NAME }}
          php -S localhost:8080 &
      - name: PHPUnit
        run: |
          echo "<?php return ['run' => true,'hostname' => 'localhost','key' => 'ignored','secret' => 'ignored', 'bucket' => 'bucket', 'port' => 4566, 'use_ssl' => false, 'autocreate' => true, 'use_path_style' => true];" > apps/${{ env.APP_NAME }}/tests/config.amazons3.php
          composer run test:files_external apps/files_external/tests/Storage/Amazons3Test.php
          composer run test:files_external apps/files_external/tests/Storage/VersionedAmazonS3Test.php
      - name: S3 logs
        if: always()
        run: |
          docker ps -a
          docker logs $(docker ps -aq)

  s3-external-summary:
    runs-on: ubuntu-latest
    needs: [s3-external-tests-minio, s3-external-tests-localstack]

    if: always()

    steps:
      - name: Summary status
        run: if ${{ needs.s3-external-tests-minio.result != 'success' }} || ${{ needs.s3-external-tests-localstack.result != 'success' }}; then exit 1; fi
