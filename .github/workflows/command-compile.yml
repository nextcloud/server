name: Compile Command
on:
  issue_comment:
    types: [created]

jobs:
  init:
    runs-on: ubuntu-latest

    # On pull requests and if the comment starts with `/compile`
    if: github.event.issue.pull_request != '' && startsWith(github.event.comment.body, '/compile')

    outputs:
      git_path: ${{ steps.git-path.outputs.path }}
      arg1: ${{ steps.command.outputs.arg1 }}
      arg2: ${{ steps.command.outputs.arg2 }}
      head_ref: ${{ steps.comment-branch.outputs.head_ref }}
      base_ref: ${{ steps.comment-branch.outputs.base_ref }}

    steps:
      - name: Check actor permission
        uses: skjnldsv/check-actor-permission@69e92a3c4711150929bca9fcf34448c5bf5526e7 # v2
        with:
          require: write

      - name: Add reaction on start
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
        with:
          token: ${{ secrets.COMMAND_BOT_PAT }}
          repository: ${{ github.event.repository.full_name }}
          comment-id: ${{ github.event.comment.id }}
          reactions: "+1"

      - name: Parse command
        uses: skjnldsv/parse-command-comment@d8c0034c481b791dd6348fcacd9c510dc3a4cb4f # v2
        id: command

      # Init path depending on which command is run
      - name: Init path
        id: git-path
        run: |
          if ${{ startsWith(steps.command.outputs.arg1, '/') }}; then
            echo "path=${{steps.command.outputs.arg1}}" >> $GITHUB_OUTPUT
          else
            echo "path=${{steps.command.outputs.arg2}}" >> $GITHUB_OUTPUT
          fi

      - name: Init branch
        uses: xt0rted/pull-request-comment-branch@d97294d304604fa98a2600a6e2f916a84b596dc7 # v1
        id: comment-branch

  process:
    runs-on: ubuntu-latest
    needs: init

    steps:
      - name: Restore cached git repository
        uses: buildjet/cache@e376f15c6ec6dc595375c78633174c7e5f92dc0e # v3
        with:
          path: .git
          key: git-repo

      - name: Checkout ${{ needs.init.outputs.head_ref }}
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          token: ${{ secrets.COMMAND_BOT_PAT }}
          fetch-depth: 0
          ref: ${{ needs.init.outputs.head_ref }}

      - name: Setup git
        run: |
          git config --local user.email "nextcloud-command@users.noreply.github.com"
          git config --local user.name "nextcloud-command"

      - name: Read package.json node and npm engines version
        uses: skjnldsv/read-package-engines-version-actions@8205673bab74a63eb9b8093402fd9e0e018663a1 # v2.2
        id: package-engines-versions
        with:
          fallbackNode: '^20'
          fallbackNpm: '^10'

      - name: Set up node ${{ steps.package-engines-versions.outputs.nodeVersion }}
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v3
        with:
          node-version: ${{ steps.package-engines-versions.outputs.nodeVersion }}
          cache: npm

      - name: Set up npm ${{ steps.package-engines-versions.outputs.npmVersion }}
        run: npm i -g npm@"${{ steps.package-engines-versions.outputs.npmVersion }}"
      
      - name: Rebase to ${{ needs.init.outputs.base_ref }}
        if: ${{ contains(needs.init.outputs.arg1, 'rebase') }}
        run: |
          git fetch origin ${{ needs.init.outputs.base_ref }}:${{ needs.init.outputs.base_ref }}
          git rebase origin/${{ needs.init.outputs.base_ref }}

      - name: Install dependencies & build
        env:
          CYPRESS_INSTALL_BINARY: 0
          PUPPETEER_SKIP_DOWNLOAD: true
        run: |
          npm ci
          npm run build --if-present

      - name: Commit default
        if: ${{ !contains(needs.init.outputs.arg1, 'fixup') && !contains(needs.init.outputs.arg1, 'amend') }}
        run: |
          git add ${{ github.workspace }}${{ needs.init.outputs.git_path }}
          git commit --signoff -m 'chore(assets): Recompile assets'
 
      - name: Commit fixup
        if: ${{ contains(needs.init.outputs.arg1, 'fixup') }}
        run: |
          git add ${{ github.workspace }}${{ needs.init.outputs.git_path }}
          git commit --fixup=HEAD --signoff

      - name: Commit amend
        if: ${{ contains(needs.init.outputs.arg1, 'amend') }}
        run: |
          git add ${{ github.workspace }}${{ needs.init.outputs.git_path }}
          git commit --amend --no-edit --signoff
          # Remove any [skip ci] from the amended commit
          git commit --amend -m "$(git log -1 --format='%B' | sed '/\[skip ci\]/d')"
 
      - name: Push normally
        if: ${{ !contains(needs.init.outputs.arg1, 'rebase') && !contains(needs.init.outputs.arg1, 'amend') }}
        run: git push origin ${{ needs.init.outputs.head_ref }}

      - name: Force push
        if: ${{ contains(needs.init.outputs.arg1, 'rebase') || contains(needs.init.outputs.arg1, 'amend') }}
        run: git push --force origin ${{ needs.init.outputs.head_ref }}

      - name: Add reaction on failure
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
        if: failure()
        with:
          token: ${{ secrets.COMMAND_BOT_PAT }}
          repository: ${{ github.event.repository.full_name }}
          comment-id: ${{ github.event.comment.id }}
          reactions: "-1"
