{"version":3,"file":"systemtags-init.js?v=9ec6c248fd006ff0a2fa","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC1BA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACNA;AACA;AACA;AACA;AACA;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AClDA;;;;;AEAA;AACA;AACA;AACA;AACA","sources":["webpack:///nextcloud/apps/systemtags/src/files_actions/inlineSystemTagsAction.ts","webpack:///nextcloud/apps/systemtags/src/files_actions/openInFilesAction.ts","webpack:///nextcloud/apps/systemtags/src/files_views/systemtagsView.ts","webpack:///nextcloud/apps/systemtags/src/init.ts","webpack:///nextcloud/apps/systemtags/src/logger.ts","webpack:///nextcloud/apps/systemtags/src/services/api.ts","webpack:///nextcloud/apps/systemtags/src/services/davClient.ts","webpack:///nextcloud/apps/systemtags/src/services/systemtags.ts","webpack:///nextcloud/apps/systemtags/src/utils.ts","webpack:///nextcloud/apps/systemtags/src/css/fileEntryInlineSystemTags.scss","webpack://nextcloud/./apps/systemtags/src/css/fileEntryInlineSystemTags.scss?0a01","webpack:///nextcloud/ignored|/var/www/nextcloud/node_modules/object-inspect|./util.inspect","webpack:///nextcloud/ignored|/var/www/nextcloud/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams|util","webpack:///nextcloud/ignored|/var/www/nextcloud/node_modules/stream-browserify/node_modules/readable-stream/lib|util","webpack:///nextcloud/ignored|/var/www/nextcloud/node_modules/stream-http/node_modules/readable-stream/lib/internal/streams|util","webpack:///nextcloud/ignored|/var/www/nextcloud/node_modules/stream-http/node_modules/readable-stream/lib|util","webpack:///nextcloud/webpack/bootstrap","webpack:///nextcloud/webpack/runtime/chunk loaded","webpack:///nextcloud/webpack/runtime/compat get default export","webpack:///nextcloud/webpack/runtime/define property getters","webpack:///nextcloud/webpack/runtime/ensure chunk","webpack:///nextcloud/webpack/runtime/global","webpack:///nextcloud/webpack/runtime/hasOwnProperty shorthand","webpack:///nextcloud/webpack/runtime/make namespace object","webpack:///nextcloud/webpack/runtime/node module decorator","webpack:///nextcloud/webpack/runtime/jsonp chunk loading","webpack:///nextcloud/webpack/runtime/nonce","webpack:///nextcloud/webpack/before-startup","webpack:///nextcloud/webpack/startup","webpack:///nextcloud/webpack/after-startup"],"sourcesContent":["import { FileAction } from '@nextcloud/files';\nimport { translate as t } from '@nextcloud/l10n';\nimport \"../css/fileEntryInlineSystemTags.scss\";\nconst getNodeSystemTags = function (node) {\n  const tags = node.attributes?.['system-tags']?.['system-tag'];\n  if (tags === undefined) {\n    return [];\n  }\n  return [tags].flat();\n};\nconst renderTag = function (tag) {\n  let isMore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const tagElement = document.createElement('li');\n  tagElement.classList.add('files-list__system-tag');\n  tagElement.textContent = tag;\n  if (isMore) {\n    tagElement.classList.add('files-list__system-tag--more');\n  }\n  return tagElement;\n};\nexport const action = new FileAction({\n  id: 'system-tags',\n  displayName: () => '',\n  iconSvgInline: () => '',\n  enabled(nodes) {\n    // Only show the action on single nodes\n    if (nodes.length !== 1) {\n      return false;\n    }\n    const node = nodes[0];\n    const tags = getNodeSystemTags(node);\n    // Only show the action if the node has system tags\n    if (tags.length === 0) {\n      return false;\n    }\n    return true;\n  },\n  exec: async () => null,\n  async renderInline(node) {\n    // Ensure we have the system tags as an array\n    const tags = getNodeSystemTags(node);\n    if (tags.length === 0) {\n      return null;\n    }\n    const systemTagsElement = document.createElement('ul');\n    systemTagsElement.classList.add('files-list__system-tags');\n    systemTagsElement.setAttribute('aria-label', t('files', 'Assigned collaborative tags'));\n    systemTagsElement.append(renderTag(tags[0]));\n    if (tags.length === 2) {\n      // Special case only two tags:\n      // the overflow fake tag would take the same space as this, so render it\n      systemTagsElement.append(renderTag(tags[1]));\n    } else if (tags.length > 1) {\n      // More tags than the one we're showing\n      // So we add a overflow element indicating there are more tags\n      const moreTagElement = renderTag('+' + (tags.length - 1), true);\n      moreTagElement.setAttribute('title', tags.slice(1).join(', '));\n      // because the title is not accessible we hide this element for screen readers (see alternative below)\n      moreTagElement.setAttribute('aria-hidden', 'true');\n      moreTagElement.setAttribute('role', 'presentation');\n      systemTagsElement.append(moreTagElement);\n      // For accessibility the tags are listed, as the title is not accessible\n      // but those tags are visually hidden\n      for (const tag of tags.slice(1)) {\n        const tagElement = renderTag(tag);\n        tagElement.classList.add('hidden-visually');\n        systemTagsElement.append(tagElement);\n      }\n    }\n    return systemTagsElement;\n  },\n  order: 0\n});","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { translate as t } from '@nextcloud/l10n';\nimport { FileType, FileAction, DefaultType } from '@nextcloud/files';\nexport const action = new FileAction({\n  id: 'systemtags:open-in-files',\n  displayName: () => t('systemtags', 'Open in Files'),\n  iconSvgInline: () => '',\n  enabled(nodes, view) {\n    // Only for the system tags view\n    if (view.id !== 'tags') {\n      return false;\n    }\n    // Only for single nodes\n    if (nodes.length !== 1) {\n      return false;\n    }\n    // Do not open tags (keep the default action) and only open folders\n    return nodes[0].attributes['is-tag'] !== true && nodes[0].type === FileType.Folder;\n  },\n  async exec(node) {\n    let dir = node.dirname;\n    if (node.type === FileType.Folder) {\n      dir = node.path;\n    }\n    window.OCP.Files.Router.goToRoute(null,\n    // use default route\n    {\n      view: 'files',\n      fileid: String(node.fileid)\n    }, {\n      dir,\n      openfile: 'true'\n    });\n    return null;\n  },\n  // Before openFolderAction\n  order: -1000,\n  default: DefaultType.HIDDEN\n});","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { translate as t } from '@nextcloud/l10n';\nimport { View, getNavigation } from '@nextcloud/files';\nimport { getContents } from \"../services/systemtags.js\";\nimport svgTagMultiple from '@mdi/svg/svg/tag-multiple.svg?raw';\n/**\n * Register the system tags files view\n */\nexport function registerSystemTagsView() {\n  const Navigation = getNavigation();\n  Navigation.register(new View({\n    id: 'tags',\n    name: t('systemtags', 'Tags'),\n    caption: t('systemtags', 'List of tags and their associated files and folders.'),\n    emptyTitle: t('systemtags', 'No tags found'),\n    emptyCaption: t('systemtags', 'Tags you have created will show up here.'),\n    icon: svgTagMultiple,\n    order: 25,\n    getContents\n  }));\n}","/**\n * SPDX-FileCopyrightText: 2016 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { registerDavProperty, registerFileAction } from '@nextcloud/files';\nimport { action as inlineSystemTagsAction } from \"./files_actions/inlineSystemTagsAction.js\";\nimport { action as openInFilesAction } from \"./files_actions/openInFilesAction.js\";\nimport { registerSystemTagsView } from \"./files_views/systemtagsView.js\";\nregisterDavProperty('nc:system-tags');\nregisterFileAction(inlineSystemTagsAction);\nregisterFileAction(openInFilesAction);\nregisterSystemTagsView();","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { getLoggerBuilder } from '@nextcloud/logger';\nexport const logger = getLoggerBuilder().setApp('systemtags').detectUser().build();","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport axios from '@nextcloud/axios';\nimport { generateUrl } from '@nextcloud/router';\nimport { translate as t } from '@nextcloud/l10n';\nimport { davClient } from \"./davClient.js\";\nimport { formatTag, parseIdFromLocation, parseTags } from \"../utils\";\nimport { logger } from \"../logger.js\";\nexport const fetchTagsPayload = `<?xml version=\"1.0\"?>\n<d:propfind  xmlns:d=\"DAV:\" xmlns:oc=\"http://owncloud.org/ns\">\n\t<d:prop>\n\t\t<oc:id />\n\t\t<oc:display-name />\n\t\t<oc:user-visible />\n\t\t<oc:user-assignable />\n\t\t<oc:can-assign />\n\t</d:prop>\n</d:propfind>`;\nexport const fetchTags = async () => {\n  const path = '/systemtags';\n  try {\n    const {\n      data: tags\n    } = await davClient.getDirectoryContents(path, {\n      data: fetchTagsPayload,\n      details: true,\n      glob: '/systemtags/*' // Filter out first empty tag\n    });\n    return parseTags(tags);\n  } catch (error) {\n    logger.error(t('systemtags', 'Failed to load tags'), {\n      error\n    });\n    throw new Error(t('systemtags', 'Failed to load tags'));\n  }\n};\nexport const fetchLastUsedTagIds = async () => {\n  const url = generateUrl('/apps/systemtags/lastused');\n  try {\n    const {\n      data: lastUsedTagIds\n    } = await axios.get(url);\n    return lastUsedTagIds.map(Number);\n  } catch (error) {\n    logger.error(t('systemtags', 'Failed to load last used tags'), {\n      error\n    });\n    throw new Error(t('systemtags', 'Failed to load last used tags'));\n  }\n};\n/**\n * @param tag\n * @return created tag id\n */\nexport const createTag = async tag => {\n  const path = '/systemtags';\n  const tagToPost = formatTag(tag);\n  try {\n    const {\n      headers\n    } = await davClient.customRequest(path, {\n      method: 'POST',\n      data: tagToPost\n    });\n    const contentLocation = headers.get('content-location');\n    if (contentLocation) {\n      return parseIdFromLocation(contentLocation);\n    }\n    logger.error(t('systemtags', 'Missing \"Content-Location\" header'));\n    throw new Error(t('systemtags', 'Missing \"Content-Location\" header'));\n  } catch (error) {\n    logger.error(t('systemtags', 'Failed to create tag'), {\n      error\n    });\n    throw new Error(t('systemtags', 'Failed to create tag'));\n  }\n};\nexport const updateTag = async tag => {\n  const path = '/systemtags/' + tag.id;\n  const data = `<?xml version=\"1.0\"?>\n\t<d:propertyupdate  xmlns:d=\"DAV:\" xmlns:oc=\"http://owncloud.org/ns\">\n\t\t<d:set>\n\t\t\t<d:prop>\n\t\t\t\t<oc:display-name>${tag.displayName}</oc:display-name>\n\t\t\t\t<oc:user-visible>${tag.userVisible}</oc:user-visible>\n\t\t\t\t<oc:user-assignable>${tag.userAssignable}</oc:user-assignable>\n\t\t\t</d:prop>\n\t\t</d:set>\n\t</d:propertyupdate>`;\n  try {\n    await davClient.customRequest(path, {\n      method: 'PROPPATCH',\n      data\n    });\n  } catch (error) {\n    logger.error(t('systemtags', 'Failed to update tag'), {\n      error\n    });\n    throw new Error(t('systemtags', 'Failed to update tag'));\n  }\n};\nexport const deleteTag = async tag => {\n  const path = '/systemtags/' + tag.id;\n  try {\n    await davClient.deleteFile(path);\n  } catch (error) {\n    logger.error(t('systemtags', 'Failed to delete tag'), {\n      error\n    });\n    throw new Error(t('systemtags', 'Failed to delete tag'));\n  }\n};","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { createClient } from \"webdav/dist/node/index.js\";\nimport { generateRemoteUrl } from '@nextcloud/router';\nimport { getRequestToken, onRequestTokenUpdate } from '@nextcloud/auth';\n// init webdav client\nconst rootUrl = generateRemoteUrl('dav');\nexport const davClient = createClient(rootUrl);\n// set CSRF token header\nconst setHeaders = token => {\n  davClient.setHeaders({\n    // Add this so the server knows it is an request from the browser\n    'X-Requested-With': 'XMLHttpRequest',\n    // Inject user auth\n    requesttoken: token ?? ''\n  });\n};\n// refresh headers when request token changes\nonRequestTokenUpdate(setHeaders);\nsetHeaders(getRequestToken());","import { getCurrentUser } from '@nextcloud/auth';\nimport { Folder, Permission, getDavNameSpaces, getDavProperties, davGetClient, davResultToNode, davRemoteURL, davRootPath } from '@nextcloud/files';\nimport { fetchTags } from \"./api\";\nconst rootPath = '/systemtags';\nconst client = davGetClient();\nconst resultToNode = node => davResultToNode(node);\nconst formatReportPayload = tagId => `<?xml version=\"1.0\"?>\n<oc:filter-files ${getDavNameSpaces()}>\n\t<d:prop>\n\t\t${getDavProperties()}\n\t</d:prop>\n\t<oc:filter-rules>\n\t\t<oc:systemtag>${tagId}</oc:systemtag>\n\t</oc:filter-rules>\n</oc:filter-files>`;\nconst tagToNode = function (tag) {\n  return new Folder({\n    id: tag.id,\n    source: `${davRemoteURL}${rootPath}/${tag.id}`,\n    owner: String(getCurrentUser()?.uid ?? 'anonymous'),\n    root: rootPath,\n    displayname: tag.displayName,\n    permissions: Permission.READ,\n    attributes: {\n      ...tag,\n      'is-tag': true\n    }\n  });\n};\nexport const getContents = async function () {\n  let path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '/';\n  // List tags in the root\n  const tagsCache = (await fetchTags()).filter(tag => tag.userVisible);\n  if (path === '/') {\n    return {\n      folder: new Folder({\n        id: 0,\n        source: `${davRemoteURL}${rootPath}`,\n        owner: getCurrentUser()?.uid,\n        root: rootPath,\n        permissions: Permission.NONE\n      }),\n      contents: tagsCache.map(tagToNode)\n    };\n  }\n  const tagId = parseInt(path.split('/', 2)[1]);\n  const tag = tagsCache.find(tag => tag.id === tagId);\n  if (!tag) {\n    throw new Error('Tag not found');\n  }\n  const folder = tagToNode(tag);\n  const contentsResponse = await client.getDirectoryContents(davRootPath, {\n    details: true,\n    // Only filter favorites if we're at the root\n    data: formatReportPayload(tagId),\n    headers: {\n      // Patched in WebdavClient.ts\n      method: 'REPORT'\n    }\n  });\n  return {\n    folder,\n    contents: contentsResponse.data.map(resultToNode)\n  };\n};","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport camelCase from 'camelcase';\nexport const defaultBaseTag = {\n  userVisible: true,\n  userAssignable: true,\n  canAssign: true\n};\nexport const parseTags = tags => {\n  return tags.map(_ref => {\n    let {\n      props\n    } = _ref;\n    return Object.fromEntries(Object.entries(props).map(_ref2 => {\n      let [key, value] = _ref2;\n      return [camelCase(key), camelCase(key) === 'displayName' ? String(value) : value];\n    }));\n  });\n};\n/**\n * Parse id from `Content-Location` header\n * @param url URL to parse\n */\nexport const parseIdFromLocation = url => {\n  const queryPos = url.indexOf('?');\n  if (queryPos > 0) {\n    url = url.substring(0, queryPos);\n  }\n  const parts = url.split('/');\n  let result;\n  do {\n    result = parts[parts.length - 1];\n    parts.pop();\n    // note: first result can be empty when there is a trailing slash,\n    // so we take the part before that\n  } while (!result && parts.length > 0);\n  return Number(result);\n};\nexport const formatTag = initialTag => {\n  if ('name' in initialTag && !('displayName' in initialTag)) {\n    return {\n      ...initialTag\n    };\n  }\n  const tag = {\n    ...initialTag\n  };\n  tag.name = tag.displayName;\n  delete tag.displayName;\n  return tag;\n};","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n.files-list__system-tags {\n  --min-size: 32px;\n  display: none;\n  justify-content: center;\n  align-items: center;\n  min-width: calc(var(--min-size) * 2);\n  max-width: 300px;\n}\n\n.files-list__system-tag {\n  padding: 5px 10px;\n  border: 1px solid;\n  border-radius: var(--border-radius-pill);\n  border-color: var(--color-border);\n  color: var(--color-text-maxcontrast);\n  height: var(--min-size);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  line-height: 22px;\n  text-align: center;\n}\n.files-list__system-tag--more {\n  overflow: visible;\n  text-overflow: initial;\n}\n.files-list__system-tag + .files-list__system-tag {\n  margin-inline-start: 5px;\n}\n\n@media (min-width: 512px) {\n  .files-list__system-tags {\n    display: flex;\n  }\n}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./fileEntryInlineSystemTags.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./fileEntryInlineSystemTags.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// The chunk loading function for additional chunks\n// Since all referenced chunks are already included\n// in this file, this function is empty here.\n__webpack_require__.e = () => (Promise.resolve());","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"systemtags-init\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunknextcloud\"] = self[\"webpackChunknextcloud\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"core-common\"], () => (__webpack_require__(\"./apps/systemtags/src/init.ts\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}