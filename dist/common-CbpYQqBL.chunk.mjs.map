{"version":3,"file":"common-CbpYQqBL.chunk.mjs","names":["module","comb10MulTo","prime","module","comb10MulTo","prime"],"sources":["../node_modules/diffie-hellman/node_modules/bn.js/lib/bn.js","../node_modules/create-ecdh/node_modules/bn.js/lib/bn.js"],"sourcesContent":["(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    this.length = num === 0 ? 1 : this.length;\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    this.length = num === 0 ? 1 : this.length;\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"],"x_google_ignoreList":[0,1],"mappings":"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,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAA,CAAQ,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAA,CAAQ,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAA,CAAQ,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAA,CAAQ,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAA,CAAQ,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAA,CAAQ,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAA,CAAQ,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAA,CAAQ,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAA,CAAQ,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAA,CAAQ,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAA,CAAQ,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAA,CAAQ,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAA,CAAQ,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAA,CAAQ,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAA,CAAQ,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAA,CAAQ,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAA,CAAQ,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAA,CAAQ,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAA,CAAQ,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAA,CAAQ,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAA,CAAQ,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAA,CAAQ,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAA,CAAQ,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAA,CAAQ,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAA,CAAQ,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAA,CAAQ,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAA,CAAQ,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAA,CAAQ,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAA,CAAQ,EACpC,EAAM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"}