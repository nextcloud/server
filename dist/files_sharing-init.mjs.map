{"version":3,"mappings":";4pBAMA,MAAAA,GAAeC,KACb,OAAO,eAAe,EACtB,aACA,MAAM,ECTR,IAAAC,EAeO,MAAMC,EAAW,UAAU,QAAeD,EAAAE,MAAf,KAAkB,OAAAF,EAAA,KAE9CG,EAAU,CACf,eAAgB,kBACjB,EAEMC,GAAiB,eAAeC,EAA8C,CArBpFL,MAsBK,IAEC,IAAAK,iBAAU,aAAc,OAAW,CACtC,MAAMC,GAAQ,MAAAC,EAAA,wBAAAC,CAAA,eAAa,6BAAM,EAAG,eAAAA,CAAA,gCAEpCH,EAAS,SAAWC,EAAK,QAAQD,EAAS,IAAI,EACrCA,EAAA,UAAYA,EAAS,SAAW,OAAS,SAGlDA,EAAS,iBAAmBI,EAAW,KACvCJ,EAAS,YAAcI,EAAW,KAElCJ,EAAS,UAAYA,EAAS,MAE9BA,EAAS,kBAAoBA,EAAS,KACvC,CAEM,MAAAK,oBAAqB,aAAc,SACnCC,oBAAuB,eAAgB,GACvCC,EAAOF,EAAWG,EAASC,EAI3BC,EAASV,EAAS,aAAeA,EAAS,GAG1CW,GAAOX,iBAAU,OAAQA,EAAS,aAAeA,EAAS,KAC1DY,EAASC,EAAkB,OAAO,OAAAjB,EAAQ,KAAI,OAAOe,CAAA,aAAW,SAAU,GAAG,CAAC,EAGhF,IAAAG,aAAkB,WAAa,IAAI,KAAMd,EAAS,WAAc,GAAI,EAAI,OAC5E,OAAcA,iBAAA,SAAmBA,iBAAA,aAAc,KAC9Cc,EAAQ,IAAI,KAAMd,EAAS,MAAS,GAAI,GAGlC,IAAIO,EAAK,CACf,GAAIG,EACJ,OAAAE,EACA,MAAiBZ,iBAAA,UACjB,uBAAgB,WAAY,2BAC5B,MAAAc,EACA,KAAgBd,iBAAA,UAChB,aAAuBA,iBAAA,oBAA8BA,iBAAA,aACrD,KAAMJ,EACN,WAAY,CACX,GAAGI,EACH,cAAeM,EAEf,WAAsBN,iBAAA,UACtB,qBAAgCA,iBAAA,kBAChC,cAAyBA,iBAAA,WACzB,UAAUL,EAAAK,iBAAU,OAAV,MAAAL,EAAgB,SAAS,OAAO,GAAG,cAAgB,EAAI,CAClE,EACA,QACOoB,EAAO,CACf,OAAAtB,GAAO,MAAM,gCAAiC,CAAE,MAAAsB,CAAO,GAChD,IACR,CACD,EAEMC,EAAY,SAASC,EAAiB,GAAuC,CAC5E,MAAAC,EAAMC,EAAe,kCAAkC,EACtD,OAAAC,EAAM,IAAIF,EAAK,CACrB,QAAApB,EACA,OAAQ,CACP,eAAAmB,EACA,aAAc,EACf,EACA,CACF,EAEMI,GAAmB,UAA2C,CACnE,OAAOL,EAAU,EAAI,CACtB,EAEMM,GAAsB,UAA2C,CACtE,OAAON,EAAU,CAClB,EAEMO,GAAkB,UAA2C,CAC5D,MAAAL,EAAMC,EAAe,yCAAyC,EAC7D,OAAAC,EAAM,IAAIF,EAAK,CACrB,QAAApB,EACA,OAAQ,CACP,aAAc,EACf,EACA,CACF,EAEM0B,GAAmB,UAA2C,CAC7D,MAAAN,EAAMC,EAAe,0CAA0C,EAC9D,OAAAC,EAAM,IAAIF,EAAK,CACrB,QAAApB,EACA,OAAQ,CACP,aAAc,EACf,EACA,CACF,EAEM2B,GAAyB,UAA2C,CACnE,MAAAP,EAAMC,EAAe,iDAAiD,EACrE,OAAAC,EAAM,IAAIF,EAAK,CACrB,QAAApB,EACA,OAAQ,CACP,aAAc,EACf,EACA,CACF,EAEM4B,GAAmB,UAA2C,CAC7D,MAAAR,EAAMC,EAAe,yCAAyC,EAC7D,OAAAC,EAAM,IAAIF,EAAK,CACrB,QAAApB,EACA,OAAQ,CACP,aAAc,EACf,EACA,CACF,EAMM6B,GAAU,SAASC,EAA0BC,EAAa,CAC/D,OAAO,OAAO,OAAOD,EAAM,OAAO,SAASE,EAAKC,EAAM,CACrD,OAACD,EAAIC,EAAKF,CAAG,CAAC,EAAIC,EAAIC,EAAKF,CAAG,CAAC,GAAK,IAAI,KAAKE,CAAI,EAC1CD,CAAA,EACL,EAAE,CAAC,CACP,EAEaE,EAAc,MAAOC,EAAgB,GAAMC,EAAmB,GAAMC,EAAgB,GAAOC,EAAgB,GAAOC,EAAwB,KAAkC,CAxJzL1C,MAyJC,MAAM2C,EAAW,GAEbL,GACHK,EAAS,KAAKjB,KAAoBE,GAAiB,GAEhDW,GACMI,EAAA,KAAKhB,IAAqB,EAEhCa,GACHG,EAAS,KAAKd,KAAoBC,GAAwB,GAEvDW,GACME,EAAA,KAAKZ,IAAkB,EAI3B,MAAAa,GADY,MAAM,QAAQ,IAAID,CAAQ,GACrB,IAAKE,GAAaA,EAAS,KAAK,IAAI,IAAI,EAAE,KAAK,EACtE,IAAIC,GAAY,MAAM,QAAQ,IAAIF,EAAK,IAAIxC,EAAc,CAAC,GACxD,OAAQ2C,GAASA,IAAS,IAAI,EAE5B,OAAAL,EAAY,OAAS,IACbI,IAAS,OAAQC,GAAM,CA9KpC/C,MA8KuC,OAAA0C,EAAY,UAAS1C,EAAA+C,EAAK,aAAL,YAAA/C,EAAiB,UAAU,EAAC,GAKvF8C,EAAWd,GAAQc,EAAU,QAAQ,EAAE,IAAKb,GAAU,CAC/C,MAAAc,EAAOd,EAAM,CAAC,EACf,OAAAc,EAAA,WAAW,aAAa,EAAId,EAAM,IAAIc,GAAQA,EAAK,WAAW,aAAa,CAAC,EAC1EA,CAAA,CACP,EAEM,CACN,OAAQ,IAAIlC,EAAO,CAClB,GAAI,EACJ,OAAQK,EAAkB,MAAQjB,CAAQ,EAC1C,QAAOD,EAAAE,EAAA,gBAAAF,EAAkB,MAAO,KAChC,EACD,SAAA8C,CAAA,CAEF,EClLaE,EAAe,gBACfC,EAAsB,YACtBC,EAAyB,aACzBC,EAAuB,eACvBC,EAAsB,gBACtBC,EAAsB,gBAEnCC,GAAe,IAAM,CACpB,MAAMC,EAAaC,IACRD,EAAA,SAAS,IAAIE,EAAK,CAC5B,GAAIT,EACJ,KAAMU,EAAE,gBAAiB,QAAQ,EACjC,QAASA,EAAE,gBAAiB,2BAA2B,EAEvD,WAAYA,EAAE,gBAAiB,WAAW,EAC1C,aAAcA,EAAE,gBAAiB,6EAA6E,EAE9G,KAAMC,EACN,MAAO,GAEP,QAAS,CAAC,EAEV,YAAa,IAAMtB,EAAY,CAC/B,EAAC,EAESkB,EAAA,SAAS,IAAIE,EAAK,CAC5B,GAAIR,EACJ,KAAMS,EAAE,gBAAiB,iBAAiB,EAC1C,QAASA,EAAE,gBAAiB,yCAAyC,EAErE,WAAYA,EAAE,gBAAiB,6BAA6B,EAC5D,aAAcA,EAAE,gBAAiB,4DAA4D,EAE7F,KAAME,EACN,MAAO,EACP,OAAQZ,EAER,QAAS,CAAC,EAEV,YAAa,IAAMX,EAAY,GAAM,GAAO,GAAO,EAAK,CACxD,EAAC,EAESkB,EAAA,SAAS,IAAIE,EAAK,CAC5B,GAAIP,EACJ,KAAMQ,EAAE,gBAAiB,oBAAoB,EAC7C,QAASA,EAAE,gBAAiB,4CAA4C,EAExE,WAAYA,EAAE,gBAAiB,oBAAoB,EACnD,aAAcA,EAAE,gBAAiB,gDAAgD,EAEjF,KAAMG,EACN,MAAO,EACP,OAAQb,EAER,QAAS,CAAC,EAEV,YAAa,IAAMX,EAAY,GAAO,GAAM,GAAO,EAAK,CACxD,EAAC,EAESkB,EAAA,SAAS,IAAIE,EAAK,CAC5B,GAAIN,EACJ,KAAMO,EAAE,gBAAiB,gBAAgB,EACzC,QAASA,EAAE,gBAAiB,wCAAwC,EAEpE,WAAYA,EAAE,gBAAiB,iBAAiB,EAChD,aAAcA,EAAE,gBAAiB,wDAAwD,EAEzF,KAAMI,EACN,MAAO,EACP,OAAQd,EAER,QAAS,CAAC,EAEV,YAAa,IAAMX,EAAY,GAAO,GAAM,GAAO,GAAO,CAAC,OAAO,GAAG,MAAM,eAAe,CAAC,CAC3F,EAAC,EAESkB,EAAA,SAAS,IAAIE,EAAK,CAC5B,GAAIL,EACJ,KAAMM,EAAE,gBAAiB,gBAAgB,EACzC,QAASA,EAAE,gBAAiB,0BAA0B,EAEtD,WAAYA,EAAE,gBAAiB,mBAAmB,EAClD,aAAcA,EAAE,gBAAiB,wCAAwC,EAEzE,KAAMK,EACN,MAAO,EACP,OAAQf,EAER,QAAS,CAAC,EAEV,YAAa,IAAMX,EAAY,GAAO,GAAO,GAAO,EAAI,CACxD,EAAC,EAESkB,EAAA,SAAS,IAAIE,EAAK,CAC5B,GAAIJ,EACJ,KAAMK,EAAE,gBAAiB,gBAAgB,EACzC,QAASA,EAAE,gBAAiB,4BAA4B,EAExD,WAAYA,EAAE,gBAAiB,mBAAmB,EAClD,aAAcA,EAAE,gBAAiB,6DAA6D,EAE9F,KAAMM,EACN,MAAO,EACP,OAAQhB,EAER,QAAS,CAAC,EAEV,YAAa,IAAMX,EAAY,GAAO,GAAO,GAAM,EAAK,CACxD,EAAC,CACH,EC7Ga4B,GAAS,IAAIC,EAAW,CACpC,GAAI,eACJ,YAAcjC,GAAkBkC,EAAE,gBAAiB,eAAgB,gBAAiBlC,EAAM,MAAM,EAChG,cAAe,IAAMmC,EAErB,QAAS,CAACnC,EAAOoC,IAASpC,EAAM,OAAS,GAAKoC,EAAK,KAAOhB,EAE1D,MAAM,KAAKN,EAAY,CAClB,IACH,MAAMuB,EAAW,CAAC,CAACvB,EAAK,WAAW,OAC7BxB,EAAMC,EAAe,qDAAsD,CAChF,UAAW8C,EAAW,gBAAkB,SACxC,GAAIvB,EAAK,WAAW,GACpB,EACK,OAAAtB,QAAM,KAAKF,CAAG,EAGpBgD,EAAK,qBAAsBxB,CAAI,EAExB,QACQ,CACR,QACR,CACD,EACA,MAAM,UAAUd,EAAeoC,EAAYG,EAAa,CAChD,eAAQ,IAAIvC,EAAM,IAAIc,GAAQ,KAAK,KAAKA,EAAMsB,EAAMG,CAAG,CAAC,CAAC,CACjE,EAEA,MAAO,EACP,OAAQ,IAAM,EACf,CAAC,EAEDC,EAAmBR,EAAM,ECpCZ,MAAAA,GAAS,IAAIC,EAAW,CACpC,GAAI,gBACJ,YAAa,IAAMR,EAAE,QAAS,eAAe,EAC7C,cAAe,IAAM,GAErB,QAAS,CAACzB,EAAOoC,IAAS,CACzBrB,EACAC,EACAC,EACAC,CAAA,EAGC,SAASkB,EAAK,EAAE,EAElB,MAAM,KAAKtB,EAAY,CACf,kBAAI,MAAM,OAAO,UACvB,KACA,CAAE,KAAM,QAAS,OAAQA,EAAK,MAAO,EACrC,CAAE,IAAKA,EAAK,QAAS,SAAU,MAAO,GAEhC,IACR,EAGA,MAAO,KACP,QAAS2B,EAAY,MACtB,CAAC,EAEDD,EAAmBR,EAAM,ECxBZ,MAAAA,GAAS,IAAIC,EAAW,CACpC,GAAI,eACJ,YAAcjC,GAAkBkC,EAAE,gBAAiB,eAAgB,gBAAiBlC,EAAM,MAAM,EAChG,cAAe,IAAM0C,EAErB,QAAS,CAAC1C,EAAOoC,IACZ,EAAAA,EAAK,KAAOhB,GAIZpB,EAAM,SAAW,GAMjBA,EAAM,KAAac,KAAK,WAAW,WACnCA,EAAK,WAAW,aAAe,OAAO,GAAG,MAAM,uBAAuB,GAO3E,MAAM,KAAKA,EAAY,CAClB,IACH,MAAMuB,EAAW,CAAC,CAACvB,EAAK,WAAW,OAC7BxB,EAAMC,EAAe,6CAA8C,CACxE,UAAW8C,EAAW,gBAAkB,SACxC,GAAIvB,EAAK,WAAW,GACpB,EACK,OAAAtB,QAAM,OAAOF,CAAG,EAGtBgD,EAAK,qBAAsBxB,CAAI,EAExB,QACQ,CACR,QACR,CACD,EACA,MAAM,UAAUd,EAAeoC,EAAYG,EAAa,CAChD,eAAQ,IAAIvC,EAAM,IAAIc,GAAQ,KAAK,KAAKA,EAAMsB,EAAMG,CAAG,CAAC,CAAC,CACjE,EAEA,MAAO,EACP,OAAQ,IAAM,EACf,CAAC,EAEDC,EAAmBR,EAAM,ECjDZ,MAAAA,GAAS,IAAIC,EAAW,CACpC,GAAI,gBACJ,YAAcjC,GAAkBkC,EAAE,gBAAiB,gBAAiB,iBAAkBlC,EAAM,MAAM,EAElG,cAAe,IAAM2C,EAErB,QAAS,CAAC3C,EAAOoC,IAASpC,EAAM,OAAS,GAAKoC,EAAK,KAAOjB,EAE1D,MAAM,KAAKL,EAAY,CAClB,IACG,MAAAxB,EAAMC,EAAe,+CAAgD,CAC1E,GAAIuB,EAAK,WAAW,GACpB,EACK,OAAAtB,QAAM,KAAKF,CAAG,EAGpBgD,EAAK,qBAAsBxB,CAAI,EAExB,QACQ,CACR,QACR,CACD,EACA,MAAM,UAAUd,EAAeoC,EAAYG,EAAa,CAChD,eAAQ,IAAIvC,EAAM,IAAIc,GAAQ,KAAK,KAAKA,EAAMsB,EAAMG,CAAG,CAAC,CAAC,CACjE,EAEA,MAAO,EACP,OAAQ,IAAM,EACf,CAAC,EAEDC,EAAmBR,EAAM,EC9CzB,MAAeY,GAAA,kpBCAf,IAAA7E,EAAA8E,EAmBA,MAAMC,KAAaD,GAAQ9E,EAAA,wCAAR,KAAqB,OAAAA,EAAA,8CAArB,KAAsD,OAAA8E,EAAA,WAAY,IACjF,SAAS,cAAc,qBAAqB,IAAM,KAEhDE,GAAoB,CAACC,EAAgBC,EAAU,KAAU,CACxD,MAAA3D,EAAMwD,GAAa,2BAA6B,sBAChDI,EAAYC,EAAYF,EAAU3D,EAAMA,EAAM,sBAAuB,CAAE,OAAA0D,EAAQ,EACrF,MAAO,yIAES,OAASE,EAAA,uCAE1B,EAEME,EAActC,GACZA,EAAK,WAAW,YAAc,OAGzBkB,GAAS,IAAIC,EAAW,CACpC,GAAI,iBACJ,YAAYjC,EAAe,CArC5B,IAAAjC,EAAA8E,EAAAQ,EAsCQ,MAAAvC,EAAOd,EAAM,CAAC,EACdsD,EAAa,OAAO,SAAOvF,EAAM+C,iBAAA,aAAN,KAAA/C,SAAmB,aAAkB,MAAE,EAAE,OACpEwF,GAAUV,EAAM/B,iBAAA,aAAN,YAAA+B,EAAmB,YAE/B,OAAAS,EAAW,OAAS,GACnBC,MAAYF,EAAApF,MAAA,KAAkB,OAAAoF,EAAA,MAAOD,EAAWtC,CAAI,EACjDW,EAAE,gBAAiB,QAAQ,EAG5B,EACR,EAEA,MAAMzB,EAAe,CAlDtB,IAAAjC,EAAA8E,EAAAQ,EAAAG,EAAAC,EAmDQ,MAAA3C,EAAOd,EAAM,CAAC,EACduD,GAAUxF,EAAM+C,iBAAA,aAAN,YAAA/C,EAAmB,YAC7B2F,GAAmBb,EAAM/B,iBAAA,aAAN,YAAA+B,EAAmB,sBAG5C,OAAI,MAAM,SAAQQ,EAAKvC,EAAA,aAAL,KAAkB,OAAAuC,EAAA,cAAc,KAAKG,EAAA1C,EAAK,aAAL,YAAA0C,EAAkB,aAAe,UAAS,EACzF/B,EAAE,gBAAiB,6CAA6C,EAGpE8B,IAAYA,MAAYE,EAAexF,EAAA,IAAf,cAAkB,MAAOmF,EAAWtC,CAAI,GAC5DW,EAAE,gBAAiB,+BAAgC,CAAE,iBAAAiC,CAAkB,GAGxEjC,EAAE,gBAAiB,sBAAsB,CACjD,EAEA,cAAczB,EAAe,CAnE9B,IAAAjC,EAAA8E,EAAAQ,EAAAG,EAAAC,EAoEQ,MAAA3C,EAAOd,EAAM,CAAC,EACdsD,EAAa,OAAO,SAAOvF,EAAM+C,iBAAA,aAAN,KAAA/C,SAAmB,aAAkB,MAAE,EAAE,OAG1E,GAAI,MAAM,SAAQ8E,EAAA/B,EAAK,aAAL,KAAA+B,SAAkB,aAAc,MAAKQ,EAAKvC,EAAA,aAAL,KAAkB,OAAAuC,EAAA,eAAe,QAAS,EACzF,OAAA3B,EAIJ,GAAA4B,EAAW,SAASK,EAAK,eAAe,GACxCL,EAAW,SAASK,EAAK,gBAAgB,EACrC,OAAA9B,EAIJ,GAAAyB,EAAW,SAASK,EAAK,gBAAgB,GACzCL,EAAW,SAASK,EAAK,uBAAuB,EAC5C,OAAA/B,EAIR,GAAI0B,EAAW,SAASK,EAAK,iBAAiB,EACtC,OAAAf,GAGF,MAAAW,GAAUC,EAAM1C,iBAAA,aAAN,KAAmB,OAAA0C,EAAA,YAC/B,OAAAD,IAAYA,MAAYE,EAAexF,EAAA,IAAf,cAAkB,MAAOmF,EAAWtC,CAAI,GAC5DiC,GAAkBQ,EAASH,EAAWtC,CAAI,CAAC,EAG5CY,CACR,EAEA,QAAQ1B,EAAe,CArGxB,IAAAjC,EAAA8E,EAAAQ,EAsGM,GAAArD,EAAM,SAAW,EACb,SAGF,MAAAc,EAAOd,EAAM,CAAC,EACduD,GAAUxF,EAAM+C,iBAAA,aAAN,YAAA/C,EAAmB,YAU/B,OATY,MAAM,SAAQ8E,EAAA/B,EAAK,aAAL,YAAA+B,EAAkB,aAAc,IAS1DU,IAAYA,MAAYF,EAAepF,EAAA,IAAf,cAAkB,MAAOmF,EAAWtC,CAAI,GAC5D,IAGAA,EAAK,YAActC,EAAW,SAAW,CAClD,EAEA,MAAM,KAAKsC,EAAYsB,EAAYG,EAAa,CA5HjD,IAAAxE,EAAA8E,EAAAQ,EAAAG,EA8HE,OAAK1C,EAAK,YAActC,EAAW,OAClCgF,GAAAH,GAAAR,GAAA9E,EAAA,OAAO,MAAP,KAAAA,SAAY,QAAZ,YAAA8E,EAAmB,UAAnB,KAA4B,OAAAQ,EAAA,eAA5B,MAA2CG,EAAA,KAAAH,EAAA,WACpCO,GAAc,KAAK9C,EAAMsB,EAAMG,CAAG,GAEnC,IACR,EAEA,OAAQ,IAAM,EAEf,CAAC,EAEDC,EAAmBR,EAAM,EC5HzBX,KAEAwC,EAAoB,sBAAuB,CAAE,GAAI,yBAA2B,GAC5EA,EAAoB,iBAAkB,CAAE,GAAI,wBAA0B,GACtEA,EAAoB,wBAAyB,CAAE,IAAK,4CAA6C","names":["logger","getLoggerBuilder","_a","rootPath","getCurrentUser","headers","ocsEntryToNode","ocsEntry","mime","__vitePreload","__vite_default__","Permission","isFolder","hasPreview","Node","Folder","File","fileid","path","source","generateRemoteUrl","mtime","error","getShares","shared_with_me","url","generateOcsUrl","axios","getSharedWithYou","getSharedWithOthers","getRemoteShares","getPendingShares","getRemotePendingShares","getDeletedShares","groupBy","nodes","key","acc","curr","getContents","sharedWithYou","sharedWithOthers","pendingShares","deletedshares","filterTypes","promises","data","response","contents","node","sharesViewId","sharedWithYouViewId","sharedWithOthersViewId","sharingByLinksViewId","deletedSharesViewId","pendingSharesViewId","registerSharingViews","Navigation","getNavigation","View","t","AccountPlusSvg","AccountSvg","AccountGroupSvg","LinkSvg","DeleteSvg","AccountClockSvg","action","FileAction","n","CheckSvg","view","isRemote","emit","dir","registerFileAction","DefaultType","CloseSvg","ArrowULeftTopSvg","CircleSvg","_b","isDarkMode","generateAvatarSvg","userId","isGuest","avatarUrl","generateUrl","isExternal","_c","shareTypes","ownerId","_d","_e","ownerDisplayName","Type","sidebarAction","registerDavProperty"],"ignoreList":[],"sources":["../apps/files_sharing/src/services/logger.ts","../apps/files_sharing/src/services/SharingService.ts","../apps/files_sharing/src/views/shares.ts","../apps/files_sharing/src/actions/acceptShareAction.ts","../apps/files_sharing/src/actions/openInFilesAction.ts","../apps/files_sharing/src/actions/rejectShareAction.ts","../apps/files_sharing/src/actions/restoreShareAction.ts","../core/img/apps/circles.svg?raw","../apps/files_sharing/src/actions/sharingStatusAction.ts","../apps/files_sharing/src/init.ts"],"sourcesContent":["/**\n * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { getLoggerBuilder } from '@nextcloud/logger'\n\nexport default getLoggerBuilder()\n\t.setApp('files_sharing')\n\t.detectUser()\n\t.build()\n","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n/* eslint-disable camelcase, n/no-extraneous-import */\nimport type { AxiosPromise } from 'axios'\nimport type { OCSResponse } from '@nextcloud/typings/ocs'\n\nimport { Folder, File, type ContentsWithRoot, Permission } from '@nextcloud/files'\nimport { generateOcsUrl, generateRemoteUrl } from '@nextcloud/router'\nimport { getCurrentUser } from '@nextcloud/auth'\nimport axios from '@nextcloud/axios'\n\nimport logger from './logger'\n\nexport const rootPath = `/files/${getCurrentUser()?.uid}`\n\nconst headers = {\n\t'Content-Type': 'application/json',\n}\n\nconst ocsEntryToNode = async function(ocsEntry: any): Promise<Folder | File | null> {\n\ttry {\n\t\t// Federated share handling\n\t\tif (ocsEntry?.remote_id !== undefined) {\n\t\t\tconst mime = (await import('mime')).default\n\t\t\t// This won't catch files without an extension, but this is the best we can do\n\t\t\tocsEntry.mimetype = mime.getType(ocsEntry.name)\n\t\t\tocsEntry.item_type = ocsEntry.mimetype ? 'file' : 'folder'\n\n\t\t\t// Need to set permissions to NONE for federated shares\n\t\t\tocsEntry.item_permissions = Permission.NONE\n\t\t\tocsEntry.permissions = Permission.NONE\n\n\t\t\tocsEntry.uid_owner = ocsEntry.owner\n\t\t\t// TODO: have the real display name stored somewhere\n\t\t\tocsEntry.displayname_owner = ocsEntry.owner\n\t\t}\n\n\t\tconst isFolder = ocsEntry?.item_type === 'folder'\n\t\tconst hasPreview = ocsEntry?.has_preview === true\n\t\tconst Node = isFolder ? Folder : File\n\n\t\t// If this is an external share that is not yet accepted,\n\t\t// we don't have an id. We can fallback to the row id temporarily\n\t\tconst fileid = ocsEntry.file_source || ocsEntry.id\n\n\t\t// Generate path and strip double slashes\n\t\tconst path = ocsEntry?.path || ocsEntry.file_target || ocsEntry.name\n\t\tconst source = generateRemoteUrl(`dav/${rootPath}/${path}`.replaceAll(/\\/\\//gm, '/'))\n\n\t\t// Prefer share time if more recent than item mtime\n\t\tlet mtime = ocsEntry?.item_mtime ? new Date((ocsEntry.item_mtime) * 1000) : undefined\n\t\tif (ocsEntry?.stime > (ocsEntry?.item_mtime || 0)) {\n\t\t\tmtime = new Date((ocsEntry.stime) * 1000)\n\t\t}\n\n\t\treturn new Node({\n\t\t\tid: fileid,\n\t\t\tsource,\n\t\t\towner: ocsEntry?.uid_owner,\n\t\t\tmime: ocsEntry?.mimetype || 'application/octet-stream',\n\t\t\tmtime,\n\t\t\tsize: ocsEntry?.item_size,\n\t\t\tpermissions: ocsEntry?.item_permissions || ocsEntry?.permissions,\n\t\t\troot: rootPath,\n\t\t\tattributes: {\n\t\t\t\t...ocsEntry,\n\t\t\t\t'has-preview': hasPreview,\n\t\t\t\t// Also check the sharingStatusAction.ts code\n\t\t\t\t'owner-id': ocsEntry?.uid_owner,\n\t\t\t\t'owner-display-name': ocsEntry?.displayname_owner,\n\t\t\t\t'share-types': ocsEntry?.share_type,\n\t\t\t\tfavorite: ocsEntry?.tags?.includes(window.OC.TAG_FAVORITE) ? 1 : 0,\n\t\t\t},\n\t\t})\n\t} catch (error) {\n\t\tlogger.error('Error while parsing OCS entry', { error })\n\t\treturn null\n\t}\n}\n\nconst getShares = function(shared_with_me = false): AxiosPromise<OCSResponse<any>> {\n\tconst url = generateOcsUrl('apps/files_sharing/api/v1/shares')\n\treturn axios.get(url, {\n\t\theaders,\n\t\tparams: {\n\t\t\tshared_with_me,\n\t\t\tinclude_tags: true,\n\t\t},\n\t})\n}\n\nconst getSharedWithYou = function(): AxiosPromise<OCSResponse<any>> {\n\treturn getShares(true)\n}\n\nconst getSharedWithOthers = function(): AxiosPromise<OCSResponse<any>> {\n\treturn getShares()\n}\n\nconst getRemoteShares = function(): AxiosPromise<OCSResponse<any>> {\n\tconst url = generateOcsUrl('apps/files_sharing/api/v1/remote_shares')\n\treturn axios.get(url, {\n\t\theaders,\n\t\tparams: {\n\t\t\tinclude_tags: true,\n\t\t},\n\t})\n}\n\nconst getPendingShares = function(): AxiosPromise<OCSResponse<any>> {\n\tconst url = generateOcsUrl('apps/files_sharing/api/v1/shares/pending')\n\treturn axios.get(url, {\n\t\theaders,\n\t\tparams: {\n\t\t\tinclude_tags: true,\n\t\t},\n\t})\n}\n\nconst getRemotePendingShares = function(): AxiosPromise<OCSResponse<any>> {\n\tconst url = generateOcsUrl('apps/files_sharing/api/v1/remote_shares/pending')\n\treturn axios.get(url, {\n\t\theaders,\n\t\tparams: {\n\t\t\tinclude_tags: true,\n\t\t},\n\t})\n}\n\nconst getDeletedShares = function(): AxiosPromise<OCSResponse<any>> {\n\tconst url = generateOcsUrl('apps/files_sharing/api/v1/deletedshares')\n\treturn axios.get(url, {\n\t\theaders,\n\t\tparams: {\n\t\t\tinclude_tags: true,\n\t\t},\n\t})\n}\n\n/**\n * Group an array of objects (here Nodes) by a key\n * and return an array of arrays of them.\n */\nconst groupBy = function(nodes: (Folder | File)[], key: string) {\n\treturn Object.values(nodes.reduce(function(acc, curr) {\n\t\t(acc[curr[key]] = acc[curr[key]] || []).push(curr)\n\t\treturn acc\n\t}, {})) as (Folder | File)[][]\n}\n\nexport const getContents = async (sharedWithYou = true, sharedWithOthers = true, pendingShares = false, deletedshares = false, filterTypes: number[] = []): Promise<ContentsWithRoot> => {\n\tconst promises = [] as AxiosPromise<OCSResponse<any>>[]\n\n\tif (sharedWithYou) {\n\t\tpromises.push(getSharedWithYou(), getRemoteShares())\n\t}\n\tif (sharedWithOthers) {\n\t\tpromises.push(getSharedWithOthers())\n\t}\n\tif (pendingShares) {\n\t\tpromises.push(getPendingShares(), getRemotePendingShares())\n\t}\n\tif (deletedshares) {\n\t\tpromises.push(getDeletedShares())\n\t}\n\n\tconst responses = await Promise.all(promises)\n\tconst data = responses.map((response) => response.data.ocs.data).flat()\n\tlet contents = (await Promise.all(data.map(ocsEntryToNode)))\n\t\t.filter((node) => node !== null) as (Folder | File)[]\n\n\tif (filterTypes.length > 0) {\n\t\tcontents = contents.filter((node) => filterTypes.includes(node.attributes?.share_type))\n\t}\n\n\t// Merge duplicate shares and group their attributes\n\t// Also check the sharingStatusAction.ts code\n\tcontents = groupBy(contents, 'source').map((nodes) => {\n\t\tconst node = nodes[0]\n\t\tnode.attributes['share-types'] = nodes.map(node => node.attributes['share-types'])\n\t\treturn node\n\t})\n\n\treturn {\n\t\tfolder: new Folder({\n\t\t\tid: 0,\n\t\t\tsource: generateRemoteUrl('dav' + rootPath),\n\t\t\towner: getCurrentUser()?.uid || null,\n\t\t}),\n\t\tcontents,\n\t}\n}\n","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { translate as t } from '@nextcloud/l10n'\nimport { View, getNavigation } from '@nextcloud/files'\nimport AccountClockSvg from '@mdi/svg/svg/account-clock.svg?raw'\nimport AccountGroupSvg from '@mdi/svg/svg/account-group.svg?raw'\nimport AccountPlusSvg from '@mdi/svg/svg/account-plus.svg?raw'\nimport AccountSvg from '@mdi/svg/svg/account.svg?raw'\nimport DeleteSvg from '@mdi/svg/svg/delete.svg?raw'\nimport LinkSvg from '@mdi/svg/svg/link.svg?raw'\n\nimport { getContents } from '../services/SharingService'\n\nexport const sharesViewId = 'shareoverview'\nexport const sharedWithYouViewId = 'sharingin'\nexport const sharedWithOthersViewId = 'sharingout'\nexport const sharingByLinksViewId = 'sharinglinks'\nexport const deletedSharesViewId = 'deletedshares'\nexport const pendingSharesViewId = 'pendingshares'\n\nexport default () => {\n\tconst Navigation = getNavigation()\n\tNavigation.register(new View({\n\t\tid: sharesViewId,\n\t\tname: t('files_sharing', 'Shares'),\n\t\tcaption: t('files_sharing', 'Overview of shared files.'),\n\n\t\temptyTitle: t('files_sharing', 'No shares'),\n\t\temptyCaption: t('files_sharing', 'Files and folders you shared or have been shared with you will show up here'),\n\n\t\ticon: AccountPlusSvg,\n\t\torder: 20,\n\n\t\tcolumns: [],\n\n\t\tgetContents: () => getContents(),\n\t}))\n\n\tNavigation.register(new View({\n\t\tid: sharedWithYouViewId,\n\t\tname: t('files_sharing', 'Shared with you'),\n\t\tcaption: t('files_sharing', 'List of files that are shared with you.'),\n\n\t\temptyTitle: t('files_sharing', 'Nothing shared with you yet'),\n\t\temptyCaption: t('files_sharing', 'Files and folders others shared with you will show up here'),\n\n\t\ticon: AccountSvg,\n\t\torder: 1,\n\t\tparent: sharesViewId,\n\n\t\tcolumns: [],\n\n\t\tgetContents: () => getContents(true, false, false, false),\n\t}))\n\n\tNavigation.register(new View({\n\t\tid: sharedWithOthersViewId,\n\t\tname: t('files_sharing', 'Shared with others'),\n\t\tcaption: t('files_sharing', 'List of files that you shared with others.'),\n\n\t\temptyTitle: t('files_sharing', 'Nothing shared yet'),\n\t\temptyCaption: t('files_sharing', 'Files and folders you shared will show up here'),\n\n\t\ticon: AccountGroupSvg,\n\t\torder: 2,\n\t\tparent: sharesViewId,\n\n\t\tcolumns: [],\n\n\t\tgetContents: () => getContents(false, true, false, false),\n\t}))\n\n\tNavigation.register(new View({\n\t\tid: sharingByLinksViewId,\n\t\tname: t('files_sharing', 'Shared by link'),\n\t\tcaption: t('files_sharing', 'List of files that are shared by link.'),\n\n\t\temptyTitle: t('files_sharing', 'No shared links'),\n\t\temptyCaption: t('files_sharing', 'Files and folders you shared by link will show up here'),\n\n\t\ticon: LinkSvg,\n\t\torder: 3,\n\t\tparent: sharesViewId,\n\n\t\tcolumns: [],\n\n\t\tgetContents: () => getContents(false, true, false, false, [window.OC.Share.SHARE_TYPE_LINK]),\n\t}))\n\n\tNavigation.register(new View({\n\t\tid: deletedSharesViewId,\n\t\tname: t('files_sharing', 'Deleted shares'),\n\t\tcaption: t('files_sharing', 'List of shares you left.'),\n\n\t\temptyTitle: t('files_sharing', 'No deleted shares'),\n\t\temptyCaption: t('files_sharing', 'Shares you have left will show up here'),\n\n\t\ticon: DeleteSvg,\n\t\torder: 4,\n\t\tparent: sharesViewId,\n\n\t\tcolumns: [],\n\n\t\tgetContents: () => getContents(false, false, false, true),\n\t}))\n\n\tNavigation.register(new View({\n\t\tid: pendingSharesViewId,\n\t\tname: t('files_sharing', 'Pending shares'),\n\t\tcaption: t('files_sharing', 'List of unapproved shares.'),\n\n\t\temptyTitle: t('files_sharing', 'No pending shares'),\n\t\temptyCaption: t('files_sharing', 'Shares you have received but not approved will show up here'),\n\n\t\ticon: AccountClockSvg,\n\t\torder: 5,\n\t\tparent: sharesViewId,\n\n\t\tcolumns: [],\n\n\t\tgetContents: () => getContents(false, false, true, false),\n\t}))\n}\n","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport type { Node, View } from '@nextcloud/files'\n\nimport { emit } from '@nextcloud/event-bus'\nimport { generateOcsUrl } from '@nextcloud/router'\nimport { registerFileAction, FileAction } from '@nextcloud/files'\nimport { translatePlural as n } from '@nextcloud/l10n'\nimport axios from '@nextcloud/axios'\nimport CheckSvg from '@mdi/svg/svg/check.svg?raw'\n\nimport { pendingSharesViewId } from '../views/shares'\n\nexport const action = new FileAction({\n\tid: 'accept-share',\n\tdisplayName: (nodes: Node[]) => n('files_sharing', 'Accept share', 'Accept shares', nodes.length),\n\ticonSvgInline: () => CheckSvg,\n\n\tenabled: (nodes, view) => nodes.length > 0 && view.id === pendingSharesViewId,\n\n\tasync exec(node: Node) {\n\t\ttry {\n\t\t\tconst isRemote = !!node.attributes.remote\n\t\t\tconst url = generateOcsUrl('apps/files_sharing/api/v1/{shareBase}/pending/{id}', {\n\t\t\t\tshareBase: isRemote ? 'remote_shares' : 'shares',\n\t\t\t\tid: node.attributes.id,\n\t\t\t})\n\t\t\tawait axios.post(url)\n\n\t\t\t// Remove from current view\n\t\t\temit('files:node:deleted', node)\n\n\t\t\treturn true\n\t\t} catch (error) {\n\t\t\treturn false\n\t\t}\n\t},\n\tasync execBatch(nodes: Node[], view: View, dir: string) {\n\t\treturn Promise.all(nodes.map(node => this.exec(node, view, dir)))\n\t},\n\n\torder: 1,\n\tinline: () => true,\n})\n\nregisterFileAction(action)\n","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport type { Node } from '@nextcloud/files'\n\nimport { registerFileAction, FileAction, DefaultType } from '@nextcloud/files'\nimport { translate as t } from '@nextcloud/l10n'\n\nimport { sharesViewId, sharedWithYouViewId, sharedWithOthersViewId, sharingByLinksViewId } from '../views/shares'\n\nexport const action = new FileAction({\n\tid: 'open-in-files',\n\tdisplayName: () => t('files', 'Open in Files'),\n\ticonSvgInline: () => '',\n\n\tenabled: (nodes, view) => [\n\t\tsharesViewId,\n\t\tsharedWithYouViewId,\n\t\tsharedWithOthersViewId,\n\t\tsharingByLinksViewId,\n\t\t// Deleted and pending shares are not\n\t\t// accessible in the files app.\n\t].includes(view.id),\n\n\tasync exec(node: Node) {\n\t\twindow.OCP.Files.Router.goToRoute(\n\t\t\tnull, // use default route\n\t\t\t{ view: 'files', fileid: node.fileid },\n\t\t\t{ dir: node.dirname, openfile: 'true' },\n\t\t)\n\t\treturn null\n\t},\n\n\t// Before openFolderAction\n\torder: -1000,\n\tdefault: DefaultType.HIDDEN,\n})\n\nregisterFileAction(action)\n","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport type { Node, View } from '@nextcloud/files'\n\nimport { emit } from '@nextcloud/event-bus'\nimport { generateOcsUrl } from '@nextcloud/router'\nimport { registerFileAction, FileAction } from '@nextcloud/files'\nimport { translatePlural as n } from '@nextcloud/l10n'\nimport axios from '@nextcloud/axios'\nimport CloseSvg from '@mdi/svg/svg/close.svg?raw'\n\nimport { pendingSharesViewId } from '../views/shares'\n\nexport const action = new FileAction({\n\tid: 'reject-share',\n\tdisplayName: (nodes: Node[]) => n('files_sharing', 'Reject share', 'Reject shares', nodes.length),\n\ticonSvgInline: () => CloseSvg,\n\n\tenabled: (nodes, view) => {\n\t\tif (view.id !== pendingSharesViewId) {\n\t\t\treturn false\n\t\t}\n\n\t\tif (nodes.length === 0) {\n\t\t\treturn false\n\t\t}\n\n\t\t// disable rejecting group shares from the pending list because they anyway\n\t\t// land back into that same list after rejecting them\n\t\tif (nodes.some(node => node.attributes.remote_id\n\t\t\t&& node.attributes.share_type === window.OC.Share.SHARE_TYPE_REMOTE_GROUP)) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn true\n\t},\n\n\tasync exec(node: Node) {\n\t\ttry {\n\t\t\tconst isRemote = !!node.attributes.remote\n\t\t\tconst url = generateOcsUrl('apps/files_sharing/api/v1/{shareBase}/{id}', {\n\t\t\t\tshareBase: isRemote ? 'remote_shares' : 'shares',\n\t\t\t\tid: node.attributes.id,\n\t\t\t})\n\t\t\tawait axios.delete(url)\n\n\t\t\t// Remove from current view\n\t\t\temit('files:node:deleted', node)\n\n\t\t\treturn true\n\t\t} catch (error) {\n\t\t\treturn false\n\t\t}\n\t},\n\tasync execBatch(nodes: Node[], view: View, dir: string) {\n\t\treturn Promise.all(nodes.map(node => this.exec(node, view, dir)))\n\t},\n\n\torder: 2,\n\tinline: () => true,\n})\n\nregisterFileAction(action)\n","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport type { Node, View } from '@nextcloud/files'\n\nimport { emit } from '@nextcloud/event-bus'\nimport { FileAction, registerFileAction } from '@nextcloud/files'\nimport { generateOcsUrl } from '@nextcloud/router'\nimport { translatePlural as n } from '@nextcloud/l10n'\nimport ArrowULeftTopSvg from '@mdi/svg/svg/arrow-u-left-top.svg?raw'\nimport axios from '@nextcloud/axios'\n\nimport { deletedSharesViewId } from '../views/shares'\n\nexport const action = new FileAction({\n\tid: 'restore-share',\n\tdisplayName: (nodes: Node[]) => n('files_sharing', 'Restore share', 'Restore shares', nodes.length),\n\n\ticonSvgInline: () => ArrowULeftTopSvg,\n\n\tenabled: (nodes, view) => nodes.length > 0 && view.id === deletedSharesViewId,\n\n\tasync exec(node: Node) {\n\t\ttry {\n\t\t\tconst url = generateOcsUrl('apps/files_sharing/api/v1/deletedshares/{id}', {\n\t\t\t\tid: node.attributes.id,\n\t\t\t})\n\t\t\tawait axios.post(url)\n\n\t\t\t// Remove from current view\n\t\t\temit('files:node:deleted', node)\n\n\t\t\treturn true\n\t\t} catch (error) {\n\t\t\treturn false\n\t\t}\n\t},\n\tasync execBatch(nodes: Node[], view: View, dir: string) {\n\t\treturn Promise.all(nodes.map(node => this.exec(node, view, dir)))\n\t},\n\n\torder: 1,\n\tinline: () => true,\n})\n\nregisterFileAction(action)\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M12,5.5A3.5,3.5 0 0,1 15.5,9A3.5,3.5 0 0,1 12,12.5A3.5,3.5 0 0,1 8.5,9A3.5,3.5 0 0,1 12,5.5M5,8C5.56,8 6.08,8.15 6.53,8.42C6.38,9.85 6.8,11.27 7.66,12.38C7.16,13.34 6.16,14 5,14A3,3 0 0,1 2,11A3,3 0 0,1 5,8M19,8A3,3 0 0,1 22,11A3,3 0 0,1 19,14C17.84,14 16.84,13.34 16.34,12.38C17.2,11.27 17.62,9.85 17.47,8.42C17.92,8.15 18.44,8 19,8M5.5,18.25C5.5,16.18 8.41,14.5 12,14.5C15.59,14.5 18.5,16.18 18.5,18.25V20H5.5V18.25M0,20V18.5C0,17.11 1.89,15.94 4.45,15.6C3.86,16.28 3.5,17.22 3.5,18.25V20H0M24,20H20.5V18.25C20.5,17.22 20.14,16.28 19.55,15.6C22.11,15.94 24,17.11 24,18.5V20Z\\\" /></svg>\"","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { Node, View, registerFileAction, FileAction, Permission } from '@nextcloud/files'\nimport { translate as t } from '@nextcloud/l10n'\nimport { Type } from '@nextcloud/sharing'\n\nimport AccountGroupSvg from '@mdi/svg/svg/account-group.svg?raw'\nimport AccountPlusSvg from '@mdi/svg/svg/account-plus.svg?raw'\nimport LinkSvg from '@mdi/svg/svg/link.svg?raw'\nimport CircleSvg from '../../../../core/img/apps/circles.svg?raw'\n\nimport { action as sidebarAction } from '../../../files/src/actions/sidebarAction'\nimport { generateUrl } from '@nextcloud/router'\nimport { getCurrentUser } from '@nextcloud/auth'\n\nimport './sharingStatusAction.scss'\n\nconst isDarkMode = window?.matchMedia?.('(prefers-color-scheme: dark)')?.matches === true\n\t|| document.querySelector('[data-themes*=dark]') !== null\n\nconst generateAvatarSvg = (userId: string, isGuest = false) => {\n\tconst url = isDarkMode ? '/avatar/{userId}/32/dark' : '/avatar/{userId}/32'\n\tconst avatarUrl = generateUrl(isGuest ? url : url + '?guestFallback=true', { userId })\n\treturn `<svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\"\n\t\txmlns=\"http://www.w3.org/2000/svg\" class=\"sharing-status__avatar\">\n\t\t<image href=\"${avatarUrl}\" height=\"32\" width=\"32\" />\n\t</svg>`\n}\n\nconst isExternal = (node: Node) => {\n\treturn node.attributes.remote_id !== undefined\n}\n\nexport const action = new FileAction({\n\tid: 'sharing-status',\n\tdisplayName(nodes: Node[]) {\n\t\tconst node = nodes[0]\n\t\tconst shareTypes = Object.values(node?.attributes?.['share-types'] || {}).flat() as number[]\n\t\tconst ownerId = node?.attributes?.['owner-id']\n\n\t\tif (shareTypes.length > 0\n\t\t\t|| (ownerId !== getCurrentUser()?.uid || isExternal(node))) {\n\t\t\treturn t('files_sharing', 'Shared')\n\t\t}\n\n\t\treturn ''\n\t},\n\n\ttitle(nodes: Node[]) {\n\t\tconst node = nodes[0]\n\t\tconst ownerId = node?.attributes?.['owner-id']\n\t\tconst ownerDisplayName = node?.attributes?.['owner-display-name']\n\n\t\t// Mixed share types\n\t\tif (Array.isArray(node.attributes?.['share-types']) && node.attributes?.['share-types'].length > 1) {\n\t\t\treturn t('files_sharing', 'Shared multiple times with different people')\n\t\t}\n\n\t\tif (ownerId && (ownerId !== getCurrentUser()?.uid || isExternal(node))) {\n\t\t\treturn t('files_sharing', 'Shared by {ownerDisplayName}', { ownerDisplayName })\n\t\t}\n\n\t\treturn t('files_sharing', 'Show sharing options')\n\t},\n\n\ticonSvgInline(nodes: Node[]) {\n\t\tconst node = nodes[0]\n\t\tconst shareTypes = Object.values(node?.attributes?.['share-types'] || {}).flat() as number[]\n\n\t\t// Mixed share types\n\t\tif (Array.isArray(node.attributes?.['share-types']) && node.attributes?.['share-types'].length > 1) {\n\t\t\treturn AccountPlusSvg\n\t\t}\n\n\t\t// Link shares\n\t\tif (shareTypes.includes(Type.SHARE_TYPE_LINK)\n\t\t\t|| shareTypes.includes(Type.SHARE_TYPE_EMAIL)) {\n\t\t\treturn LinkSvg\n\t\t}\n\n\t\t// Group shares\n\t\tif (shareTypes.includes(Type.SHARE_TYPE_GROUP)\n\t\t\t|| shareTypes.includes(Type.SHARE_TYPE_REMOTE_GROUP)) {\n\t\t\treturn AccountGroupSvg\n\t\t}\n\n\t\t// Circle shares\n\t\tif (shareTypes.includes(Type.SHARE_TYPE_CIRCLE)) {\n\t\t\treturn CircleSvg\n\t\t}\n\n\t\tconst ownerId = node?.attributes?.['owner-id']\n\t\tif (ownerId && (ownerId !== getCurrentUser()?.uid || isExternal(node))) {\n\t\t\treturn generateAvatarSvg(ownerId, isExternal(node))\n\t\t}\n\n\t\treturn AccountPlusSvg\n\t},\n\n\tenabled(nodes: Node[]) {\n\t\tif (nodes.length !== 1) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst node = nodes[0]\n\t\tconst ownerId = node?.attributes?.['owner-id']\n\t\tconst isMixed = Array.isArray(node.attributes?.['share-types'])\n\n\t\t// If the node is shared multiple times with\n\t\t// different share types to the current user\n\t\tif (isMixed) {\n\t\t\treturn true\n\t\t}\n\n\t\t// If the node is shared by someone else\n\t\tif (ownerId && (ownerId !== getCurrentUser()?.uid || isExternal(node))) {\n\t\t\treturn true\n\t\t}\n\n\t\treturn (node.permissions & Permission.SHARE) !== 0\n\t},\n\n\tasync exec(node: Node, view: View, dir: string) {\n\t\t// You need read permissions to see the sidebar\n\t\tif ((node.permissions & Permission.READ) !== 0) {\n\t\t\twindow.OCA?.Files?.Sidebar?.setActiveTab?.('sharing')\n\t\t\treturn sidebarAction.exec(node, view, dir)\n\t\t}\n\t\treturn null\n\t},\n\n\tinline: () => true,\n\n})\n\nregisterFileAction(action)\n","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { registerDavProperty } from '@nextcloud/files'\nimport registerSharingViews from './views/shares'\n\nimport './actions/acceptShareAction'\nimport './actions/openInFilesAction'\nimport './actions/rejectShareAction'\nimport './actions/restoreShareAction'\nimport './actions/sharingStatusAction'\n\nregisterSharingViews()\n\nregisterDavProperty('nc:share-attributes', { nc: 'http://nextcloud.org/ns' })\nregisterDavProperty('oc:share-types', { oc: 'http://owncloud.org/ns' })\nregisterDavProperty('ocs:share-permissions', { ocs: 'http://open-collaboration-services.org/ns' })\n"],"file":"files_sharing-init.mjs"}