{"version":3,"file":"files-init.js?v=cc2403be72bcba57d9fc","mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACvvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpzIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACllBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACzlJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AClnKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACrjnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACvCA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ASAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACRA;AACA;AACA;AACA;AACA;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACNA;AACA;AACA;AACA;AACA;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACvFA;;;;;AEAA;AACA;AACA;AACA;AACA","sources":["webpack:///nextcloud/apps/files/src/services/ServiceWorker.js","webpack:///nextcloud/apps/files/src/actions/deleteAction.ts","webpack:///nextcloud/apps/files/src/actions/deleteUtils.ts","webpack:///nextcloud/apps/files/src/actions/downloadAction.ts","webpack:///nextcloud/apps/files/src/actions/editLocallyAction.ts","webpack:///nextcloud/apps/files/src/actions/favoriteAction.ts","webpack:///nextcloud/apps/files/src/actions/moveOrCopyAction.ts","webpack:///nextcloud/apps/files/src/actions/moveOrCopyActionUtils.ts","webpack:///nextcloud/apps/files/src/actions/openFolderAction.ts","webpack:///nextcloud/apps/files/src/actions/openInFilesAction.ts","webpack:///nextcloud/apps/files/src/actions/renameAction.ts","webpack:///nextcloud/apps/files/src/actions/sidebarAction.ts","webpack:///nextcloud/apps/files/src/actions/viewInFolderAction.ts","webpack:///nextcloud/apps/files/src/filters/HiddenFilesFilter.ts","webpack:///nextcloud/apps/files/src/filters/ModifiedFilter.ts","webpack:///nextcloud/apps/files/src/filters/TypeFilter.ts","webpack:///nextcloud/apps/files/src/init.ts","webpack:///nextcloud/apps/files/src/logger.ts","webpack:///nextcloud/apps/files/src/newMenu/newFolder.ts","webpack:///nextcloud/apps/files/src/newMenu/newFromTemplate.ts","webpack:///nextcloud/apps/files/src/newMenu/newTemplatesFolder.ts","webpack:///nextcloud/apps/files/src/services/Favorites.ts","webpack:///nextcloud/apps/files/src/services/Files.ts","webpack:///nextcloud/apps/files/src/services/FolderTree.ts","webpack:///nextcloud/apps/files/src/services/LivePhotos.ts","webpack:///nextcloud/apps/files/src/services/PersonalFiles.ts","webpack:///nextcloud/apps/files/src/services/Recent.ts","webpack:///nextcloud/apps/files/src/services/WebdavClient.ts","webpack:///nextcloud/apps/files/src/store/index.ts","webpack:///nextcloud/apps/files/src/store/userconfig.ts","webpack:///nextcloud/apps/files/src/utils/filenameValidity.ts","webpack:///nextcloud/apps/files/src/utils/hashUtils.ts","webpack:///nextcloud/apps/files/src/utils/newNodeDialog.ts","webpack:///nextcloud/apps/files/src/utils/permissions.ts","webpack:///nextcloud/apps/files/src/views/favorites.ts","webpack:///nextcloud/apps/files/src/views/files.ts","webpack:///nextcloud/apps/files/src/views/folderTree.ts","webpack:///nextcloud/apps/files/src/views/personal-files.ts","webpack:///nextcloud/apps/files/src/views/recent.ts","webpack:///nextcloud/apps/files/src/components/FileListFilter/FileListFilter.vue?vue&type=script&setup=true&lang=ts","webpack:///nextcloud/apps/files/src/components/FileListFilter/FileListFilterModified.vue?vue&type=script&lang=ts","webpack:///nextcloud/apps/files/src/components/FileListFilter/FileListFilterType.vue?vue&type=script&lang=ts","webpack:///nextcloud/apps/files/src/components/NewNodeDialog.vue?vue&type=script&setup=true&lang=ts","webpack:///nextcloud/apps/files/src/components/FileListFilter/FileListFilter.vue?vue&type=template&id=5c291778&scoped=true","webpack:///nextcloud/apps/files/src/components/FileListFilter/FileListFilterModified.vue?vue&type=template&id=f47dfc3e&scoped=true","webpack:///nextcloud/apps/files/src/components/FileListFilter/FileListFilterType.vue?vue&type=template&id=6c0e6dd2","webpack:///nextcloud/apps/files/src/components/NewNodeDialog.vue?vue&type=template&id=e6b9c05a&scoped=true","webpack:///nextcloud/apps/files/src/components/FileListFilter/FileListFilterModified.vue?vue&type=style&index=0&id=f47dfc3e&scoped=true&lang=scss","webpack:///nextcloud/apps/files/src/components/FileListFilter/FileListFilter.vue?vue&type=style&index=0&id=5c291778&scoped=true&lang=css","webpack:///nextcloud/apps/files/src/components/FileListFilter/FileListFilterType.vue?vue&type=style&index=0&id=6c0e6dd2&lang=css","webpack:///nextcloud/apps/files/src/components/NewNodeDialog.vue?vue&type=style&index=0&id=e6b9c05a&scoped=true&lang=css","webpack://nextcloud/./apps/files/src/components/FileListFilter/FileListFilterModified.vue?1422","webpack://nextcloud/./apps/files/src/components/FileListFilter/FileListFilter.vue?fbd5","webpack://nextcloud/./apps/files/src/components/FileListFilter/FileListFilterType.vue?918c","webpack://nextcloud/./apps/files/src/components/NewNodeDialog.vue?2381","webpack:///nextcloud/apps/files/src/components/FileListFilter/FileListFilter.vue","webpack:///nextcloud/apps/files/src/components/FileListFilter/FileListFilterModified.vue","webpack:///nextcloud/apps/files/src/components/FileListFilter/FileListFilterType.vue","webpack:///nextcloud/apps/files/src/components/NewNodeDialog.vue","webpack://nextcloud/./apps/files/src/components/FileListFilter/FileListFilter.vue?7bd9","webpack://nextcloud/./apps/files/src/components/FileListFilter/FileListFilterModified.vue?54c4","webpack://nextcloud/./apps/files/src/components/FileListFilter/FileListFilterType.vue?870d","webpack://nextcloud/./apps/files/src/components/NewNodeDialog.vue?12eb","webpack://nextcloud/./apps/files/src/components/FileListFilter/FileListFilter.vue?4064","webpack://nextcloud/./apps/files/src/components/FileListFilter/FileListFilterModified.vue?b166","webpack://nextcloud/./apps/files/src/components/FileListFilter/FileListFilterType.vue?4ef5","webpack://nextcloud/./apps/files/src/components/NewNodeDialog.vue?35e0","webpack://nextcloud/./apps/files/src/components/FileListFilter/FileListFilterModified.vue?8053","webpack://nextcloud/./apps/files/src/components/FileListFilter/FileListFilter.vue?7f85","webpack://nextcloud/./apps/files/src/components/FileListFilter/FileListFilterType.vue?4d8b","webpack://nextcloud/./apps/files/src/components/NewNodeDialog.vue?a2dd","webpack:///nextcloud/webpack/bootstrap","webpack:///nextcloud/webpack/runtime/chunk loaded","webpack:///nextcloud/webpack/runtime/compat get default export","webpack:///nextcloud/webpack/runtime/define property getters","webpack:///nextcloud/webpack/runtime/ensure chunk","webpack:///nextcloud/webpack/runtime/get javascript chunk filename","webpack:///nextcloud/webpack/runtime/global","webpack:///nextcloud/webpack/runtime/hasOwnProperty shorthand","webpack:///nextcloud/webpack/runtime/load script","webpack:///nextcloud/webpack/runtime/make namespace object","webpack:///nextcloud/webpack/runtime/node module decorator","webpack:///nextcloud/webpack/runtime/publicPath","webpack:///nextcloud/webpack/runtime/jsonp chunk loading","webpack:///nextcloud/webpack/runtime/nonce","webpack:///nextcloud/webpack/before-startup","webpack:///nextcloud/webpack/startup","webpack:///nextcloud/webpack/after-startup"],"sourcesContent":["/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { generateUrl } from '@nextcloud/router';\nimport logger from \"../logger.ts\";\nexport default () => {\n  if ('serviceWorker' in navigator) {\n    // Use the window load event to keep the page load performant\n    window.addEventListener('load', async () => {\n      try {\n        const url = generateUrl('/apps/files/preview-service-worker.js', {}, {\n          noRewrite: true\n        });\n        const registration = await navigator.serviceWorker.register(url, {\n          scope: '/'\n        });\n        logger.debug('SW registered: ', {\n          registration\n        });\n      } catch (error) {\n        logger.error('SW registration failed: ', {\n          error\n        });\n      }\n    });\n  } else {\n    logger.debug('Service Worker is not enabled on this browser.');\n  }\n};","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { Permission, FileAction } from '@nextcloud/files';\nimport { showInfo } from '@nextcloud/dialogs';\nimport { translate as t } from '@nextcloud/l10n';\nimport PQueue from 'p-queue';\nimport CloseSvg from '@mdi/svg/svg/close.svg?raw';\nimport NetworkOffSvg from '@mdi/svg/svg/network-off.svg?raw';\nimport TrashCanSvg from '@mdi/svg/svg/trash-can.svg?raw';\nimport logger from \"../logger.ts\";\nimport { askConfirmation, canDisconnectOnly, canUnshareOnly, deleteNode, displayName, isTrashbinEnabled } from \"./deleteUtils\";\nconst queue = new PQueue({\n  concurrency: 5\n});\nexport const action = new FileAction({\n  id: 'delete',\n  displayName,\n  iconSvgInline: nodes => {\n    if (canUnshareOnly(nodes)) {\n      return CloseSvg;\n    }\n    if (canDisconnectOnly(nodes)) {\n      return NetworkOffSvg;\n    }\n    return TrashCanSvg;\n  },\n  enabled(nodes) {\n    return nodes.length > 0 && nodes.map(node => node.permissions).every(permission => (permission & Permission.DELETE) !== 0);\n  },\n  async exec(node, view) {\n    try {\n      let confirm = true;\n      // If trashbin is disabled, we need to ask for confirmation\n      if (!isTrashbinEnabled()) {\n        confirm = await askConfirmation([node], view);\n      }\n      // If the user cancels the deletion, we don't want to do anything\n      if (confirm === false) {\n        showInfo(t('files', 'Deletion cancelled'));\n        return null;\n      }\n      await deleteNode(node);\n      return true;\n    } catch (error) {\n      logger.error('Error while deleting a file', {\n        error,\n        source: node.source,\n        node\n      });\n      return false;\n    }\n  },\n  async execBatch(nodes, view) {\n    let confirm = true;\n    // If trashbin is disabled, we need to ask for confirmation\n    if (!isTrashbinEnabled()) {\n      confirm = await askConfirmation(nodes, view);\n    } else if (nodes.length >= 5 && !canUnshareOnly(nodes) && !canDisconnectOnly(nodes)) {\n      confirm = await askConfirmation(nodes, view);\n    }\n    // If the user cancels the deletion, we don't want to do anything\n    if (confirm === false) {\n      showInfo(t('files', 'Deletion cancelled'));\n      return Promise.all(nodes.map(() => null));\n    }\n    // Map each node to a promise that resolves with the result of exec(node)\n    const promises = nodes.map(node => {\n      // Create a promise that resolves with the result of exec(node)\n      const promise = new Promise(resolve => {\n        queue.add(async () => {\n          try {\n            await deleteNode(node);\n            resolve(true);\n          } catch (error) {\n            logger.error('Error while deleting a file', {\n              error,\n              source: node.source,\n              node\n            });\n            resolve(false);\n          }\n        });\n      });\n      return promise;\n    });\n    return Promise.all(promises);\n  },\n  order: 100\n});","import { emit } from '@nextcloud/event-bus';\nimport { FileType } from '@nextcloud/files';\nimport { getCapabilities } from '@nextcloud/capabilities';\nimport { n, t } from '@nextcloud/l10n';\nimport axios from '@nextcloud/axios';\nexport const isTrashbinEnabled = () => getCapabilities()?.files?.undelete === true;\nexport const canUnshareOnly = nodes => {\n  return nodes.every(node => node.attributes['is-mount-root'] === true && node.attributes['mount-type'] === 'shared');\n};\nexport const canDisconnectOnly = nodes => {\n  return nodes.every(node => node.attributes['is-mount-root'] === true && node.attributes['mount-type'] === 'external');\n};\nexport const isMixedUnshareAndDelete = nodes => {\n  if (nodes.length === 1) {\n    return false;\n  }\n  const hasSharedItems = nodes.some(node => canUnshareOnly([node]));\n  const hasDeleteItems = nodes.some(node => !canUnshareOnly([node]));\n  return hasSharedItems && hasDeleteItems;\n};\nexport const isAllFiles = nodes => {\n  return !nodes.some(node => node.type !== FileType.File);\n};\nexport const isAllFolders = nodes => {\n  return !nodes.some(node => node.type !== FileType.Folder);\n};\nexport const displayName = (nodes, view) => {\n  /**\n   * If we're in the trashbin, we can only delete permanently\n   */\n  if (view.id === 'trashbin' || !isTrashbinEnabled()) {\n    return t('files', 'Delete permanently');\n  }\n  /**\n   * If we're in the sharing view, we can only unshare\n   */\n  if (isMixedUnshareAndDelete(nodes)) {\n    return t('files', 'Delete and unshare');\n  }\n  /**\n   * If those nodes are all the root node of a\n   * share, we can only unshare them.\n   */\n  if (canUnshareOnly(nodes)) {\n    if (nodes.length === 1) {\n      return t('files', 'Leave this share');\n    }\n    return t('files', 'Leave these shares');\n  }\n  /**\n   * If those nodes are all the root node of an\n   * external storage, we can only disconnect it.\n   */\n  if (canDisconnectOnly(nodes)) {\n    if (nodes.length === 1) {\n      return t('files', 'Disconnect storage');\n    }\n    return t('files', 'Disconnect storages');\n  }\n  /**\n   * If we're only selecting files, use proper wording\n   */\n  if (isAllFiles(nodes)) {\n    if (nodes.length === 1) {\n      return t('files', 'Delete file');\n    }\n    return t('files', 'Delete files');\n  }\n  /**\n   * If we're only selecting folders, use proper wording\n   */\n  if (isAllFolders(nodes)) {\n    if (nodes.length === 1) {\n      return t('files', 'Delete folder');\n    }\n    return t('files', 'Delete folders');\n  }\n  return t('files', 'Delete');\n};\nexport const askConfirmation = async (nodes, view) => {\n  const message = view.id === 'trashbin' || !isTrashbinEnabled() ? n('files', 'You are about to permanently delete {count} item', 'You are about to permanently delete {count} items', nodes.length, {\n    count: nodes.length\n  }) : n('files', 'You are about to delete {count} item', 'You are about to delete {count} items', nodes.length, {\n    count: nodes.length\n  });\n  return new Promise(resolve => {\n    // TODO: Use the new dialog API\n    window.OC.dialogs.confirmDestructive(message, t('files', 'Confirm deletion'), {\n      type: window.OC.dialogs.YES_NO_BUTTONS,\n      confirm: displayName(nodes, view),\n      confirmClasses: 'error',\n      cancel: t('files', 'Cancel')\n    }, decision => {\n      resolve(decision);\n    });\n  });\n};\nexport const deleteNode = async node => {\n  await axios.delete(node.encodedSource);\n  // Let's delete even if it's moved to the trashbin\n  // since it has been removed from the current view\n  // and changing the view will trigger a reload anyway.\n  emit('files:node:deleted', node);\n};","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { FileAction, FileType, DefaultType } from '@nextcloud/files';\nimport { t } from '@nextcloud/l10n';\nimport { isDownloadable } from \"../utils/permissions\";\nimport ArrowDownSvg from '@mdi/svg/svg/arrow-down.svg?raw';\nconst triggerDownload = function (url) {\n  const hiddenElement = document.createElement('a');\n  hiddenElement.download = '';\n  hiddenElement.href = url;\n  hiddenElement.click();\n};\n/**\n * Find the longest common path prefix of both input paths\n * @param first The first path\n * @param second The second path\n */\nfunction longestCommonPath(first, second) {\n  const firstSegments = first.split('/').filter(Boolean);\n  const secondSegments = second.split('/').filter(Boolean);\n  let base = '';\n  for (const [index, segment] of firstSegments.entries()) {\n    if (index >= second.length) {\n      break;\n    }\n    if (segment !== secondSegments[index]) {\n      break;\n    }\n    const sep = base === '' ? '' : '/';\n    base = `${base}${sep}${segment}`;\n  }\n  return base;\n}\nconst downloadNodes = function (nodes) {\n  let url;\n  if (nodes.length === 1) {\n    if (nodes[0].type === FileType.File) {\n      return triggerDownload(nodes[0].encodedSource);\n    } else {\n      url = new URL(nodes[0].encodedSource);\n      url.searchParams.append('accept', 'zip');\n    }\n  } else {\n    url = new URL(nodes[0].source);\n    let base = url.pathname;\n    for (const node of nodes.slice(1)) {\n      base = longestCommonPath(base, new URL(node.source).pathname);\n    }\n    url.pathname = base;\n    // The URL contains the path encoded so we need to decode as the query.append will re-encode it\n    const filenames = nodes.map(node => decodeURI(node.encodedSource.slice(url.href.length + 1)));\n    url.searchParams.append('accept', 'zip');\n    url.searchParams.append('files', JSON.stringify(filenames));\n  }\n  if (url.pathname.at(-1) !== '/') {\n    url.pathname = `${url.pathname}/`;\n  }\n  return triggerDownload(url.href);\n};\nexport const action = new FileAction({\n  id: 'download',\n  default: DefaultType.DEFAULT,\n  displayName: () => t('files', 'Download'),\n  iconSvgInline: () => ArrowDownSvg,\n  enabled(nodes) {\n    if (nodes.length === 0) {\n      return false;\n    }\n    // We can only download dav files and folders.\n    if (nodes.some(node => !node.isDavRessource)) {\n      return false;\n    }\n    return nodes.every(isDownloadable);\n  },\n  async exec(node) {\n    downloadNodes([node]);\n    return null;\n  },\n  async execBatch(nodes) {\n    downloadNodes(nodes);\n    return new Array(nodes.length).fill(null);\n  },\n  order: 30\n});","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { encodePath } from '@nextcloud/paths';\nimport { generateOcsUrl } from '@nextcloud/router';\nimport { getCurrentUser } from '@nextcloud/auth';\nimport { FileAction, Permission } from '@nextcloud/files';\nimport { showError, DialogBuilder } from '@nextcloud/dialogs';\nimport { translate as t } from '@nextcloud/l10n';\nimport axios from '@nextcloud/axios';\nimport LaptopSvg from '@mdi/svg/svg/laptop.svg?raw';\nimport IconCancel from '@mdi/svg/svg/cancel.svg?raw';\nimport IconCheck from '@mdi/svg/svg/check.svg?raw';\nimport { isPublicShare } from '@nextcloud/sharing/public';\nconst confirmLocalEditDialog = function () {\n  let localEditCallback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : () => {};\n  let callbackCalled = false;\n  return new DialogBuilder().setName(t('files', 'Edit file locally')).setText(t('files', 'The file should now open locally. If you don\\'t see this happening, make sure that the desktop client is installed on your system.')).setButtons([{\n    label: t('files', 'Retry local edit'),\n    icon: IconCancel,\n    callback: () => {\n      callbackCalled = true;\n      localEditCallback(false);\n    }\n  }, {\n    label: t('files', 'Edit online'),\n    icon: IconCheck,\n    type: 'primary',\n    callback: () => {\n      callbackCalled = true;\n      localEditCallback(true);\n    }\n  }]).build().show().then(() => {\n    // Ensure the callback is called even if the dialog is dismissed in other ways\n    if (!callbackCalled) {\n      localEditCallback(false);\n    }\n  });\n};\nconst attemptOpenLocalClient = async path => {\n  openLocalClient(path);\n  confirmLocalEditDialog(openLocally => {\n    if (!openLocally) {\n      window.OCA.Viewer.open({\n        path\n      });\n      return;\n    }\n    openLocalClient(path);\n  });\n};\nconst openLocalClient = async function (path) {\n  const link = generateOcsUrl('apps/files/api/v1') + '/openlocaleditor?format=json';\n  try {\n    const result = await axios.post(link, {\n      path\n    });\n    const uid = getCurrentUser()?.uid;\n    let url = `nc://open/${uid}@` + window.location.host + encodePath(path);\n    url += '?token=' + result.data.ocs.data.token;\n    window.open(url, '_self');\n  } catch (error) {\n    showError(t('files', 'Failed to redirect to client'));\n  }\n};\nexport const action = new FileAction({\n  id: 'edit-locally',\n  displayName: () => t('files', 'Edit locally'),\n  iconSvgInline: () => LaptopSvg,\n  // Only works on single files\n  enabled(nodes) {\n    // Only works on single node\n    if (nodes.length !== 1) {\n      return false;\n    }\n    // does not work with shares\n    if (isPublicShare()) {\n      return false;\n    }\n    return (nodes[0].permissions & Permission.UPDATE) !== 0;\n  },\n  async exec(node) {\n    attemptOpenLocalClient(node.path);\n    return null;\n  },\n  order: 25\n});","import { emit } from '@nextcloud/event-bus';\nimport { Permission, FileAction } from '@nextcloud/files';\nimport { translate as t } from '@nextcloud/l10n';\nimport { encodePath } from '@nextcloud/paths';\nimport { generateUrl } from '@nextcloud/router';\nimport { isPublicShare } from '@nextcloud/sharing/public';\nimport axios from '@nextcloud/axios';\nimport Vue from 'vue';\nimport StarOutlineSvg from '@mdi/svg/svg/star-outline.svg?raw';\nimport StarSvg from '@mdi/svg/svg/star.svg?raw';\nimport logger from \"../logger.ts\";\n// If any of the nodes is not favorited, we display the favorite action.\nconst shouldFavorite = nodes => {\n  return nodes.some(node => node.attributes.favorite !== 1);\n};\nexport const favoriteNode = async (node, view, willFavorite) => {\n  try {\n    // TODO: migrate to webdav tags plugin\n    const url = generateUrl('/apps/files/api/v1/files') + encodePath(node.path);\n    await axios.post(url, {\n      tags: willFavorite ? [window.OC.TAG_FAVORITE] : []\n    });\n    // Let's delete if we are in the favourites view\n    // AND if it is removed from the user favorites\n    // AND it's in the root of the favorites view\n    if (view.id === 'favorites' && !willFavorite && node.dirname === '/') {\n      emit('files:node:deleted', node);\n    }\n    // Update the node webdav attribute\n    Vue.set(node.attributes, 'favorite', willFavorite ? 1 : 0);\n    // Dispatch event to whoever is interested\n    if (willFavorite) {\n      emit('files:favorites:added', node);\n    } else {\n      emit('files:favorites:removed', node);\n    }\n    return true;\n  } catch (error) {\n    const action = willFavorite ? 'adding a file to favourites' : 'removing a file from favourites';\n    logger.error('Error while ' + action, {\n      error,\n      source: node.source,\n      node\n    });\n    return false;\n  }\n};\nexport const action = new FileAction({\n  id: 'favorite',\n  displayName(nodes) {\n    return shouldFavorite(nodes) ? t('files', 'Add to favorites') : t('files', 'Remove from favorites');\n  },\n  iconSvgInline: nodes => {\n    return shouldFavorite(nodes) ? StarOutlineSvg : StarSvg;\n  },\n  enabled(nodes) {\n    // Not enabled for public shares\n    if (isPublicShare()) {\n      return false;\n    }\n    // We can only favorite nodes if they are located in files\n    return nodes.every(node => node.root?.startsWith?.('/files'))\n    // and we have permissions\n    && nodes.every(node => node.permissions !== Permission.NONE);\n  },\n  async exec(node, view) {\n    const willFavorite = shouldFavorite([node]);\n    return await favoriteNode(node, view, willFavorite);\n  },\n  async execBatch(nodes, view) {\n    const willFavorite = shouldFavorite(nodes);\n    return Promise.all(nodes.map(async node => await favoriteNode(node, view, willFavorite)));\n  },\n  order: -50\n});","import { isAxiosError } from '@nextcloud/axios';\nimport { FilePickerClosed, getFilePickerBuilder, showError, showInfo, TOAST_PERMANENT_TIMEOUT } from '@nextcloud/dialogs';\nimport { emit } from '@nextcloud/event-bus';\nimport { FileAction, FileType, NodeStatus, davGetClient, davRootPath, davResultToNode, davGetDefaultPropfind, getUniqueName, Permission } from '@nextcloud/files';\nimport { translate as t } from '@nextcloud/l10n';\nimport { openConflictPicker, hasConflict } from '@nextcloud/upload';\nimport { basename, join } from 'path';\nimport Vue from 'vue';\nimport CopyIconSvg from '@mdi/svg/svg/folder-multiple.svg?raw';\nimport FolderMoveSvg from '@mdi/svg/svg/folder-move.svg?raw';\nimport { MoveCopyAction, canCopy, canMove, getQueue } from \"./moveOrCopyActionUtils\";\nimport { getContents } from \"../services/Files\";\nimport logger from \"../logger\";\n/**\n * Return the action that is possible for the given nodes\n * @param {Node[]} nodes The nodes to check against\n * @return {MoveCopyAction} The action that is possible for the given nodes\n */\nconst getActionForNodes = nodes => {\n  if (canMove(nodes)) {\n    if (canCopy(nodes)) {\n      return MoveCopyAction.MOVE_OR_COPY;\n    }\n    return MoveCopyAction.MOVE;\n  }\n  // Assuming we can copy as the enabled checks for copy permissions\n  return MoveCopyAction.COPY;\n};\n/**\n * Create a loading notification toast\n * @param mode The move or copy mode\n * @param source Name of the node that is copied / moved\n * @param destination Destination path\n * @return {() => void} Function to hide the notification\n */\nfunction createLoadingNotification(mode, source, destination) {\n  const text = mode === MoveCopyAction.MOVE ? t('files', 'Moving \"{source}\" to \"{destination}\" …', {\n    source,\n    destination\n  }) : t('files', 'Copying \"{source}\" to \"{destination}\" …', {\n    source,\n    destination\n  });\n  let toast;\n  toast = showInfo(`<span class=\"icon icon-loading-small toast-loading-icon\"></span> ${text}`, {\n    isHTML: true,\n    timeout: TOAST_PERMANENT_TIMEOUT,\n    onRemove: () => {\n      toast?.hideToast();\n      toast = undefined;\n    }\n  });\n  return () => toast && toast.hideToast();\n}\n/**\n * Handle the copy/move of a node to a destination\n * This can be imported and used by other scripts/components on server\n * @param {Node} node The node to copy/move\n * @param {Folder} destination The destination to copy/move the node to\n * @param {MoveCopyAction} method The method to use for the copy/move\n * @param {boolean} overwrite Whether to overwrite the destination if it exists\n * @return {Promise<void>} A promise that resolves when the copy/move is done\n */\nexport const handleCopyMoveNodeTo = async function (node, destination, method) {\n  let overwrite = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  if (!destination) {\n    return;\n  }\n  if (destination.type !== FileType.Folder) {\n    throw new Error(t('files', 'Destination is not a folder'));\n  }\n  // Do not allow to MOVE a node to the same folder it is already located\n  if (method === MoveCopyAction.MOVE && node.dirname === destination.path) {\n    throw new Error(t('files', 'This file/folder is already in that directory'));\n  }\n  /**\n   * Example:\n   * - node: /foo/bar/file.txt -> path = /foo/bar/file.txt, destination: /foo\n   *   Allow move of /foo does not start with /foo/bar/file.txt so allow\n   * - node: /foo , destination: /foo/bar\n   *   Do not allow as it would copy foo within itself\n   * - node: /foo/bar.txt, destination: /foo\n   *   Allow copy a file to the same directory\n   * - node: \"/foo/bar\", destination: \"/foo/bar 1\"\n   *   Allow to move or copy but we need to check with trailing / otherwise it would report false positive\n   */\n  if (`${destination.path}/`.startsWith(`${node.path}/`)) {\n    throw new Error(t('files', 'You cannot move a file/folder onto itself or into a subfolder of itself'));\n  }\n  // Set loading state\n  Vue.set(node, 'status', NodeStatus.LOADING);\n  const actionFinished = createLoadingNotification(method, node.basename, destination.path);\n  const queue = getQueue();\n  return await queue.add(async () => {\n    const copySuffix = index => {\n      if (index === 1) {\n        return t('files', '(copy)'); // TRANSLATORS: Mark a file as a copy of another file\n      }\n      return t('files', '(copy %n)', undefined, index); // TRANSLATORS: Meaning it is the n'th copy of a file\n    };\n    try {\n      const client = davGetClient();\n      const currentPath = join(davRootPath, node.path);\n      const destinationPath = join(davRootPath, destination.path);\n      if (method === MoveCopyAction.COPY) {\n        let target = node.basename;\n        // If we do not allow overwriting then find an unique name\n        if (!overwrite) {\n          const otherNodes = await client.getDirectoryContents(destinationPath);\n          target = getUniqueName(node.basename, otherNodes.map(n => n.basename), {\n            suffix: copySuffix,\n            ignoreFileExtension: node.type === FileType.Folder\n          });\n        }\n        await client.copyFile(currentPath, join(destinationPath, target));\n        // If the node is copied into current directory the view needs to be updated\n        if (node.dirname === destination.path) {\n          const {\n            data\n          } = await client.stat(join(destinationPath, target), {\n            details: true,\n            data: davGetDefaultPropfind()\n          });\n          emit('files:node:created', davResultToNode(data));\n        }\n      } else {\n        // show conflict file popup if we do not allow overwriting\n        if (!overwrite) {\n          const otherNodes = await getContents(destination.path);\n          if (hasConflict([node], otherNodes.contents)) {\n            try {\n              // Let the user choose what to do with the conflicting files\n              const {\n                selected,\n                renamed\n              } = await openConflictPicker(destination.path, [node], otherNodes.contents);\n              // two empty arrays: either only old files or conflict skipped -> no action required\n              if (!selected.length && !renamed.length) {\n                return;\n              }\n            } catch (error) {\n              // User cancelled\n              showError(t('files', 'Move cancelled'));\n              return;\n            }\n          }\n        }\n        // getting here means either no conflict, file was renamed to keep both files\n        // in a conflict, or the selected file was chosen to be kept during the conflict\n        await client.moveFile(currentPath, join(destinationPath, node.basename));\n        // Delete the node as it will be fetched again\n        // when navigating to the destination folder\n        emit('files:node:deleted', node);\n      }\n    } catch (error) {\n      if (isAxiosError(error)) {\n        if (error.response?.status === 412) {\n          throw new Error(t('files', 'A file or folder with that name already exists in this folder'));\n        } else if (error.response?.status === 423) {\n          throw new Error(t('files', 'The files are locked'));\n        } else if (error.response?.status === 404) {\n          throw new Error(t('files', 'The file does not exist anymore'));\n        } else if (error.message) {\n          throw new Error(error.message);\n        }\n      }\n      logger.debug(error);\n      throw new Error();\n    } finally {\n      Vue.set(node, 'status', '');\n      actionFinished();\n    }\n  });\n};\n/**\n * Open a file picker for the given action\n * @param action The action to open the file picker for\n * @param dir The directory to start the file picker in\n * @param nodes The nodes to move/copy\n * @return The picked destination or false if cancelled by user\n */\nasync function openFilePickerForAction(action) {\n  let dir = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '/';\n  let nodes = arguments.length > 2 ? arguments[2] : undefined;\n  const {\n    resolve,\n    reject,\n    promise\n  } = Promise.withResolvers();\n  const fileIDs = nodes.map(node => node.fileid).filter(Boolean);\n  const filePicker = getFilePickerBuilder(t('files', 'Choose destination')).allowDirectories(true).setFilter(n => {\n    // We don't want to show the current nodes in the file picker\n    return !fileIDs.includes(n.fileid);\n  }).setMimeTypeFilter([]).setMultiSelect(false).startAt(dir).setButtonFactory((selection, path) => {\n    const buttons = [];\n    const target = basename(path);\n    const dirnames = nodes.map(node => node.dirname);\n    const paths = nodes.map(node => node.path);\n    if (action === MoveCopyAction.COPY || action === MoveCopyAction.MOVE_OR_COPY) {\n      buttons.push({\n        label: target ? t('files', 'Copy to {target}', {\n          target\n        }, undefined, {\n          escape: false,\n          sanitize: false\n        }) : t('files', 'Copy'),\n        type: 'primary',\n        icon: CopyIconSvg,\n        disabled: selection.some(node => (node.permissions & Permission.CREATE) === 0),\n        async callback(destination) {\n          resolve({\n            destination: destination[0],\n            action: MoveCopyAction.COPY\n          });\n        }\n      });\n    }\n    // Invalid MOVE targets (but valid copy targets)\n    if (dirnames.includes(path)) {\n      // This file/folder is already in that directory\n      return buttons;\n    }\n    if (paths.includes(path)) {\n      // You cannot move a file/folder onto itself\n      return buttons;\n    }\n    if (action === MoveCopyAction.MOVE || action === MoveCopyAction.MOVE_OR_COPY) {\n      buttons.push({\n        label: target ? t('files', 'Move to {target}', {\n          target\n        }, undefined, {\n          escape: false,\n          sanitize: false\n        }) : t('files', 'Move'),\n        type: action === MoveCopyAction.MOVE ? 'primary' : 'secondary',\n        icon: FolderMoveSvg,\n        async callback(destination) {\n          resolve({\n            destination: destination[0],\n            action: MoveCopyAction.MOVE\n          });\n        }\n      });\n    }\n    return buttons;\n  }).build();\n  filePicker.pick().catch(error => {\n    logger.debug(error);\n    if (error instanceof FilePickerClosed) {\n      resolve(false);\n    } else {\n      reject(new Error(t('files', 'Move or copy operation failed')));\n    }\n  });\n  return promise;\n}\nexport const action = new FileAction({\n  id: 'move-copy',\n  displayName(nodes) {\n    switch (getActionForNodes(nodes)) {\n      case MoveCopyAction.MOVE:\n        return t('files', 'Move');\n      case MoveCopyAction.COPY:\n        return t('files', 'Copy');\n      case MoveCopyAction.MOVE_OR_COPY:\n        return t('files', 'Move or copy');\n    }\n  },\n  iconSvgInline: () => FolderMoveSvg,\n  enabled(nodes, view) {\n    // We can not copy or move in single file shares\n    if (view.id === 'public-file-share') {\n      return false;\n    }\n    // We only support moving/copying files within the user folder\n    if (!nodes.every(node => node.root?.startsWith('/files/'))) {\n      return false;\n    }\n    return nodes.length > 0 && (canMove(nodes) || canCopy(nodes));\n  },\n  async exec(node, view, dir) {\n    const action = getActionForNodes([node]);\n    let result;\n    try {\n      result = await openFilePickerForAction(action, dir, [node]);\n    } catch (e) {\n      logger.error(e);\n      return false;\n    }\n    if (result === false) {\n      showInfo(t('files', 'Cancelled move or copy of \"{filename}\".', {\n        filename: node.displayname\n      }));\n      return null;\n    }\n    try {\n      await handleCopyMoveNodeTo(node, result.destination, result.action);\n      return true;\n    } catch (error) {\n      if (error instanceof Error && !!error.message) {\n        showError(error.message);\n        // Silent action as we handle the toast\n        return null;\n      }\n      return false;\n    }\n  },\n  async execBatch(nodes, view, dir) {\n    const action = getActionForNodes(nodes);\n    const result = await openFilePickerForAction(action, dir, nodes);\n    // Handle cancellation silently\n    if (result === false) {\n      showInfo(nodes.length === 1 ? t('files', 'Cancelled move or copy of \"{filename}\".', {\n        filename: nodes[0].displayname\n      }) : t('files', 'Cancelled move or copy operation'));\n      return nodes.map(() => null);\n    }\n    const promises = nodes.map(async node => {\n      try {\n        await handleCopyMoveNodeTo(node, result.destination, result.action);\n        return true;\n      } catch (error) {\n        logger.error(`Failed to ${result.action} node`, {\n          node,\n          error\n        });\n        return false;\n      }\n    });\n    // We need to keep the selection on error!\n    // So we do not return null, and for batch action\n    // we let the front handle the error.\n    return await Promise.all(promises);\n  },\n  order: 15\n});","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { Permission } from '@nextcloud/files';\nimport { isPublicShare } from '@nextcloud/sharing/public';\nimport PQueue from 'p-queue';\nimport { loadState } from '@nextcloud/initial-state';\nconst sharePermissions = loadState('files_sharing', 'sharePermissions', Permission.NONE);\n// This is the processing queue. We only want to allow 3 concurrent requests\nlet queue;\n// Maximum number of concurrent operations\nconst MAX_CONCURRENCY = 5;\n/**\n * Get the processing queue\n */\nexport const getQueue = () => {\n  if (!queue) {\n    queue = new PQueue({\n      concurrency: MAX_CONCURRENCY\n    });\n  }\n  return queue;\n};\nexport var MoveCopyAction;\n(function (MoveCopyAction) {\n  MoveCopyAction[\"MOVE\"] = \"Move\";\n  MoveCopyAction[\"COPY\"] = \"Copy\";\n  MoveCopyAction[\"MOVE_OR_COPY\"] = \"move-or-copy\";\n})(MoveCopyAction || (MoveCopyAction = {}));\nexport const canMove = nodes => {\n  const minPermission = nodes.reduce((min, node) => Math.min(min, node.permissions), Permission.ALL);\n  return Boolean(minPermission & Permission.DELETE);\n};\nexport const canDownload = nodes => {\n  return nodes.every(node => {\n    const shareAttributes = JSON.parse(node.attributes?.['share-attributes'] ?? '[]');\n    return !shareAttributes.some(attribute => attribute.scope === 'permissions' && attribute.value === false && attribute.key === 'download');\n  });\n};\nexport const canCopy = nodes => {\n  // a shared file cannot be copied if the download is disabled\n  if (!canDownload(nodes)) {\n    return false;\n  }\n  // it cannot be copied if the user has only view permissions\n  if (nodes.some(node => node.permissions === Permission.NONE)) {\n    return false;\n  }\n  // on public shares all files have the same permission so copy is only possible if write permission is granted\n  if (isPublicShare()) {\n    return Boolean(sharePermissions & Permission.CREATE);\n  }\n  // otherwise permission is granted\n  return true;\n};","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { Permission, FileType, FileAction, DefaultType } from '@nextcloud/files';\nimport { translate as t } from '@nextcloud/l10n';\nimport FolderSvg from '@mdi/svg/svg/folder.svg?raw';\nexport const action = new FileAction({\n  id: 'open-folder',\n  displayName(files) {\n    // Only works on single node\n    const displayName = files[0].displayname;\n    return t('files', 'Open folder {displayName}', {\n      displayName\n    });\n  },\n  iconSvgInline: () => FolderSvg,\n  enabled(nodes) {\n    // Only works on single node\n    if (nodes.length !== 1) {\n      return false;\n    }\n    const node = nodes[0];\n    if (!node.isDavRessource) {\n      return false;\n    }\n    return node.type === FileType.Folder && (node.permissions & Permission.READ) !== 0;\n  },\n  async exec(node, view) {\n    if (!node || node.type !== FileType.Folder) {\n      return false;\n    }\n    window.OCP.Files.Router.goToRoute(null, {\n      view: view.id,\n      fileid: String(node.fileid)\n    }, {\n      dir: node.path\n    });\n    return null;\n  },\n  // Main action if enabled, meaning folders only\n  default: DefaultType.HIDDEN,\n  order: -100\n});","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { translate as t } from '@nextcloud/l10n';\nimport { FileType, FileAction, DefaultType } from '@nextcloud/files';\n/**\n * TODO: Move away from a redirect and handle\n * navigation straight out of the recent view\n */\nexport const action = new FileAction({\n  id: 'open-in-files-recent',\n  displayName: () => t('files', 'Open in Files'),\n  iconSvgInline: () => '',\n  enabled: (nodes, view) => view.id === 'recent',\n  async exec(node) {\n    let dir = node.dirname;\n    if (node.type === FileType.Folder) {\n      dir = dir + '/' + node.basename;\n    }\n    window.OCP.Files.Router.goToRoute(null,\n    // use default route\n    {\n      view: 'files',\n      fileid: String(node.fileid)\n    }, {\n      dir,\n      openfile: 'true'\n    });\n    return null;\n  },\n  // Before openFolderAction\n  order: -1000,\n  default: DefaultType.HIDDEN\n});","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { emit } from '@nextcloud/event-bus';\nimport { Permission, FileAction } from '@nextcloud/files';\nimport { translate as t } from '@nextcloud/l10n';\nimport PencilSvg from '@mdi/svg/svg/pencil.svg?raw';\nexport const ACTION_DETAILS = 'details';\nexport const action = new FileAction({\n  id: 'rename',\n  displayName: () => t('files', 'Rename'),\n  iconSvgInline: () => PencilSvg,\n  enabled: (nodes, view) => {\n    if (nodes.length === 0) {\n      return false;\n    }\n    // Disable for single file shares\n    if (view.id === 'public-file-share') {\n      return false;\n    }\n    // Only enable if all nodes have the delete permission\n    return nodes.every(node => Boolean(node.permissions & Permission.DELETE));\n  },\n  async exec(node) {\n    // Renaming is a built-in feature of the files app\n    emit('files:node:rename', node);\n    return null;\n  },\n  order: 10\n});","import { Permission, FileAction } from '@nextcloud/files';\nimport { translate as t } from '@nextcloud/l10n';\nimport { isPublicShare } from '@nextcloud/sharing/public';\nimport InformationSvg from '@mdi/svg/svg/information-variant.svg?raw';\nimport logger from \"../logger.ts\";\nexport const ACTION_DETAILS = 'details';\nexport const action = new FileAction({\n  id: ACTION_DETAILS,\n  displayName: () => t('files', 'Open details'),\n  iconSvgInline: () => InformationSvg,\n  // Sidebar currently supports user folder only, /files/USER\n  enabled: nodes => {\n    if (isPublicShare()) {\n      return false;\n    }\n    // Only works on single node\n    if (nodes.length !== 1) {\n      return false;\n    }\n    if (!nodes[0]) {\n      return false;\n    }\n    // Only work if the sidebar is available\n    if (!window?.OCA?.Files?.Sidebar) {\n      return false;\n    }\n    return (nodes[0].root?.startsWith('/files/') && nodes[0].permissions !== Permission.NONE) ?? false;\n  },\n  async exec(node, view, dir) {\n    try {\n      // TODO: migrate Sidebar to use a Node instead\n      await window.OCA.Files.Sidebar.open(node.path);\n      // Silently update current fileid\n      window.OCP.Files.Router.goToRoute(null, {\n        view: view.id,\n        fileid: String(node.fileid)\n      }, {\n        ...window.OCP.Files.Router.query,\n        dir\n      }, true);\n      return null;\n    } catch (error) {\n      logger.error('Error while opening sidebar', {\n        error\n      });\n      return false;\n    }\n  },\n  order: -50\n});","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { FileType, Permission, FileAction } from '@nextcloud/files';\nimport { translate as t } from '@nextcloud/l10n';\nimport FolderMoveSvg from '@mdi/svg/svg/folder-move.svg?raw';\nimport { isPublicShare } from '@nextcloud/sharing/public';\nexport const action = new FileAction({\n  id: 'view-in-folder',\n  displayName() {\n    return t('files', 'View in folder');\n  },\n  iconSvgInline: () => FolderMoveSvg,\n  enabled(nodes, view) {\n    // Not enabled for public shares\n    if (isPublicShare()) {\n      return false;\n    }\n    // Only works outside of the main files view\n    if (view.id === 'files') {\n      return false;\n    }\n    // Only works on single node\n    if (nodes.length !== 1) {\n      return false;\n    }\n    const node = nodes[0];\n    if (!node.isDavRessource) {\n      return false;\n    }\n    if (node.permissions === Permission.NONE) {\n      return false;\n    }\n    return node.type === FileType.File;\n  },\n  async exec(node) {\n    if (!node || node.type !== FileType.File) {\n      return false;\n    }\n    window.OCP.Files.Router.goToRoute(null, {\n      view: 'files',\n      fileid: String(node.fileid)\n    }, {\n      dir: node.dirname\n    });\n    return null;\n  },\n  order: 80\n});","function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/*!\n * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { FileListFilter, registerFileListFilter } from '@nextcloud/files';\nimport { subscribe } from '@nextcloud/event-bus';\nimport { loadState } from '@nextcloud/initial-state';\nclass HiddenFilesFilter extends FileListFilter {\n  constructor() {\n    super('files:hidden', 0);\n    _defineProperty(this, \"showHidden\", void 0);\n    this.showHidden = loadState('files', 'config', {\n      show_hidden: false\n    }).show_hidden;\n    subscribe('files:config:updated', _ref => {\n      let {\n        key,\n        value\n      } = _ref;\n      if (key === 'show_hidden') {\n        this.showHidden = Boolean(value);\n        this.filterUpdated();\n      }\n    });\n  }\n  filter(nodes) {\n    if (this.showHidden) {\n      return nodes;\n    }\n    return nodes.filter(node => node.attributes.hidden !== true && !node.basename.startsWith('.'));\n  }\n}\n/**\n * Register a file list filter to only show hidden files if enabled by user config\n */\nexport function registerHiddenFilesFilter() {\n  registerFileListFilter(new HiddenFilesFilter());\n}","function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { subscribe } from '@nextcloud/event-bus';\nimport { FileListFilter, registerFileListFilter } from '@nextcloud/files';\nimport { t } from '@nextcloud/l10n';\nimport Vue from 'vue';\nimport FileListFilterModified from \"../components/FileListFilter/FileListFilterModified.vue\";\nimport calendarSvg from '@mdi/svg/svg/calendar.svg?raw';\nconst startOfToday = () => new Date().setHours(0, 0, 0, 0);\n/**\n * Available presets\n */\nconst timePresets = [{\n  id: 'today',\n  label: t('files', 'Today'),\n  filter: time => time > startOfToday()\n}, {\n  id: 'last-7',\n  label: t('files', 'Last 7 days'),\n  filter: time => time > startOfToday() - 7 * 24 * 60 * 60 * 1000\n}, {\n  id: 'last-30',\n  label: t('files', 'Last 30 days'),\n  filter: time => time > startOfToday() - 30 * 24 * 60 * 60 * 1000\n}, {\n  id: 'this-year',\n  label: t('files', 'This year ({year})', {\n    year: new Date().getFullYear()\n  }),\n  filter: time => time > new Date(startOfToday()).setMonth(0, 1)\n}, {\n  id: 'last-year',\n  label: t('files', 'Last year ({year})', {\n    year: new Date().getFullYear() - 1\n  }),\n  filter: time => time > new Date(startOfToday()).setFullYear(new Date().getFullYear() - 1, 0, 1) && time < new Date(startOfToday()).setMonth(0, 1)\n}];\nclass ModifiedFilter extends FileListFilter {\n  constructor() {\n    super('files:modified', 50);\n    _defineProperty(this, \"currentInstance\", void 0);\n    _defineProperty(this, \"currentPreset\", void 0);\n    subscribe('files:navigation:changed', () => this.setPreset());\n  }\n  mount(el) {\n    if (this.currentInstance) {\n      this.currentInstance.$destroy();\n    }\n    const View = Vue.extend(FileListFilterModified);\n    this.currentInstance = new View({\n      propsData: {\n        timePresets\n      },\n      el\n    }).$on('update:preset', this.setPreset.bind(this)).$mount();\n  }\n  filter(nodes) {\n    if (!this.currentPreset) {\n      return nodes;\n    }\n    return nodes.filter(node => node.mtime === undefined || this.currentPreset.filter(node.mtime.getTime()));\n  }\n  setPreset(preset) {\n    this.currentPreset = preset;\n    this.filterUpdated();\n    const chips = [];\n    if (preset) {\n      chips.push({\n        icon: calendarSvg,\n        text: preset.label,\n        onclick: () => this.setPreset()\n      });\n    } else {\n      this.currentInstance?.resetFilter();\n    }\n    this.updateChips(chips);\n  }\n}\n/**\n * Register the file list filter by modification date\n */\nexport function registerModifiedFilter() {\n  registerFileListFilter(new ModifiedFilter());\n}","function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { subscribe } from '@nextcloud/event-bus';\nimport { FileListFilter, registerFileListFilter } from '@nextcloud/files';\nimport { t } from '@nextcloud/l10n';\nimport Vue from 'vue';\nimport FileListFilterType from \"../components/FileListFilter/FileListFilterType.vue\";\n// TODO: Create a modern replacement for OC.MimeType...\nimport svgDocument from '@mdi/svg/svg/file-document.svg?raw';\nimport svgSpreadsheet from '@mdi/svg/svg/file-table-box.svg?raw';\nimport svgPresentation from '@mdi/svg/svg/file-presentation-box.svg?raw';\nimport svgPDF from '@mdi/svg/svg/file-pdf-box.svg?raw';\nimport svgFolder from '@mdi/svg/svg/folder.svg?raw';\nimport svgAudio from '@mdi/svg/svg/music.svg?raw';\nimport svgImage from '@mdi/svg/svg/image.svg?raw';\nimport svgMovie from '@mdi/svg/svg/movie.svg?raw';\nconst colorize = (svg, color) => {\n  return svg.replace('<path ', `<path fill=\"${color}\" `);\n};\n/**\n * Available presets\n */\nconst getTypePresets = async () => [{\n  id: 'document',\n  label: t('files', 'Documents'),\n  icon: colorize(svgDocument, '#49abea'),\n  mime: ['x-office/document']\n}, {\n  id: 'spreadsheet',\n  label: t('files', 'Spreadsheets'),\n  icon: colorize(svgSpreadsheet, '#9abd4e'),\n  mime: ['x-office/spreadsheet']\n}, {\n  id: 'presentation',\n  label: t('files', 'Presentations'),\n  icon: colorize(svgPresentation, '#f0965f'),\n  mime: ['x-office/presentation']\n}, {\n  id: 'pdf',\n  label: t('files', 'PDFs'),\n  icon: colorize(svgPDF, '#dc5047'),\n  mime: ['application/pdf']\n}, {\n  id: 'folder',\n  label: t('files', 'Folders'),\n  icon: colorize(svgFolder, window.getComputedStyle(document.body).getPropertyValue('--color-primary-element')),\n  mime: ['httpd/unix-directory']\n}, {\n  id: 'audio',\n  label: t('files', 'Audio'),\n  icon: svgAudio,\n  mime: ['audio']\n}, {\n  id: 'image',\n  // TRANSLATORS: This is for filtering files, e.g. PNG or JPEG, so photos, drawings, or images in general\n  label: t('files', 'Photos and images'),\n  icon: svgImage,\n  mime: ['image']\n}, {\n  id: 'video',\n  label: t('files', 'Videos'),\n  icon: svgMovie,\n  mime: ['video']\n}];\nclass TypeFilter extends FileListFilter {\n  constructor() {\n    super('files:type', 10);\n    _defineProperty(this, \"currentInstance\", void 0);\n    _defineProperty(this, \"currentPresets\", void 0);\n    _defineProperty(this, \"allPresets\", void 0);\n    subscribe('files:navigation:changed', () => this.setPreset());\n  }\n  async mount(el) {\n    // We need to defer this as on init script this is not available:\n    if (this.allPresets === undefined) {\n      this.allPresets = await getTypePresets();\n    }\n    if (this.currentInstance) {\n      this.currentInstance.$destroy();\n    }\n    const View = Vue.extend(FileListFilterType);\n    this.currentInstance = new View({\n      propsData: {\n        typePresets: this.allPresets\n      },\n      el\n    }).$on('update:preset', this.setPreset.bind(this)).$mount();\n  }\n  filter(nodes) {\n    if (!this.currentPresets || this.currentPresets.length === 0) {\n      return nodes;\n    }\n    const mimeList = this.currentPresets.reduce((previous, current) => [...previous, ...current.mime], []);\n    return nodes.filter(node => {\n      if (!node.mime) {\n        return false;\n      }\n      const mime = node.mime.toLowerCase();\n      if (mimeList.includes(mime)) {\n        return true;\n      } else if (mimeList.includes(window.OC.MimeTypeList.aliases[mime])) {\n        return true;\n      } else if (mimeList.includes(mime.split('/')[0])) {\n        return true;\n      }\n      return false;\n    });\n  }\n  setPreset(presets) {\n    this.currentPresets = presets;\n    this.filterUpdated();\n    const chips = [];\n    if (presets && presets.length > 0) {\n      for (const preset of presets) {\n        chips.push({\n          icon: preset.icon,\n          text: preset.label,\n          onclick: () => this.setPreset(presets.filter(_ref => {\n            let {\n              id\n            } = _ref;\n            return id !== preset.id;\n          }))\n        });\n      }\n    } else {\n      this.currentInstance?.resetFilter();\n    }\n    this.updateChips(chips);\n  }\n}\n/**\n * Register the file list filter by file type\n */\nexport function registerTypeFilter() {\n  registerFileListFilter(new TypeFilter());\n}","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { addNewFileMenuEntry, registerDavProperty, registerFileAction } from '@nextcloud/files';\nimport { action as deleteAction } from \"./actions/deleteAction\";\nimport { action as downloadAction } from \"./actions/downloadAction\";\nimport { action as editLocallyAction } from \"./actions/editLocallyAction\";\nimport { action as favoriteAction } from \"./actions/favoriteAction\";\nimport { action as moveOrCopyAction } from \"./actions/moveOrCopyAction\";\nimport { action as openFolderAction } from \"./actions/openFolderAction\";\nimport { action as openInFilesAction } from \"./actions/openInFilesAction\";\nimport { action as renameAction } from \"./actions/renameAction\";\nimport { action as sidebarAction } from \"./actions/sidebarAction\";\nimport { action as viewInFolderAction } from \"./actions/viewInFolderAction\";\nimport { registerHiddenFilesFilter } from \"./filters/HiddenFilesFilter.ts\";\nimport { registerTypeFilter } from \"./filters/TypeFilter.ts\";\nimport { registerModifiedFilter } from \"./filters/ModifiedFilter.ts\";\nimport { entry as newFolderEntry } from \"./newMenu/newFolder.ts\";\nimport { entry as newTemplatesFolder } from \"./newMenu/newTemplatesFolder.ts\";\nimport { registerTemplateEntries } from \"./newMenu/newFromTemplate.ts\";\nimport { registerFavoritesView } from \"./views/favorites.ts\";\nimport registerRecentView from \"./views/recent\";\nimport registerPersonalFilesView from \"./views/personal-files\";\nimport registerFilesView from \"./views/files\";\nimport { registerFolderTreeView } from \"./views/folderTree.ts\";\nimport registerPreviewServiceWorker from \"./services/ServiceWorker.js\";\nimport { initLivePhotos } from \"./services/LivePhotos\";\nimport { isPublicShare } from '@nextcloud/sharing/public';\n// Register file actions\nregisterFileAction(deleteAction);\nregisterFileAction(downloadAction);\nregisterFileAction(editLocallyAction);\nregisterFileAction(favoriteAction);\nregisterFileAction(moveOrCopyAction);\nregisterFileAction(openFolderAction);\nregisterFileAction(openInFilesAction);\nregisterFileAction(renameAction);\nregisterFileAction(sidebarAction);\nregisterFileAction(viewInFolderAction);\n// Register new menu entry\naddNewFileMenuEntry(newFolderEntry);\naddNewFileMenuEntry(newTemplatesFolder);\nregisterTemplateEntries();\n// Register files views when not on public share\nif (isPublicShare() === false) {\n  registerFavoritesView();\n  registerFilesView();\n  registerRecentView();\n  registerPersonalFilesView();\n  registerFolderTreeView();\n}\n// Register file list filters\nregisterHiddenFilesFilter();\nregisterTypeFilter();\nregisterModifiedFilter();\n// Register preview service worker\nregisterPreviewServiceWorker();\nregisterDavProperty('nc:hidden', {\n  nc: 'http://nextcloud.org/ns'\n});\nregisterDavProperty('nc:is-mount-root', {\n  nc: 'http://nextcloud.org/ns'\n});\nregisterDavProperty('nc:metadata-blurhash', {\n  nc: 'http://nextcloud.org/ns'\n});\ninitLivePhotos();","/**\n * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { getLoggerBuilder } from '@nextcloud/logger';\nexport default getLoggerBuilder().setApp('files').detectUser().build();","import { basename } from 'path';\nimport { emit } from '@nextcloud/event-bus';\nimport { getCurrentUser } from '@nextcloud/auth';\nimport { Permission, Folder } from '@nextcloud/files';\nimport { showError, showInfo, showSuccess } from '@nextcloud/dialogs';\nimport { translate as t } from '@nextcloud/l10n';\nimport axios from '@nextcloud/axios';\nimport FolderPlusSvg from '@mdi/svg/svg/folder-plus.svg?raw';\nimport { newNodeName } from \"../utils/newNodeDialog\";\nimport logger from \"../logger\";\nconst createNewFolder = async (root, name) => {\n  const source = root.source + '/' + name;\n  const encodedSource = root.encodedSource + '/' + encodeURIComponent(name);\n  const response = await axios({\n    method: 'MKCOL',\n    url: encodedSource,\n    headers: {\n      Overwrite: 'F'\n    }\n  });\n  return {\n    fileid: parseInt(response.headers['oc-fileid']),\n    source\n  };\n};\nexport const entry = {\n  id: 'newFolder',\n  displayName: t('files', 'New folder'),\n  enabled: context => Boolean(context.permissions & Permission.CREATE) && Boolean(context.permissions & Permission.READ),\n  iconSvgInline: FolderPlusSvg,\n  order: 0,\n  async handler(context, content) {\n    const name = await newNodeName(t('files', 'New folder'), content);\n    if (name === null) {\n      showInfo(t('files', 'New folder creation cancelled'));\n      return;\n    }\n    try {\n      const {\n        fileid,\n        source\n      } = await createNewFolder(context, name.trim());\n      // Create the folder in the store\n      const folder = new Folder({\n        source,\n        id: fileid,\n        mtime: new Date(),\n        owner: context.owner,\n        permissions: Permission.ALL,\n        root: context?.root || '/files/' + getCurrentUser()?.uid,\n        // Include mount-type from parent folder as this is inherited\n        attributes: {\n          'mount-type': context.attributes?.['mount-type'],\n          'owner-id': context.attributes?.['owner-id'],\n          'owner-display-name': context.attributes?.['owner-display-name']\n        }\n      });\n      // Show success\n      emit('files:node:created', folder);\n      showSuccess(t('files', 'Created new folder \"{name}\"', {\n        name: basename(source)\n      }));\n      logger.debug('Created new folder', {\n        folder,\n        source\n      });\n      // Navigate to the new folder\n      window.OCP.Files.Router.goToRoute(null,\n      // use default route\n      {\n        view: 'files',\n        fileid: String(fileid)\n      }, {\n        dir: context.path\n      });\n    } catch (error) {\n      logger.error('Creating new folder failed', {\n        error\n      });\n      showError('Creating new folder failed');\n    }\n  }\n};","/**\n * SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { Permission, addNewFileMenuEntry } from '@nextcloud/files';\nimport { loadState } from '@nextcloud/initial-state';\nimport { newNodeName } from \"../utils/newNodeDialog\";\nimport { translate as t } from '@nextcloud/l10n';\nimport Vue, { defineAsyncComponent } from 'vue';\n// async to reduce bundle size\nconst TemplatePickerVue = defineAsyncComponent(() => import(\"../views/TemplatePicker.vue\"));\nlet TemplatePicker = null;\nconst getTemplatePicker = async context => {\n  if (TemplatePicker === null) {\n    // Create document root\n    const mountingPoint = document.createElement('div');\n    mountingPoint.id = 'template-picker';\n    document.body.appendChild(mountingPoint);\n    // Init vue app\n    TemplatePicker = new Vue({\n      render: h => h(TemplatePickerVue, {\n        ref: 'picker',\n        props: {\n          parent: context\n        }\n      }),\n      methods: {\n        open() {\n          this.$refs.picker.open(...arguments);\n        }\n      },\n      el: mountingPoint\n    });\n  }\n  return TemplatePicker;\n};\n/**\n * Register all new-file-menu entries for all template providers\n */\nexport function registerTemplateEntries() {\n  const templates = loadState('files', 'templates', []);\n  // Init template files menu\n  templates.forEach((provider, index) => {\n    addNewFileMenuEntry({\n      id: `template-new-${provider.app}-${index}`,\n      displayName: provider.label,\n      iconClass: provider.iconClass || 'icon-file',\n      iconSvgInline: provider.iconSvgInline,\n      enabled(context) {\n        return (context.permissions & Permission.CREATE) !== 0;\n      },\n      order: 11,\n      async handler(context, content) {\n        const templatePicker = getTemplatePicker(context);\n        const name = await newNodeName(`${provider.label}${provider.extension}`, content, {\n          label: t('files', 'Filename'),\n          name: provider.label\n        });\n        if (name !== null) {\n          // Create the file\n          const picker = await templatePicker;\n          picker.open(name.trim(), provider);\n        }\n      }\n    });\n  });\n}","import { getCurrentUser } from '@nextcloud/auth';\nimport { showError } from '@nextcloud/dialogs';\nimport { Permission, removeNewFileMenuEntry } from '@nextcloud/files';\nimport { loadState } from '@nextcloud/initial-state';\nimport { translate as t } from '@nextcloud/l10n';\nimport { generateOcsUrl } from '@nextcloud/router';\nimport { join } from 'path';\nimport { newNodeName } from \"../utils/newNodeDialog\";\nimport PlusSvg from '@mdi/svg/svg/plus.svg?raw';\nimport axios from '@nextcloud/axios';\nimport logger from \"../logger.ts\";\nlet templatesPath = loadState('files', 'templates_path', false);\nlogger.debug('Initial templates folder', {\n  templatesPath\n});\n/**\n * Init template folder\n * @param directory Folder where to create the templates folder\n * @param name Name to use or the templates folder\n */\nconst initTemplatesFolder = async function (directory, name) {\n  const templatePath = join(directory.path, name);\n  try {\n    logger.debug('Initializing the templates directory', {\n      templatePath\n    });\n    const {\n      data\n    } = await axios.post(generateOcsUrl('apps/files/api/v1/templates/path'), {\n      templatePath,\n      copySystemTemplates: true\n    });\n    // Go to template directory\n    window.OCP.Files.Router.goToRoute(null,\n    // use default route\n    {\n      view: 'files',\n      fileid: undefined\n    }, {\n      dir: templatePath\n    });\n    logger.info('Created new templates folder', {\n      ...data.ocs.data\n    });\n    templatesPath = data.ocs.data.templates_path;\n  } catch (error) {\n    logger.error('Unable to initialize the templates directory');\n    showError(t('files', 'Unable to initialize the templates directory'));\n  }\n};\nexport const entry = {\n  id: 'template-picker',\n  displayName: t('files', 'Create templates folder'),\n  iconSvgInline: PlusSvg,\n  order: 30,\n  enabled(context) {\n    // Templates folder already initialized\n    if (templatesPath) {\n      return false;\n    }\n    // Allow creation on your own folders only\n    if (context.owner !== getCurrentUser()?.uid) {\n      return false;\n    }\n    return (context.permissions & Permission.CREATE) !== 0;\n  },\n  async handler(context, content) {\n    const name = await newNodeName(t('files', 'Templates'), content, {\n      name: t('files', 'New template folder')\n    });\n    if (name !== null) {\n      // Create the template folder\n      initTemplatesFolder(context, name);\n      // Remove the menu entry\n      removeNewFileMenuEntry('template-picker');\n    }\n  }\n};","import { getCurrentUser } from '@nextcloud/auth';\nimport { Folder, Permission, davRemoteURL, davRootPath, getFavoriteNodes } from '@nextcloud/files';\nimport { CancelablePromise } from 'cancelable-promise';\nimport { getContents as filesContents } from \"./Files.ts\";\nimport { client } from \"./WebdavClient.ts\";\nexport const getContents = function () {\n  let path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '/';\n  // We only filter root files for favorites, for subfolders we can simply reuse the files contents\n  if (path !== '/') {\n    return filesContents(path);\n  }\n  return new CancelablePromise((resolve, reject, cancel) => {\n    const promise = getFavoriteNodes(client).catch(reject).then(contents => {\n      if (!contents) {\n        reject();\n        return;\n      }\n      resolve({\n        contents,\n        folder: new Folder({\n          id: 0,\n          source: `${davRemoteURL}${davRootPath}`,\n          root: davRootPath,\n          owner: getCurrentUser()?.uid || null,\n          permissions: Permission.READ\n        })\n      });\n    });\n    cancel(() => promise.cancel());\n  });\n};","import { davGetDefaultPropfind, davResultToNode, davRootPath } from '@nextcloud/files';\nimport { CancelablePromise } from 'cancelable-promise';\nimport { join } from 'path';\nimport { client } from \"./WebdavClient.ts\";\nimport logger from \"../logger.ts\";\n/**\n * Slim wrapper over `@nextcloud/files` `davResultToNode` to allow using the function with `Array.map`\n * @param stat The result returned by the webdav library\n */\nexport const resultToNode = stat => davResultToNode(stat);\nexport const getContents = function () {\n  let path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '/';\n  path = join(davRootPath, path);\n  const controller = new AbortController();\n  const propfindPayload = davGetDefaultPropfind();\n  return new CancelablePromise(async (resolve, reject, onCancel) => {\n    onCancel(() => controller.abort());\n    try {\n      const contentsResponse = await client.getDirectoryContents(path, {\n        details: true,\n        data: propfindPayload,\n        includeSelf: true,\n        signal: controller.signal\n      });\n      const root = contentsResponse.data[0];\n      const contents = contentsResponse.data.slice(1);\n      if (root.filename !== path && `${root.filename}/` !== path) {\n        logger.debug(`Exepected \"${path}\" but got filename \"${root.filename}\" instead.`);\n        throw new Error('Root node does not match requested path');\n      }\n      resolve({\n        folder: resultToNode(root),\n        contents: contents.map(result => {\n          try {\n            return resultToNode(result);\n          } catch (error) {\n            logger.error(`Invalid node detected '${result.basename}'`, {\n              error\n            });\n            return null;\n          }\n        }).filter(Boolean)\n      });\n    } catch (error) {\n      reject(error);\n    }\n  });\n};","/**\n * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { davRemoteURL } from '@nextcloud/files';\nimport axios from '@nextcloud/axios';\nimport { generateOcsUrl } from '@nextcloud/router';\nimport { getCurrentUser } from '@nextcloud/auth';\nimport { dirname, encodePath, joinPaths } from '@nextcloud/paths';\nimport { getCanonicalLocale, getLanguage } from '@nextcloud/l10n';\nimport { getContents as getFiles } from \"./Files.ts\";\nexport const folderTreeId = 'folders';\nexport const sourceRoot = `${davRemoteURL}/files/${getCurrentUser()?.uid}`;\nconst collator = Intl.Collator([getLanguage(), getCanonicalLocale()], {\n  numeric: true,\n  usage: 'sort'\n});\nconst compareNodes = (a, b) => collator.compare(a.displayName ?? a.basename, b.displayName ?? b.basename);\nconst getTreeNodes = function (tree) {\n  let currentPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '/';\n  let nodes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  const sortedTree = tree.toSorted(compareNodes);\n  for (const {\n    id,\n    basename,\n    displayName,\n    children\n  } of sortedTree) {\n    const path = joinPaths(currentPath, basename);\n    const source = `${sourceRoot}${path}`;\n    const node = {\n      source,\n      encodedSource: encodeSource(source),\n      path,\n      fileid: id,\n      basename\n    };\n    if (displayName) {\n      node.displayName = displayName;\n    }\n    nodes.push(node);\n    if (children.length > 0) {\n      getTreeNodes(children, path, nodes);\n    }\n  }\n  return nodes;\n};\nexport const getFolderTreeNodes = async function () {\n  let path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '/';\n  let depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  const {\n    data: tree\n  } = await axios.get(generateOcsUrl('/apps/files/api/v1/folder-tree'), {\n    params: new URLSearchParams({\n      path,\n      depth: String(depth)\n    })\n  });\n  const nodes = getTreeNodes(tree, path);\n  return nodes;\n};\nexport const getContents = path => getFiles(path);\nexport const encodeSource = source => {\n  const {\n    origin\n  } = new URL(source);\n  return origin + encodePath(source.slice(origin.length));\n};\nexport const getSourceParent = source => {\n  const parent = dirname(source);\n  if (parent === sourceRoot) {\n    return folderTreeId;\n  }\n  return encodeSource(parent);\n};","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { registerDavProperty } from '@nextcloud/files';\n/**\n *\n */\nexport function initLivePhotos() {\n  registerDavProperty('nc:metadata-files-live-photo', {\n    nc: 'http://nextcloud.org/ns'\n  });\n}\n/**\n * @param {Node} node - The node\n */\nexport function isLivePhoto(node) {\n  return node.attributes['metadata-files-live-photo'] !== undefined;\n}","import { getCurrentUser } from '@nextcloud/auth';\nimport { getContents as getFiles } from \"./Files\";\nconst currentUserId = getCurrentUser()?.uid;\n/**\n * Filters each file/folder on its shared status\n *\n * A personal file is considered a file that has all of the following properties:\n * 1. the current user owns\n * 2. the file is not shared with anyone\n * 3. the file is not a group folder\n * @todo Move to `@nextcloud/files`\n * @param node The node to check\n */\nexport const isPersonalFile = function (node) {\n  // the type of mounts that determine whether the file is shared\n  const sharedMountTypes = ['group', 'shared'];\n  const mountType = node.attributes['mount-type'];\n  return currentUserId === node.owner && !sharedMountTypes.includes(mountType);\n};\nexport const getContents = function () {\n  let path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '/';\n  // get all the files from the current path as a cancellable promise\n  // then filter the files that the user does not own, or has shared / is a group folder\n  return getFiles(path).then(content => {\n    content.contents = content.contents.filter(isPersonalFile);\n    return content;\n  });\n};","import { getCurrentUser } from '@nextcloud/auth';\nimport { Folder, Permission, davGetRecentSearch, davRootPath, davRemoteURL, davResultToNode } from '@nextcloud/files';\nimport { CancelablePromise } from 'cancelable-promise';\nimport { useUserConfigStore } from \"../store/userconfig.ts\";\nimport { pinia } from \"../store/index.ts\";\nimport { client } from \"./WebdavClient.ts\";\nimport { getBaseUrl } from '@nextcloud/router';\nconst lastTwoWeeksTimestamp = Math.round(Date.now() / 1000 - 60 * 60 * 24 * 14);\n/**\n * Helper to map a WebDAV result to a Nextcloud node\n * The search endpoint already includes the dav remote URL so we must not include it in the source\n *\n * @param stat the WebDAV result\n */\nconst resultToNode = stat => davResultToNode(stat, davRootPath, getBaseUrl());\n/**\n * Get recently changed nodes\n *\n * This takes the users preference about hidden files into account.\n * If hidden files are not shown, then also recently changed files *in* hidden directories are filtered.\n *\n * @param path Path to search for recent changes\n */\nexport const getContents = function () {\n  let path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '/';\n  const store = useUserConfigStore(pinia);\n  /**\n   * Filter function that returns only the visible nodes - or hidden if explicitly configured\n   * @param node The node to check\n   */\n  const filterHidden = node => path !== '/' // We need to hide files from hidden directories in the root if not configured to show\n  || store.userConfig.show_hidden // If configured to show hidden files we can early return\n  || !node.dirname.split('/').some(dir => dir.startsWith('.')); // otherwise only include the file if non of the parent directories is hidden\n  const controller = new AbortController();\n  const handler = async () => {\n    const contentsResponse = await client.search('/', {\n      signal: controller.signal,\n      details: true,\n      data: davGetRecentSearch(lastTwoWeeksTimestamp)\n    });\n    const contents = contentsResponse.data.results.map(resultToNode).filter(filterHidden);\n    return {\n      folder: new Folder({\n        id: 0,\n        source: `${davRemoteURL}${davRootPath}`,\n        root: davRootPath,\n        owner: getCurrentUser()?.uid || null,\n        permissions: Permission.READ\n      }),\n      contents\n    };\n  };\n  return new CancelablePromise(async (resolve, reject, cancel) => {\n    cancel(() => controller.abort());\n    resolve(handler());\n  });\n};","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { davGetClient } from '@nextcloud/files';\nexport const client = davGetClient();","/**\n * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { createPinia } from 'pinia';\nexport const pinia = createPinia();","import { defineStore } from 'pinia';\nimport { emit, subscribe } from '@nextcloud/event-bus';\nimport { generateUrl } from '@nextcloud/router';\nimport { loadState } from '@nextcloud/initial-state';\nimport axios from '@nextcloud/axios';\nimport Vue from 'vue';\nconst userConfig = loadState('files', 'config', {\n  show_hidden: false,\n  crop_image_previews: true,\n  sort_favorites_first: true,\n  sort_folders_first: true,\n  grid_view: false\n});\nexport const useUserConfigStore = function () {\n  const store = defineStore('userconfig', {\n    state: () => ({\n      userConfig\n    }),\n    actions: {\n      /**\n       * Update the user config local store\n       * @param key\n       * @param value\n       */\n      onUpdate(key, value) {\n        Vue.set(this.userConfig, key, value);\n      },\n      /**\n       * Update the user config local store AND on server side\n       * @param key\n       * @param value\n       */\n      async update(key, value) {\n        await axios.put(generateUrl('/apps/files/api/v1/config/' + key), {\n          value\n        });\n        emit('files:config:updated', {\n          key,\n          value\n        });\n      }\n    }\n  });\n  const userConfigStore = store(...arguments);\n  // Make sure we only register the listeners once\n  if (!userConfigStore._initialized) {\n    subscribe('files:config:updated', function (_ref) {\n      let {\n        key,\n        value\n      } = _ref;\n      userConfigStore.onUpdate(key, value);\n    });\n    userConfigStore._initialized = true;\n  }\n  return userConfigStore;\n};","/*!\n * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { InvalidFilenameError, InvalidFilenameErrorReason, validateFilename } from '@nextcloud/files';\nimport { t } from '@nextcloud/l10n';\n/**\n * Get the validity of a filename (empty if valid).\n * This can be used for `setCustomValidity` on input elements\n * @param name The filename\n * @param escape Escape the matched string in the error (only set when used in HTML)\n */\nexport function getFilenameValidity(name) {\n  let escape = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  if (name.trim() === '') {\n    return t('files', 'Filename must not be empty.');\n  }\n  try {\n    validateFilename(name);\n    return '';\n  } catch (error) {\n    if (!(error instanceof InvalidFilenameError)) {\n      throw error;\n    }\n    switch (error.reason) {\n      case InvalidFilenameErrorReason.Character:\n        return t('files', '\"{char}\" is not allowed inside a filename.', {\n          char: error.segment\n        }, undefined, {\n          escape\n        });\n      case InvalidFilenameErrorReason.ReservedName:\n        return t('files', '\"{segment}\" is a reserved name and not allowed for filenames.', {\n          segment: error.segment\n        }, undefined, {\n          escape: false\n        });\n      case InvalidFilenameErrorReason.Extension:\n        if (error.segment.match(/\\.[a-z]/i)) {\n          return t('files', '\"{extension}\" is not an allowed filetype.', {\n            extension: error.segment\n          }, undefined, {\n            escape: false\n          });\n        }\n        return t('files', 'Filenames must not end with \"{extension}\".', {\n          extension: error.segment\n        }, undefined, {\n          escape: false\n        });\n      default:\n        return t('files', 'Invalid filename.');\n    }\n  }\n}","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n/**\n * Simple non-secure hashing function similar to Java's `hashCode`\n * @param str The string to hash\n * @return {number} a non secure hash of the string\n */\nexport const hashCode = function (str) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = (hash << 5) - hash + str.charCodeAt(i) | 0;\n  }\n  return hash >>> 0;\n};","/**\n * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { spawnDialog } from '@nextcloud/dialogs';\nimport NewNodeDialog from \"../components/NewNodeDialog.vue\";\n/**\n * Ask user for file or folder name\n * @param defaultName Default name to use\n * @param folderContent Nodes with in the current folder to check for unique name\n * @param labels Labels to set on the dialog\n * @return string if successful otherwise null if aborted\n */\nexport function newNodeName(defaultName, folderContent) {\n  let labels = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const contentNames = folderContent.map(node => node.basename);\n  return new Promise(resolve => {\n    spawnDialog(NewNodeDialog, {\n      ...labels,\n      defaultName,\n      otherNames: contentNames\n    }, folderName => {\n      resolve(folderName);\n    });\n  });\n}","import { Permission } from '@nextcloud/files';\n/**\n * Check permissions on the node if it can be downloaded\n * @param node The node to check\n * @return True if downloadable, false otherwise\n */\nexport function isDownloadable(node) {\n  if ((node.permissions & Permission.READ) === 0) {\n    return false;\n  }\n  // If the mount type is a share, ensure it got download permissions.\n  if (node.attributes['share-attributes']) {\n    const shareAttributes = JSON.parse(node.attributes['share-attributes'] || '[]');\n    const downloadAttribute = shareAttributes.find(_ref => {\n      let {\n        scope,\n        key\n      } = _ref;\n      return scope === 'permissions' && key === 'download';\n    });\n    if (downloadAttribute !== undefined) {\n      return downloadAttribute.value === true;\n    }\n  }\n  return true;\n}","import { subscribe } from '@nextcloud/event-bus';\nimport { FileType, View, getFavoriteNodes, getNavigation } from '@nextcloud/files';\nimport { getLanguage, translate as t } from '@nextcloud/l10n';\nimport { client } from \"../services/WebdavClient.ts\";\nimport FolderSvg from '@mdi/svg/svg/folder.svg?raw';\nimport StarSvg from '@mdi/svg/svg/star.svg?raw';\nimport { getContents } from \"../services/Favorites\";\nimport { hashCode } from \"../utils/hashUtils\";\nimport logger from \"../logger\";\nconst generateFavoriteFolderView = function (folder) {\n  let index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return new View({\n    id: generateIdFromPath(folder.path),\n    name: folder.displayname,\n    icon: FolderSvg,\n    order: index,\n    params: {\n      dir: folder.path,\n      fileid: String(folder.fileid),\n      view: 'favorites'\n    },\n    parent: 'favorites',\n    columns: [],\n    getContents\n  });\n};\nconst generateIdFromPath = function (path) {\n  return `favorite-${hashCode(path)}`;\n};\nexport const registerFavoritesView = async () => {\n  const Navigation = getNavigation();\n  Navigation.register(new View({\n    id: 'favorites',\n    name: t('files', 'Favorites'),\n    caption: t('files', 'List of favorite files and folders.'),\n    emptyTitle: t('files', 'No favorites yet'),\n    emptyCaption: t('files', 'Files and folders you mark as favorite will show up here'),\n    icon: StarSvg,\n    order: 15,\n    columns: [],\n    getContents\n  }));\n  const favoriteFolders = (await getFavoriteNodes(client)).filter(node => node.type === FileType.Folder);\n  const favoriteFoldersViews = favoriteFolders.map((folder, index) => generateFavoriteFolderView(folder, index));\n  logger.debug('Generating favorites view', {\n    favoriteFolders\n  });\n  favoriteFoldersViews.forEach(view => Navigation.register(view));\n  /**\n   * Update favourites navigation when a new folder is added\n   */\n  subscribe('files:favorites:added', node => {\n    if (node.type !== FileType.Folder) {\n      return;\n    }\n    // Sanity check\n    if (node.path === null || !node.root?.startsWith('/files')) {\n      logger.error('Favorite folder is not within user files root', {\n        node\n      });\n      return;\n    }\n    addToFavorites(node);\n  });\n  /**\n   * Remove favorites navigation when a folder is removed\n   */\n  subscribe('files:favorites:removed', node => {\n    if (node.type !== FileType.Folder) {\n      return;\n    }\n    // Sanity check\n    if (node.path === null || !node.root?.startsWith('/files')) {\n      logger.error('Favorite folder is not within user files root', {\n        node\n      });\n      return;\n    }\n    removePathFromFavorites(node.path);\n  });\n  /**\n   * Update favourites navigation when a folder is renamed\n   */\n  subscribe('files:node:renamed', node => {\n    if (node.type !== FileType.Folder) {\n      return;\n    }\n    if (node.attributes.favorite !== 1) {\n      return;\n    }\n    updateNodeFromFavorites(node);\n  });\n  /**\n   * Sort the favorites paths array and\n   * update the order property of the existing views\n   */\n  const updateAndSortViews = function () {\n    favoriteFolders.sort((a, b) => a.path.localeCompare(b.path, getLanguage(), {\n      ignorePunctuation: true\n    }));\n    favoriteFolders.forEach((folder, index) => {\n      const view = favoriteFoldersViews.find(view => view.id === generateIdFromPath(folder.path));\n      if (view) {\n        view.order = index;\n      }\n    });\n  };\n  // Add a folder to the favorites paths array and update the views\n  const addToFavorites = function (node) {\n    const view = generateFavoriteFolderView(node);\n    // Skip if already exists\n    if (favoriteFolders.find(folder => folder.path === node.path)) {\n      return;\n    }\n    // Update arrays\n    favoriteFolders.push(node);\n    favoriteFoldersViews.push(view);\n    // Update and sort views\n    updateAndSortViews();\n    Navigation.register(view);\n  };\n  // Remove a folder from the favorites paths array and update the views\n  const removePathFromFavorites = function (path) {\n    const id = generateIdFromPath(path);\n    const index = favoriteFolders.findIndex(folder => folder.path === path);\n    // Skip if not exists\n    if (index === -1) {\n      return;\n    }\n    // Update arrays\n    favoriteFolders.splice(index, 1);\n    favoriteFoldersViews.splice(index, 1);\n    // Update and sort views\n    Navigation.remove(id);\n    updateAndSortViews();\n  };\n  // Update a folder from the favorites paths array and update the views\n  const updateNodeFromFavorites = function (node) {\n    const favoriteFolder = favoriteFolders.find(folder => folder.fileid === node.fileid);\n    // Skip if it does not exists\n    if (favoriteFolder === undefined) {\n      return;\n    }\n    removePathFromFavorites(favoriteFolder.path);\n    addToFavorites(node);\n  };\n};","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { translate as t } from '@nextcloud/l10n';\nimport FolderSvg from '@mdi/svg/svg/folder.svg?raw';\nimport { getContents } from \"../services/Files\";\nimport { View, getNavigation } from '@nextcloud/files';\nexport default () => {\n  const Navigation = getNavigation();\n  Navigation.register(new View({\n    id: 'files',\n    name: t('files', 'All files'),\n    caption: t('files', 'List of your files and folders.'),\n    icon: FolderSvg,\n    order: 0,\n    getContents\n  }));\n};","/**\n * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport PQueue from 'p-queue';\nimport { Folder, View, getNavigation } from '@nextcloud/files';\nimport { translate as t } from '@nextcloud/l10n';\nimport { emit, subscribe } from '@nextcloud/event-bus';\nimport { isSamePath } from '@nextcloud/paths';\nimport { loadState } from '@nextcloud/initial-state';\nimport FolderSvg from '@mdi/svg/svg/folder.svg?raw';\nimport FolderMultipleSvg from '@mdi/svg/svg/folder-multiple.svg?raw';\nimport { folderTreeId, getContents, getFolderTreeNodes, getSourceParent, sourceRoot } from \"../services/FolderTree.ts\";\nconst isFolderTreeEnabled = loadState('files', 'config', {\n  folder_tree: true\n}).folder_tree;\nlet showHiddenFiles = loadState('files', 'config', {\n  show_hidden: false\n}).show_hidden;\nconst Navigation = getNavigation();\nconst queue = new PQueue({\n  concurrency: 5,\n  intervalCap: 5,\n  interval: 200\n});\nconst registerQueue = new PQueue({\n  concurrency: 5,\n  intervalCap: 5,\n  interval: 200\n});\nconst registerTreeChildren = async function () {\n  let path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '/';\n  await queue.add(async () => {\n    const nodes = await getFolderTreeNodes(path);\n    const promises = nodes.map(node => registerQueue.add(() => registerNodeView(node)));\n    await Promise.allSettled(promises);\n  });\n};\nconst getLoadChildViews = node => {\n  return async view => {\n    // @ts-expect-error Custom property on View instance\n    if (view.loading || view.loaded) {\n      return;\n    }\n    // @ts-expect-error Custom property\n    view.loading = true;\n    await registerTreeChildren(node.path);\n    // @ts-expect-error Custom property\n    view.loading = false;\n    // @ts-expect-error Custom property\n    view.loaded = true;\n    // @ts-expect-error No payload\n    emit('files:navigation:updated');\n    // @ts-expect-error No payload\n    emit('files:folder-tree:expanded');\n  };\n};\nconst registerNodeView = node => {\n  const registeredView = Navigation.views.find(view => view.id === node.encodedSource);\n  if (registeredView) {\n    Navigation.remove(registeredView.id);\n  }\n  if (!showHiddenFiles && node.basename.startsWith('.')) {\n    return;\n  }\n  Navigation.register(new View({\n    id: node.encodedSource,\n    parent: getSourceParent(node.source),\n    // @ts-expect-error Casing differences\n    name: node.displayName ?? node.displayname ?? node.basename,\n    icon: FolderSvg,\n    getContents,\n    loadChildViews: getLoadChildViews(node),\n    params: {\n      view: folderTreeId,\n      fileid: String(node.fileid),\n      // Needed for matching exact routes\n      dir: node.path\n    }\n  }));\n};\nconst removeFolderView = folder => {\n  const viewId = folder.encodedSource;\n  Navigation.remove(viewId);\n};\nconst removeFolderViewSource = source => {\n  Navigation.remove(source);\n};\nconst onCreateNode = node => {\n  if (!(node instanceof Folder)) {\n    return;\n  }\n  registerNodeView(node);\n};\nconst onDeleteNode = node => {\n  if (!(node instanceof Folder)) {\n    return;\n  }\n  removeFolderView(node);\n};\nconst onMoveNode = _ref => {\n  let {\n    node,\n    oldSource\n  } = _ref;\n  if (!(node instanceof Folder)) {\n    return;\n  }\n  removeFolderViewSource(oldSource);\n  registerNodeView(node);\n  const newPath = node.source.replace(sourceRoot, '');\n  const oldPath = oldSource.replace(sourceRoot, '');\n  const childViews = Navigation.views.filter(view => {\n    if (!view.params?.dir) {\n      return false;\n    }\n    if (isSamePath(view.params.dir, oldPath)) {\n      return false;\n    }\n    return view.params.dir.startsWith(oldPath);\n  });\n  for (const view of childViews) {\n    // @ts-expect-error FIXME Allow setting parent\n    view.parent = getSourceParent(node.source);\n    // @ts-expect-error dir param is defined\n    view.params.dir = view.params.dir.replace(oldPath, newPath);\n  }\n};\nconst onUserConfigUpdated = async _ref2 => {\n  let {\n    key,\n    value\n  } = _ref2;\n  if (key === 'show_hidden') {\n    showHiddenFiles = value;\n    await registerTreeChildren();\n    // @ts-expect-error No payload\n    emit('files:folder-tree:initialized');\n  }\n};\nconst registerTreeRoot = () => {\n  Navigation.register(new View({\n    id: folderTreeId,\n    name: t('files', 'All folders'),\n    caption: t('files', 'List of your files and folders.'),\n    icon: FolderMultipleSvg,\n    order: 50,\n    // Below all other views\n    getContents\n  }));\n};\nexport const registerFolderTreeView = async () => {\n  if (!isFolderTreeEnabled) {\n    return;\n  }\n  registerTreeRoot();\n  await registerTreeChildren();\n  subscribe('files:node:created', onCreateNode);\n  subscribe('files:node:deleted', onDeleteNode);\n  subscribe('files:node:moved', onMoveNode);\n  subscribe('files:config:updated', onUserConfigUpdated);\n  // @ts-expect-error No payload\n  emit('files:folder-tree:initialized');\n};","/**\n * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { translate as t } from '@nextcloud/l10n';\nimport { View, getNavigation } from '@nextcloud/files';\nimport { getContents } from \"../services/PersonalFiles\";\nimport AccountIcon from '@mdi/svg/svg/account.svg?raw';\nexport default () => {\n  const Navigation = getNavigation();\n  Navigation.register(new View({\n    id: 'personal',\n    name: t('files', 'Personal Files'),\n    caption: t('files', 'List of your files and folders that are not shared.'),\n    emptyTitle: t('files', 'No personal files found'),\n    emptyCaption: t('files', 'Files that are not shared will show up here.'),\n    icon: AccountIcon,\n    order: 5,\n    getContents\n  }));\n};","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { View, getNavigation } from '@nextcloud/files';\nimport { translate as t } from '@nextcloud/l10n';\nimport HistorySvg from '@mdi/svg/svg/history.svg?raw';\nimport { getContents } from \"../services/Recent\";\nexport default () => {\n  const Navigation = getNavigation();\n  Navigation.register(new View({\n    id: 'recent',\n    name: t('files', 'Recent'),\n    caption: t('files', 'List of recently modified files and folders.'),\n    emptyTitle: t('files', 'No recently modified files'),\n    emptyCaption: t('files', 'Files and folders you recently modified will show up here.'),\n    icon: HistorySvg,\n    order: 10,\n    defaultSortKey: 'mtime',\n    getContents\n  }));\n};","import { defineComponent as _defineComponent } from 'vue';\nimport { t } from '@nextcloud/l10n';\nimport NcActions from '@nextcloud/vue/dist/Components/NcActions.js';\nimport NcActionButton from '@nextcloud/vue/dist/Components/NcActionButton.js';\nimport NcActionSeparator from '@nextcloud/vue/dist/Components/NcActionSeparator.js';\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'FileListFilter',\n  props: {\n    isActive: {\n      type: Boolean,\n      required: true\n    },\n    filterName: {\n      type: String,\n      required: true\n    }\n  },\n  emits: [\"reset-filter\"],\n  setup(__props) {\n    return {\n      __sfc: true,\n      t,\n      NcActions,\n      NcActionButton,\n      NcActionSeparator\n    };\n  }\n});","import { mdiCalendarRange } from '@mdi/js';\nimport { translate as t } from '@nextcloud/l10n';\nimport { defineComponent } from 'vue';\nimport NcActionButton from '@nextcloud/vue/dist/Components/NcActionButton.js';\nimport NcIconSvgWrapper from '@nextcloud/vue/dist/Components/NcIconSvgWrapper.js';\nimport FileListFilter from \"./FileListFilter.vue\";\nexport default defineComponent({\n  components: {\n    FileListFilter,\n    NcActionButton,\n    NcIconSvgWrapper\n  },\n  props: {\n    timePresets: {\n      type: Array,\n      required: true\n    }\n  },\n  setup() {\n    return {\n      // icons used in template\n      mdiCalendarRange\n    };\n  },\n  data() {\n    return {\n      selectedOption: null,\n      timeRangeEnd: null,\n      timeRangeStart: null\n    };\n  },\n  computed: {\n    /**\n     * Is the filter currently active\n     */\n    isActive() {\n      return this.selectedOption !== null;\n    },\n    currentPreset() {\n      return this.timePresets.find(_ref => {\n        let {\n          id\n        } = _ref;\n        return id === this.selectedOption;\n      }) ?? null;\n    }\n  },\n  watch: {\n    selectedOption() {\n      if (this.selectedOption === null) {\n        this.$emit('update:preset');\n      } else {\n        const preset = this.currentPreset;\n        this.$emit('update:preset', preset);\n      }\n    }\n  },\n  methods: {\n    t,\n    resetFilter() {\n      this.selectedOption = null;\n      this.timeRangeEnd = null;\n      this.timeRangeStart = null;\n    }\n  }\n});","import { mdiFile } from '@mdi/js';\nimport { translate as t } from '@nextcloud/l10n';\nimport { defineComponent } from 'vue';\nimport NcActionButton from '@nextcloud/vue/dist/Components/NcActionButton.js';\nimport NcIconSvgWrapper from '@nextcloud/vue/dist/Components/NcIconSvgWrapper.js';\nimport FileListFilter from \"./FileListFilter.vue\";\nexport default defineComponent({\n  name: 'FileListFilterType',\n  components: {\n    FileListFilter,\n    NcActionButton,\n    NcIconSvgWrapper\n  },\n  props: {\n    typePresets: {\n      type: Array,\n      required: true\n    }\n  },\n  setup() {\n    return {\n      mdiFile,\n      t\n    };\n  },\n  data() {\n    return {\n      selectedOptions: []\n    };\n  },\n  computed: {\n    isActive() {\n      return this.selectedOptions.length > 0;\n    }\n  },\n  watch: {\n    selectedOptions(newValue, oldValue) {\n      if (this.selectedOptions.length === 0) {\n        if (oldValue.length !== 0) {\n          this.$emit('update:preset');\n        }\n      } else {\n        this.$emit('update:preset', this.selectedOptions);\n      }\n    }\n  },\n  methods: {\n    resetFilter() {\n      this.selectedOptions = [];\n    },\n    /**\n     * Toggle option from selected option\n     * @param option The option to toggle\n     */\n    toggleOption(option) {\n      const idx = this.selectedOptions.indexOf(option);\n      if (idx !== -1) {\n        this.selectedOptions.splice(idx, 1);\n      } else {\n        this.selectedOptions.push(option);\n      }\n    }\n  }\n});","import { defineComponent as _defineComponent } from 'vue';\nimport { getUniqueName } from '@nextcloud/files';\nimport { t } from '@nextcloud/l10n';\nimport { extname } from 'path';\nimport { nextTick, onMounted, ref, watch, watchEffect } from 'vue';\nimport { getFilenameValidity } from \"../utils/filenameValidity.ts\";\nimport NcButton from '@nextcloud/vue/dist/Components/NcButton.js';\nimport NcDialog from '@nextcloud/vue/dist/Components/NcDialog.js';\nimport NcTextField from '@nextcloud/vue/dist/Components/NcTextField.js';\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'NewNodeDialog',\n  props: {\n    /**\n     * The name to be used by default\n     */\n    defaultName: {\n      type: String,\n      default: t('files', 'New folder')\n    },\n    /**\n     * Other files that are in the current directory\n     */\n    otherNames: {\n      type: Array,\n      default: () => []\n    },\n    /**\n     * Open state of the dialog\n     */\n    open: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Dialog name\n     */\n    name: {\n      type: String,\n      default: t('files', 'Create new folder')\n    },\n    /**\n     * Input label\n     */\n    label: {\n      type: String,\n      default: t('files', 'Folder name')\n    }\n  },\n  emits: [\"close\"],\n  setup(__props, _ref) {\n    let {\n      emit\n    } = _ref;\n    const props = __props;\n    const localDefaultName = ref(props.defaultName);\n    const nameInput = ref();\n    const formElement = ref();\n    const validity = ref('');\n    /**\n     * Focus the filename input field\n     */\n    function focusInput() {\n      nextTick(() => {\n        // get the input element\n        const input = nameInput.value?.$el.querySelector('input');\n        if (!props.open || !input) {\n          return;\n        }\n        // length of the basename\n        const length = localDefaultName.value.length - extname(localDefaultName.value).length;\n        // focus the input\n        input.focus();\n        // and set the selection to the basename (name without extension)\n        input.setSelectionRange(0, length);\n      });\n    }\n    /**\n     * Trigger submit on the form\n     */\n    function submit() {\n      formElement.value?.requestSubmit();\n    }\n    // Reset local name on props change\n    watch(() => [props.defaultName, props.otherNames], () => {\n      localDefaultName.value = getUniqueName(props.defaultName, props.otherNames).trim();\n    });\n    // Validate the local name\n    watchEffect(() => {\n      if (props.otherNames.includes(localDefaultName.value.trim())) {\n        validity.value = t('files', 'This name is already in use.');\n      } else {\n        validity.value = getFilenameValidity(localDefaultName.value.trim());\n      }\n      const input = nameInput.value?.$el.querySelector('input');\n      if (input) {\n        input.setCustomValidity(validity.value);\n        input.reportValidity();\n      }\n    });\n    // Ensure the input is focussed even if the dialog is already mounted but not open\n    watch(() => props.open, () => {\n      nextTick(() => {\n        focusInput();\n      });\n    });\n    onMounted(() => {\n      // on mounted lets use the unique name\n      localDefaultName.value = getUniqueName(localDefaultName.value, props.otherNames).trim();\n      nextTick(() => focusInput());\n    });\n    return {\n      __sfc: true,\n      props,\n      emit,\n      localDefaultName,\n      nameInput,\n      formElement,\n      validity,\n      focusInput,\n      submit,\n      t,\n      NcButton,\n      NcDialog,\n      NcTextField\n    };\n  }\n});","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c,\n    _setup = _vm._self._setupProxy;\n  return _c(_setup.NcActions, {\n    attrs: {\n      \"force-menu\": \"\",\n      type: _vm.isActive ? \"secondary\" : \"tertiary\",\n      \"menu-name\": _vm.filterName\n    },\n    scopedSlots: _vm._u([{\n      key: \"icon\",\n      fn: function () {\n        return [_vm._t(\"icon\")];\n      },\n      proxy: true\n    }], null, true)\n  }, [_vm._v(\" \"), _vm._t(\"default\"), _vm._v(\" \"), _vm.isActive ? [_c(_setup.NcActionSeparator), _vm._v(\" \"), _c(_setup.NcActionButton, {\n    staticClass: \"files-list-filter__clear-button\",\n    attrs: {\n      \"close-after-click\": \"\"\n    },\n    on: {\n      click: function ($event) {\n        return _vm.$emit(\"reset-filter\");\n      }\n    }\n  }, [_vm._v(\"\\n\\t\\t\\t\" + _vm._s(_setup.t(\"files\", \"Clear filter\")) + \"\\n\\t\\t\")])] : _vm._e()], 2);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\nexport { render, staticRenderFns };","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c,\n    _setup = _vm._self._setupProxy;\n  return _c(\"FileListFilter\", {\n    attrs: {\n      \"is-active\": _vm.isActive,\n      \"filter-name\": _vm.t(\"files\", \"Modified\")\n    },\n    on: {\n      \"reset-filter\": _vm.resetFilter\n    },\n    scopedSlots: _vm._u([{\n      key: \"icon\",\n      fn: function () {\n        return [_c(\"NcIconSvgWrapper\", {\n          attrs: {\n            path: _vm.mdiCalendarRange\n          }\n        })];\n      },\n      proxy: true\n    }])\n  }, [_vm._v(\" \"), _vm._l(_vm.timePresets, function (preset) {\n    return _c(\"NcActionButton\", {\n      key: preset.id,\n      attrs: {\n        type: \"radio\",\n        \"close-after-click\": \"\",\n        \"model-value\": _vm.selectedOption,\n        value: preset.id\n      },\n      on: {\n        \"update:modelValue\": function ($event) {\n          _vm.selectedOption = $event;\n        },\n        \"update:model-value\": function ($event) {\n          _vm.selectedOption = $event;\n        }\n      }\n    }, [_vm._v(\"\\n\\t\\t\" + _vm._s(preset.label) + \"\\n\\t\")]);\n  })], 2);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\nexport { render, staticRenderFns };","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c,\n    _setup = _vm._self._setupProxy;\n  return _c(\"FileListFilter\", {\n    staticClass: \"file-list-filter-type\",\n    attrs: {\n      \"is-active\": _vm.isActive,\n      \"filter-name\": _vm.t(\"files\", \"Type\")\n    },\n    on: {\n      \"reset-filter\": _vm.resetFilter\n    },\n    scopedSlots: _vm._u([{\n      key: \"icon\",\n      fn: function () {\n        return [_c(\"NcIconSvgWrapper\", {\n          attrs: {\n            path: _vm.mdiFile\n          }\n        })];\n      },\n      proxy: true\n    }])\n  }, [_vm._v(\" \"), _vm._l(_vm.typePresets, function (fileType) {\n    return _c(\"NcActionButton\", {\n      key: fileType.id,\n      attrs: {\n        type: \"checkbox\",\n        \"model-value\": _vm.selectedOptions.includes(fileType)\n      },\n      on: {\n        click: function ($event) {\n          return _vm.toggleOption(fileType);\n        }\n      },\n      scopedSlots: _vm._u([{\n        key: \"icon\",\n        fn: function () {\n          return [_c(\"NcIconSvgWrapper\", {\n            attrs: {\n              svg: fileType.icon\n            }\n          })];\n        },\n        proxy: true\n      }], null, true)\n    }, [_vm._v(\"\\n\\t\\t\" + _vm._s(fileType.label) + \"\\n\\t\")]);\n  })], 2);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\nexport { render, staticRenderFns };","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c,\n    _setup = _vm._self._setupProxy;\n  return _c(_setup.NcDialog, {\n    attrs: {\n      \"data-cy-files-new-node-dialog\": \"\",\n      name: _vm.name,\n      open: _vm.open,\n      \"close-on-click-outside\": \"\",\n      \"out-transition\": \"\"\n    },\n    on: {\n      \"update:open\": function ($event) {\n        return _setup.emit(\"close\", null);\n      }\n    },\n    scopedSlots: _vm._u([{\n      key: \"actions\",\n      fn: function () {\n        return [_c(_setup.NcButton, {\n          attrs: {\n            \"data-cy-files-new-node-dialog-submit\": \"\",\n            type: \"primary\",\n            disabled: _setup.validity !== \"\"\n          },\n          on: {\n            click: _setup.submit\n          }\n        }, [_vm._v(\"\\n\\t\\t\\t\" + _vm._s(_setup.t(\"files\", \"Create\")) + \"\\n\\t\\t\")])];\n      },\n      proxy: true\n    }])\n  }, [_vm._v(\" \"), _c(\"form\", {\n    ref: \"formElement\",\n    staticClass: \"new-node-dialog__form\",\n    on: {\n      submit: function ($event) {\n        $event.preventDefault();\n        return _setup.emit(\"close\", _setup.localDefaultName);\n      }\n    }\n  }, [_c(_setup.NcTextField, {\n    ref: \"nameInput\",\n    attrs: {\n      \"data-cy-files-new-node-dialog-input\": \"\",\n      error: _setup.validity !== \"\",\n      \"helper-text\": _setup.validity,\n      label: _vm.label,\n      value: _setup.localDefaultName\n    },\n    on: {\n      \"update:value\": function ($event) {\n        _setup.localDefaultName = $event;\n      }\n    }\n  })], 1)]);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\nexport { render, staticRenderFns };","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.files-list-filter-time__clear-button[data-v-f47dfc3e] .action-button__text {\n  color: var(--color-error-text);\n}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `\n.files-list-filter__clear-button[data-v-5c291778] .action-button__text {\n\tcolor: var(--color-error-text);\n}\n[data-v-5c291778] .button-vue {\n\tfont-weight: normal !important;\n*[data-v-5c291778] {\n\t\tfont-weight: normal !important;\n}\n}\n`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `\n.file-list-filter-type {\n\tmax-width: 220px;\n}\n`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `\n.new-node-dialog__form[data-v-e6b9c05a] {\n\t/* Ensure the dialog does not jump when there is a validity error */\n\tmin-height: calc(2 * var(--default-clickable-area));\n}\n`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileListFilterModified.vue?vue&type=style&index=0&id=f47dfc3e&scoped=true&lang=scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileListFilterModified.vue?vue&type=style&index=0&id=f47dfc3e&scoped=true&lang=scss\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileListFilter.vue?vue&type=style&index=0&id=5c291778&scoped=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileListFilter.vue?vue&type=style&index=0&id=5c291778&scoped=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileListFilterType.vue?vue&type=style&index=0&id=6c0e6dd2&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileListFilterType.vue?vue&type=style&index=0&id=6c0e6dd2&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewNodeDialog.vue?vue&type=style&index=0&id=e6b9c05a&scoped=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewNodeDialog.vue?vue&type=style&index=0&id=e6b9c05a&scoped=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { render, staticRenderFns } from \"./FileListFilter.vue?vue&type=template&id=5c291778&scoped=true\"\nimport script from \"./FileListFilter.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./FileListFilter.vue?vue&type=script&setup=true&lang=ts\"\nimport style0 from \"./FileListFilter.vue?vue&type=style&index=0&id=5c291778&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5c291778\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/var/www/nextcloud/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('5c291778')) {\n      api.createRecord('5c291778', component.options)\n    } else {\n      api.reload('5c291778', component.options)\n    }\n    module.hot.accept(\"./FileListFilter.vue?vue&type=template&id=5c291778&scoped=true\", function () {\n      api.rerender('5c291778', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"apps/files/src/components/FileListFilter/FileListFilter.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./FileListFilterModified.vue?vue&type=template&id=f47dfc3e&scoped=true\"\nimport script from \"./FileListFilterModified.vue?vue&type=script&lang=ts\"\nexport * from \"./FileListFilterModified.vue?vue&type=script&lang=ts\"\nimport style0 from \"./FileListFilterModified.vue?vue&type=style&index=0&id=f47dfc3e&scoped=true&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"f47dfc3e\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/var/www/nextcloud/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('f47dfc3e')) {\n      api.createRecord('f47dfc3e', component.options)\n    } else {\n      api.reload('f47dfc3e', component.options)\n    }\n    module.hot.accept(\"./FileListFilterModified.vue?vue&type=template&id=f47dfc3e&scoped=true\", function () {\n      api.rerender('f47dfc3e', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"apps/files/src/components/FileListFilter/FileListFilterModified.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./FileListFilterType.vue?vue&type=template&id=6c0e6dd2\"\nimport script from \"./FileListFilterType.vue?vue&type=script&lang=ts\"\nexport * from \"./FileListFilterType.vue?vue&type=script&lang=ts\"\nimport style0 from \"./FileListFilterType.vue?vue&type=style&index=0&id=6c0e6dd2&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/var/www/nextcloud/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('6c0e6dd2')) {\n      api.createRecord('6c0e6dd2', component.options)\n    } else {\n      api.reload('6c0e6dd2', component.options)\n    }\n    module.hot.accept(\"./FileListFilterType.vue?vue&type=template&id=6c0e6dd2\", function () {\n      api.rerender('6c0e6dd2', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"apps/files/src/components/FileListFilter/FileListFilterType.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./NewNodeDialog.vue?vue&type=template&id=e6b9c05a&scoped=true\"\nimport script from \"./NewNodeDialog.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./NewNodeDialog.vue?vue&type=script&setup=true&lang=ts\"\nimport style0 from \"./NewNodeDialog.vue?vue&type=style&index=0&id=e6b9c05a&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"e6b9c05a\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/var/www/nextcloud/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('e6b9c05a')) {\n      api.createRecord('e6b9c05a', component.options)\n    } else {\n      api.reload('e6b9c05a', component.options)\n    }\n    module.hot.accept(\"./NewNodeDialog.vue?vue&type=template&id=e6b9c05a&scoped=true\", function () {\n      api.rerender('e6b9c05a', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"apps/files/src/components/NewNodeDialog.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/ts-loader/index.js??clonedRuleSet-4.use[1]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileListFilter.vue?vue&type=script&setup=true&lang=ts\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/ts-loader/index.js??clonedRuleSet-4.use[1]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileListFilter.vue?vue&type=script&setup=true&lang=ts\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/ts-loader/index.js??clonedRuleSet-4.use[1]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileListFilterModified.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/ts-loader/index.js??clonedRuleSet-4.use[1]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileListFilterModified.vue?vue&type=script&lang=ts\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/ts-loader/index.js??clonedRuleSet-4.use[1]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileListFilterType.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/ts-loader/index.js??clonedRuleSet-4.use[1]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileListFilterType.vue?vue&type=script&lang=ts\"","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??clonedRuleSet-4.use[1]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewNodeDialog.vue?vue&type=script&setup=true&lang=ts\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??clonedRuleSet-4.use[1]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewNodeDialog.vue?vue&type=script&setup=true&lang=ts\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileListFilter.vue?vue&type=template&id=5c291778&scoped=true\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileListFilterModified.vue?vue&type=template&id=f47dfc3e&scoped=true\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileListFilterType.vue?vue&type=template&id=6c0e6dd2\"","export * from \"-!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewNodeDialog.vue?vue&type=template&id=e6b9c05a&scoped=true\"","export * from \"-!../../../../../node_modules/style-loader/dist/cjs.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileListFilterModified.vue?vue&type=style&index=0&id=f47dfc3e&scoped=true&lang=scss\"","export * from \"-!../../../../../node_modules/style-loader/dist/cjs.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileListFilter.vue?vue&type=style&index=0&id=5c291778&scoped=true&lang=css\"","export * from \"-!../../../../../node_modules/style-loader/dist/cjs.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileListFilterType.vue?vue&type=style&index=0&id=6c0e6dd2&lang=css\"","export * from \"-!../../../../node_modules/style-loader/dist/cjs.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewNodeDialog.vue?vue&type=style&index=0&id=e6b9c05a&scoped=true&lang=css\"","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \"-\" + chunkId + \".js?v=\" + {\"node_modules_nextcloud_dialogs_dist_chunks_index-CWnkpNim_mjs\":\"4b496e25fdc85bcc8255\",\"node_modules_nextcloud_upload_dist_chunks_ConflictPicker-D0BLWDdv_mjs\":\"42f19777e82890539665\",\"node_modules_nextcloud_upload_node_modules_nextcloud_dialogs_dist_chunks_index-C1azEbgd_mjs\":\"5a0d46ee26792126e5ec\",\"apps_files_src_views_TemplatePicker_vue-data_image_svg_xml_3c_21--_20-_20SPDX-FileCopyrightTe-15ea2e\":\"76f6200b50f6c1b86404\",\"data_image_svg_xml_3c_21--_20-_20SPDX-FileCopyrightText_202020_20Google_20Inc_20-_20SPDX-Lice-019035\":\"f005f04e196c41e04984\",\"data_image_svg_xml_3c_21--_20-_20SPDX-FileCopyrightText_202020_20Google_20Inc_20-_20SPDX-Lice-cccd4a\":\"5c9315b4c7195ec6e419\"}[chunkId] + \"\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"nextcloud:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"files-init\": 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunknextcloud\"] = self[\"webpackChunknextcloud\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"core-common\"], () => (__webpack_require__(\"./apps/files/src/init.ts\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}