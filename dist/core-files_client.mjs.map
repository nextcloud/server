{"version":3,"file":"core-files_client.mjs","sources":["../core/src/files/client.js"],"sourcesContent":["/**\n * SPDX-FileCopyrightText: 2016-2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-FileCopyrightText: 2016 ownCloud, Inc.\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\n/* eslint-disable */\nimport escapeHTML from 'escape-html'\n\n/* global dav */\n\n(function(OC, FileInfo) {\n\t/**\n\t * @class OC.Files.Client\n\t * @classdesc Client to access files on the server\n\t *\n\t * @param {Object} options\n\t * @param {String} options.host host name\n\t * @param {number} [options.port] port\n\t * @param {boolean} [options.useHTTPS] whether to use https\n\t * @param {String} [options.root] root path\n\t * @param {String} [options.userName] user name\n\t * @param {String} [options.password] password\n\t *\n\t * @since 8.2\n\t */\n\tvar Client = function(options) {\n\t\tthis._root = options.root\n\t\tif (this._root.charAt(this._root.length - 1) === '/') {\n\t\t\tthis._root = this._root.substr(0, this._root.length - 1)\n\t\t}\n\n\t\tlet url = Client.PROTOCOL_HTTP + '://'\n\t\tif (options.useHTTPS) {\n\t\t\turl = Client.PROTOCOL_HTTPS + '://'\n\t\t}\n\n\t\turl += options.host + this._root\n\t\tthis._host = options.host\n\t\tthis._defaultHeaders = options.defaultHeaders || {\n\t\t\t'X-Requested-With': 'XMLHttpRequest',\n\t\t\t'requesttoken': OC.requestToken,\n\t\t}\n\t\tthis._baseUrl = url\n\n\t\tconst clientOptions = {\n\t\t\tbaseUrl: this._baseUrl,\n\t\t\txmlNamespaces: {\n\t\t\t\t'DAV:': 'd',\n\t\t\t\t'http://owncloud.org/ns': 'oc',\n\t\t\t\t'http://nextcloud.org/ns': 'nc',\n\t\t\t\t'http://open-collaboration-services.org/ns': 'ocs',\n\t\t\t},\n\t\t}\n\t\tif (options.userName) {\n\t\t\tclientOptions.userName = options.userName\n\t\t}\n\t\tif (options.password) {\n\t\t\tclientOptions.password = options.password\n\t\t}\n\t\tthis._client = new window.dav.Client(clientOptions)\n\t\tthis._client.xhrProvider = window._.bind(this._xhrProvider, this)\n\t\tthis._fileInfoParsers = []\n\t}\n\n\tClient.NS_OWNCLOUD = 'http://owncloud.org/ns'\n\tClient.NS_NEXTCLOUD = 'http://nextcloud.org/ns'\n\tClient.NS_DAV = 'DAV:'\n\tClient.NS_OCS = 'http://open-collaboration-services.org/ns'\n\n\tClient.PROPERTY_GETLASTMODIFIED\t= '{' + Client.NS_DAV + '}getlastmodified'\n\tClient.PROPERTY_GETETAG\t= '{' + Client.NS_DAV + '}getetag'\n\tClient.PROPERTY_GETCONTENTTYPE\t= '{' + Client.NS_DAV + '}getcontenttype'\n\tClient.PROPERTY_RESOURCETYPE\t= '{' + Client.NS_DAV + '}resourcetype'\n\tClient.PROPERTY_INTERNAL_FILEID\t= '{' + Client.NS_OWNCLOUD + '}fileid'\n\tClient.PROPERTY_PERMISSIONS\t= '{' + Client.NS_OWNCLOUD + '}permissions'\n\tClient.PROPERTY_SIZE\t= '{' + Client.NS_OWNCLOUD + '}size'\n\tClient.PROPERTY_GETCONTENTLENGTH\t= '{' + Client.NS_DAV + '}getcontentlength'\n\tClient.PROPERTY_ISENCRYPTED\t= '{' + Client.NS_DAV + '}is-encrypted'\n\tClient.PROPERTY_SHARE_PERMISSIONS\t= '{' + Client.NS_OCS + '}share-permissions'\n\tClient.PROPERTY_SHARE_ATTRIBUTES\t= '{' + Client.NS_NEXTCLOUD + '}share-attributes'\n\tClient.PROPERTY_QUOTA_AVAILABLE_BYTES\t= '{' + Client.NS_DAV + '}quota-available-bytes'\n\n\tClient.PROTOCOL_HTTP\t= 'http'\n\tClient.PROTOCOL_HTTPS\t= 'https'\n\n\tClient._PROPFIND_PROPERTIES = [\n\t\t/**\n\t\t * Modified time\n\t\t */\n\t\t[Client.NS_DAV, 'getlastmodified'],\n\t\t/**\n\t\t * Etag\n\t\t */\n\t\t[Client.NS_DAV, 'getetag'],\n\t\t/**\n\t\t * Mime type\n\t\t */\n\t\t[Client.NS_DAV, 'getcontenttype'],\n\t\t/**\n\t\t * Resource type \"collection\" for folders, empty otherwise\n\t\t */\n\t\t[Client.NS_DAV, 'resourcetype'],\n\t\t/**\n\t\t * File id\n\t\t */\n\t\t[Client.NS_OWNCLOUD, 'fileid'],\n\t\t/**\n\t\t * Letter-coded permissions\n\t\t */\n\t\t[Client.NS_OWNCLOUD, 'permissions'],\n\t\t// [Client.NS_OWNCLOUD, 'downloadURL'],\n\t\t/**\n\t\t * Folder sizes\n\t\t */\n\t\t[Client.NS_OWNCLOUD, 'size'],\n\t\t/**\n\t\t * File sizes\n\t\t */\n\t\t[Client.NS_DAV, 'getcontentlength'],\n\t\t[Client.NS_DAV, 'quota-available-bytes'],\n\t\t/**\n\t\t * Preview availability\n\t\t */\n\t\t[Client.NS_NEXTCLOUD, 'has-preview'],\n\t\t/**\n\t\t * Mount type\n\t\t */\n\t\t[Client.NS_NEXTCLOUD, 'mount-type'],\n\t\t/**\n\t\t * Encryption state\n\t\t */\n\t\t[Client.NS_NEXTCLOUD, 'is-encrypted'],\n\t\t/**\n\t\t * Share permissions\n\t\t */\n\t\t[Client.NS_OCS, 'share-permissions'],\n\t\t/**\n\t\t * Share attributes\n\t\t */\n\t\t[Client.NS_NEXTCLOUD, 'share-attributes'],\n\t]\n\n\t/**\n\t * @memberof OC.Files\n\t */\n\tClient.prototype = {\n\n\t\t/**\n\t\t * Root path of the Webdav endpoint\n\t\t *\n\t\t * @type string\n\t\t */\n\t\t_root: null,\n\n\t\t/**\n\t\t * Client from the library\n\t\t *\n\t\t * @type dav.Client\n\t\t */\n\t\t_client: null,\n\n\t\t/**\n\t\t * Array of file info parsing functions.\n\t\t *\n\t\t * @type Array<OC.Files.Client~parseFileInfo>\n\t\t */\n\t\t_fileInfoParsers: [],\n\n\t\t/**\n\t\t * Returns the configured XHR provider for davclient\n\t\t * @returns {XMLHttpRequest}\n\t\t */\n\t\t_xhrProvider: function() {\n\t\t\tconst headers = this._defaultHeaders\n\t\t\tconst xhr = new XMLHttpRequest()\n\t\t\tconst oldOpen = xhr.open\n\t\t\t// override open() method to add headers\n\t\t\txhr.open = function() {\n\t\t\t\tconst result = oldOpen.apply(this, arguments)\n\t\t\t\t_.each(headers, function(value, key) {\n\t\t\t\t\txhr.setRequestHeader(key, value)\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t}\n\n\t\t\tOC.registerXHRForErrorProcessing(xhr)\n\t\t\treturn xhr\n\t\t},\n\n\t\t/**\n\t\t * Prepends the base url to the given path sections\n\t\t *\n\t\t * @param {...String} path sections\n\t\t *\n\t\t * @returns {String} base url + joined path, any leading or trailing slash\n\t\t * will be kept\n\t\t */\n\t\t_buildUrl: function() {\n\t\t\tlet path = this._buildPath.apply(this, arguments)\n\t\t\tif (path.charAt([path.length - 1]) === '/') {\n\t\t\t\tpath = path.substr(0, path.length - 1)\n\t\t\t}\n\t\t\tif (path.charAt(0) === '/') {\n\t\t\t\tpath = path.substr(1)\n\t\t\t}\n\t\t\treturn this._baseUrl + '/' + path\n\t\t},\n\n\t\t/**\n\t\t * Append the path to the root and also encode path\n\t\t * sections\n\t\t *\n\t\t * @param {...String} path sections\n\t\t *\n\t\t * @returns {String} joined path, any leading or trailing slash\n\t\t * will be kept\n\t\t */\n\t\t_buildPath: function() {\n\t\t\tlet path = OC.joinPaths.apply(this, arguments)\n\t\t\tconst sections = path.split('/')\n\t\t\tlet i\n\t\t\tfor (i = 0; i < sections.length; i++) {\n\t\t\t\tsections[i] = encodeURIComponent(sections[i])\n\t\t\t}\n\t\t\tpath = sections.join('/')\n\t\t\treturn path\n\t\t},\n\n\t\t/**\n\t\t * Parse headers string into a map\n\t\t *\n\t\t * @param {string} headersString headers list as string\n\t\t *\n\t\t * @returns {Object.<String,Array>} map of header name to header contents\n\t\t */\n\t\t_parseHeaders: function(headersString) {\n\t\t\tconst headerRows = headersString.split('\\n')\n\t\t\tconst headers = {}\n\t\t\tfor (let i = 0; i < headerRows.length; i++) {\n\t\t\t\tconst sepPos = headerRows[i].indexOf(':')\n\t\t\t\tif (sepPos < 0) {\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\n\t\t\t\tconst headerName = headerRows[i].substr(0, sepPos)\n\t\t\t\tconst headerValue = headerRows[i].substr(sepPos + 2)\n\n\t\t\t\tif (!headers[headerName]) {\n\t\t\t\t\t// make it an array\n\t\t\t\t\theaders[headerName] = []\n\t\t\t\t}\n\n\t\t\t\theaders[headerName].push(headerValue)\n\t\t\t}\n\t\t\treturn headers\n\t\t},\n\n\t\t/**\n\t\t * Parses the etag response which is in double quotes.\n\t\t *\n\t\t * @param {string} etag etag value in double quotes\n\t\t *\n\t\t * @returns {string} etag without double quotes\n\t\t */\n\t\t_parseEtag: function(etag) {\n\t\t\tif (etag.charAt(0) === '\"') {\n\t\t\t\treturn etag.split('\"')[1]\n\t\t\t}\n\t\t\treturn etag\n\t\t},\n\n\t\t/**\n\t\t * Parse Webdav result\n\t\t *\n\t\t * @param {Object} response XML object\n\t\t *\n\t\t * @returns {Array.<FileInfo>} array of file info\n\t\t */\n\t\t_parseFileInfo: function(response) {\n\t\t\tlet path = decodeURIComponent(response.href)\n\t\t\tif (path.substr(0, this._root.length) === this._root) {\n\t\t\t\tpath = path.substr(this._root.length)\n\t\t\t}\n\n\t\t\tif (path.charAt(path.length - 1) === '/') {\n\t\t\t\tpath = path.substr(0, path.length - 1)\n\t\t\t}\n\n\t\t\tif (response.propStat.length === 0 || response.propStat[0].status !== 'HTTP/1.1 200 OK') {\n\t\t\t\treturn null\n\t\t\t}\n\n\t\t\tconst props = response.propStat[0].properties\n\n\t\t\tconst data = {\n\t\t\t\tid: props[Client.PROPERTY_INTERNAL_FILEID],\n\t\t\t\tpath: OC.dirname(path) || '/',\n\t\t\t\tname: OC.basename(path),\n\t\t\t\tmtime: (new Date(props[Client.PROPERTY_GETLASTMODIFIED])).getTime(),\n\t\t\t}\n\n\t\t\tconst etagProp = props[Client.PROPERTY_GETETAG]\n\t\t\tif (!_.isUndefined(etagProp)) {\n\t\t\t\tdata.etag = this._parseEtag(etagProp)\n\t\t\t}\n\n\t\t\tlet sizeProp = props[Client.PROPERTY_GETCONTENTLENGTH]\n\t\t\tif (!_.isUndefined(sizeProp)) {\n\t\t\t\tdata.size = parseInt(sizeProp, 10)\n\t\t\t}\n\n\t\t\tsizeProp = props[Client.PROPERTY_SIZE]\n\t\t\tif (!_.isUndefined(sizeProp)) {\n\t\t\t\tdata.size = parseInt(sizeProp, 10)\n\t\t\t}\n\n\t\t\tconst hasPreviewProp = props['{' + Client.NS_NEXTCLOUD + '}has-preview']\n\t\t\tif (!_.isUndefined(hasPreviewProp)) {\n\t\t\t\tdata.hasPreview = hasPreviewProp === 'true'\n\t\t\t} else {\n\t\t\t\tdata.hasPreview = true\n\t\t\t}\n\n\t\t\tconst isEncryptedProp = props['{' + Client.NS_NEXTCLOUD + '}is-encrypted']\n\t\t\tif (!_.isUndefined(isEncryptedProp)) {\n\t\t\t\tdata.isEncrypted = isEncryptedProp === '1'\n\t\t\t} else {\n\t\t\t\tdata.isEncrypted = false\n\t\t\t}\n\n\t\t\tconst isFavouritedProp = props['{' + Client.NS_OWNCLOUD + '}favorite']\n\t\t\tif (!_.isUndefined(isFavouritedProp)) {\n\t\t\t\tdata.isFavourited = isFavouritedProp === '1'\n\t\t\t} else {\n\t\t\t\tdata.isFavourited = false\n\t\t\t}\n\n\t\t\tconst contentType = props[Client.PROPERTY_GETCONTENTTYPE]\n\t\t\tif (!_.isUndefined(contentType)) {\n\t\t\t\tdata.mimetype = contentType\n\t\t\t}\n\n\t\t\tconst resType = props[Client.PROPERTY_RESOURCETYPE]\n\t\t\tif (!data.mimetype && resType) {\n\t\t\t\tconst xmlvalue = resType[0]\n\t\t\t\tif (xmlvalue.namespaceURI === Client.NS_DAV && xmlvalue.nodeName.split(':')[1] === 'collection') {\n\t\t\t\t\tdata.mimetype = 'httpd/unix-directory'\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdata.permissions = OC.PERMISSION_NONE\n\t\t\tconst permissionProp = props[Client.PROPERTY_PERMISSIONS]\n\t\t\tif (!_.isUndefined(permissionProp)) {\n\t\t\t\tconst permString = permissionProp || ''\n\t\t\t\tdata.mountType = null\n\t\t\t\tfor (let i = 0; i < permString.length; i++) {\n\t\t\t\t\tconst c = permString.charAt(i)\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\t// FIXME: twisted permissions\n\t\t\t\t\tcase 'C':\n\t\t\t\t\tcase 'K':\n\t\t\t\t\t\tdata.permissions |= OC.PERMISSION_CREATE\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'G':\n\t\t\t\t\t\tdata.permissions |= OC.PERMISSION_READ\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'W':\n\t\t\t\t\tcase 'N':\n\t\t\t\t\tcase 'V':\n\t\t\t\t\t\tdata.permissions |= OC.PERMISSION_UPDATE\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'D':\n\t\t\t\t\t\tdata.permissions |= OC.PERMISSION_DELETE\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'R':\n\t\t\t\t\t\tdata.permissions |= OC.PERMISSION_SHARE\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'M':\n\t\t\t\t\t\tif (!data.mountType) {\n\t\t\t\t\t\t\t// TODO: how to identify external-root ?\n\t\t\t\t\t\t\tdata.mountType = 'external'\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'S':\n\t\t\t\t\t\t// TODO: how to identify shared-root ?\n\t\t\t\t\t\tdata.mountType = 'shared'\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst sharePermissionsProp = props[Client.PROPERTY_SHARE_PERMISSIONS]\n\t\t\tif (!_.isUndefined(sharePermissionsProp)) {\n\t\t\t\tdata.sharePermissions = parseInt(sharePermissionsProp)\n\t\t\t}\n\n\t\t\tconst shareAttributesProp = props[Client.PROPERTY_SHARE_ATTRIBUTES]\n\t\t\tif (!_.isUndefined(shareAttributesProp)) {\n\t\t\t\ttry {\n\t\t\t\t\tdata.shareAttributes = JSON.parse(shareAttributesProp)\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.warn('Could not parse share attributes returned by server: \"' + shareAttributesProp + '\"')\n\t\t\t\t\tdata.shareAttributes = [];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdata.shareAttributes = [];\n\t\t\t}\n\n\t\t\tconst mounTypeProp = props['{' + Client.NS_NEXTCLOUD + '}mount-type']\n\t\t\tif (!_.isUndefined(mounTypeProp)) {\n\t\t\t\tdata.mountType = mounTypeProp\n\t\t\t}\n\n\t\t\tconst quotaAvailableBytes = props['{' + Client.NS_DAV + '}quota-available-bytes']\n\t\t\tif (!_.isUndefined(quotaAvailableBytes)) {\n\t\t\t\tdata.quotaAvailableBytes = quotaAvailableBytes\n\t\t\t}\n\n\t\t\t// extend the parsed data using the custom parsers\n\t\t\t_.each(this._fileInfoParsers, function(parserFunction) {\n\t\t\t\t_.extend(data, parserFunction(response, data) || {})\n\t\t\t})\n\n\t\t\treturn new FileInfo(data)\n\t\t},\n\n\t\t/**\n\t\t * Parse Webdav multistatus\n\t\t *\n\t\t * @param {Array} responses\n\t\t */\n\t\t_parseResult: function(responses) {\n\t\t\tconst self = this\n\t\t\treturn _.map(responses, function(response) {\n\t\t\t\treturn self._parseFileInfo(response)\n\t\t\t})\n\t\t},\n\n\t\t/**\n\t\t * Returns whether the given status code means success\n\t\t *\n\t\t * @param {number} status status code\n\t\t *\n\t\t * @returns true if status code is between 200 and 299 included\n\t\t */\n\t\t_isSuccessStatus: function(status) {\n\t\t\treturn status >= 200 && status <= 299\n\t\t},\n\n\t\t/**\n\t\t * Parse the Sabre exception out of the given response, if any\n\t\t *\n\t\t * @param {Object} response object\n\t\t * @returns {Object} array of parsed message and exception (only the first one)\n\t\t */\n\t\t_getSabreException: function(response) {\n\t\t\tconst result = {}\n\t\t\tconst xml = response.xhr.responseXML\n\t\t\tif (xml === null) {\n\t\t\t\treturn result\n\t\t\t}\n\t\t\tconst messages = xml.getElementsByTagNameNS('http://sabredav.org/ns', 'message')\n\t\t\tconst exceptions = xml.getElementsByTagNameNS('http://sabredav.org/ns', 'exception')\n\t\t\tif (messages.length) {\n\t\t\t\tresult.message = messages[0].textContent\n\t\t\t}\n\t\t\tif (exceptions.length) {\n\t\t\t\tresult.exception = exceptions[0].textContent\n\t\t\t}\n\t\t\treturn result\n\t\t},\n\n\t\t/**\n\t\t * Returns the default PROPFIND properties to use during a call.\n\t\t *\n\t\t * @returns {Array.<Object>} array of properties\n\t\t */\n\t\tgetPropfindProperties: function() {\n\t\t\tif (!this._propfindProperties) {\n\t\t\t\tthis._propfindProperties = _.map(Client._PROPFIND_PROPERTIES, function(propDef) {\n\t\t\t\t\treturn '{' + propDef[0] + '}' + propDef[1]\n\t\t\t\t})\n\t\t\t}\n\t\t\treturn this._propfindProperties\n\t\t},\n\n\t\t/**\n\t\t * Lists the contents of a directory\n\t\t *\n\t\t * @param {String} path path to retrieve\n\t\t * @param {Object} [options] options\n\t\t * @param {boolean} [options.includeParent=false] set to true to keep\n\t\t * the parent folder in the result list\n\t\t * @param {Array} [options.properties] list of Webdav properties to retrieve\n\t\t *\n\t\t * @returns {Promise} promise\n\t\t */\n\t\tgetFolderContents: function(path, options) {\n\t\t\tif (!path) {\n\t\t\t\tpath = ''\n\t\t\t}\n\t\t\toptions = options || {}\n\t\t\tconst self = this\n\t\t\tconst deferred = $.Deferred()\n\t\t\tconst promise = deferred.promise()\n\t\t\tlet properties\n\t\t\tif (_.isUndefined(options.properties)) {\n\t\t\t\tproperties = this.getPropfindProperties()\n\t\t\t} else {\n\t\t\t\tproperties = options.properties\n\t\t\t}\n\n\t\t\tthis._client.propFind(\n\t\t\t\tthis._buildUrl(path),\n\t\t\t\tproperties,\n\t\t\t\t1\n\t\t\t).then(function(result) {\n\t\t\t\tif (self._isSuccessStatus(result.status)) {\n\t\t\t\t\tconst results = self._parseResult(result.body)\n\t\t\t\t\tif (!options || !options.includeParent) {\n\t\t\t\t\t\t// remove root dir, the first entry\n\t\t\t\t\t\tresults.shift()\n\t\t\t\t\t}\n\t\t\t\t\tdeferred.resolve(result.status, results)\n\t\t\t\t} else {\n\t\t\t\t\tresult = _.extend(result, self._getSabreException(result))\n\t\t\t\t\tdeferred.reject(result.status, result)\n\t\t\t\t}\n\t\t\t})\n\t\t\treturn promise\n\t\t},\n\n\t\t/**\n\t\t * Fetches a flat list of files filtered by a given filter criteria.\n\t\t * (currently system tags and circles are supported)\n\t\t *\n\t\t * @param {Object} filter filter criteria\n\t\t * @param {Object} [filter.systemTagIds] list of system tag ids to filter by\n\t\t * @param {boolean} [filter.favorite] set it to filter by favorites\n\t\t * @param {Object} [options] options\n\t\t * @param {Array} [options.properties] list of Webdav properties to retrieve\n\t\t *\n\t\t * @returns {Promise} promise\n\t\t */\n\t\tgetFilteredFiles: function(filter, options) {\n\t\t\toptions = options || {}\n\t\t\tconst self = this\n\t\t\tconst deferred = $.Deferred()\n\t\t\tconst promise = deferred.promise()\n\t\t\tlet properties\n\t\t\tif (_.isUndefined(options.properties)) {\n\t\t\t\tproperties = this.getPropfindProperties()\n\t\t\t} else {\n\t\t\t\tproperties = options.properties\n\t\t\t}\n\n\t\t\tif (!filter\n\t\t\t\t|| (!filter.systemTagIds && _.isUndefined(filter.favorite) && !filter.circlesIds)) {\n\t\t\t\tthrow 'Missing filter argument'\n\t\t\t}\n\n\t\t\t// root element with namespaces\n\t\t\tlet body = '<oc:filter-files '\n\t\t\tlet namespace\n\t\t\tfor (namespace in this._client.xmlNamespaces) {\n\t\t\t\tbody += ' xmlns:' + this._client.xmlNamespaces[namespace] + '=\"' + namespace + '\"'\n\t\t\t}\n\t\t\tbody += '>\\n'\n\n\t\t\t// properties query\n\t\t\tbody += '    <' + this._client.xmlNamespaces['DAV:'] + ':prop>\\n'\n\t\t\t_.each(properties, function(prop) {\n\t\t\t\tconst property = self._client.parseClarkNotation(prop)\n\t\t\t\tbody += '        <' + self._client.xmlNamespaces[property.namespace] + ':' + property.name + ' />\\n'\n\t\t\t})\n\n\t\t\tbody += '    </' + this._client.xmlNamespaces['DAV:'] + ':prop>\\n'\n\n\t\t\t// rules block\n\t\t\tbody +=\t'    <oc:filter-rules>\\n'\n\t\t\t_.each(filter.systemTagIds, function(systemTagIds) {\n\t\t\t\tbody += '        <oc:systemtag>' + escapeHTML(systemTagIds) + '</oc:systemtag>\\n'\n\t\t\t})\n\t\t\t_.each(filter.circlesIds, function(circlesIds) {\n\t\t\t\tbody += '        <oc:circle>' + escapeHTML(circlesIds) + '</oc:circle>\\n'\n\t\t\t})\n\t\t\tif (filter.favorite) {\n\t\t\t\tbody += '        <oc:favorite>' + (filter.favorite ? '1' : '0') + '</oc:favorite>\\n'\n\t\t\t}\n\t\t\tbody += '    </oc:filter-rules>\\n'\n\n\t\t\t// end of root\n\t\t\tbody += '</oc:filter-files>\\n'\n\n\t\t\tthis._client.request(\n\t\t\t\t'REPORT',\n\t\t\t\tthis._buildUrl(),\n\t\t\t\t{},\n\t\t\t\tbody\n\t\t\t).then(function(result) {\n\t\t\t\tif (self._isSuccessStatus(result.status)) {\n\t\t\t\t\tconst results = self._parseResult(result.body)\n\t\t\t\t\tdeferred.resolve(result.status, results)\n\t\t\t\t} else {\n\t\t\t\t\tresult = _.extend(result, self._getSabreException(result))\n\t\t\t\t\tdeferred.reject(result.status, result)\n\t\t\t\t}\n\t\t\t})\n\t\t\treturn promise\n\t\t},\n\n\t\t/**\n\t\t * Returns the file info of a given path.\n\t\t *\n\t\t * @param {String} path path\n\t\t * @param {Array} [options.properties] list of Webdav properties to retrieve\n\t\t *\n\t\t * @returns {Promise} promise\n\t\t */\n\t\tgetFileInfo: function(path, options) {\n\t\t\tif (!path) {\n\t\t\t\tpath = ''\n\t\t\t}\n\t\t\toptions = options || {}\n\t\t\tconst self = this\n\t\t\tconst deferred = $.Deferred()\n\t\t\tconst promise = deferred.promise()\n\t\t\tlet properties\n\t\t\tif (_.isUndefined(options.properties)) {\n\t\t\t\tproperties = this.getPropfindProperties()\n\t\t\t} else {\n\t\t\t\tproperties = options.properties\n\t\t\t}\n\n\t\t\t// TODO: headers\n\t\t\tthis._client.propFind(\n\t\t\t\tthis._buildUrl(path),\n\t\t\t\tproperties,\n\t\t\t\t0\n\t\t\t).then(\n\t\t\t\tfunction(result) {\n\t\t\t\t\tif (self._isSuccessStatus(result.status)) {\n\t\t\t\t\t\tdeferred.resolve(result.status, self._parseResult([result.body])[0])\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = _.extend(result, self._getSabreException(result))\n\t\t\t\t\t\tdeferred.reject(result.status, result)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\treturn promise\n\t\t},\n\n\t\t/**\n\t\t * Returns the contents of the given file.\n\t\t *\n\t\t * @param {String} path path to file\n\t\t *\n\t\t * @returns {Promise}\n\t\t */\n\t\tgetFileContents: function(path) {\n\t\t\tif (!path) {\n\t\t\t\tthrow 'Missing argument \"path\"'\n\t\t\t}\n\t\t\tconst self = this\n\t\t\tconst deferred = $.Deferred()\n\t\t\tconst promise = deferred.promise()\n\n\t\t\tthis._client.request(\n\t\t\t\t'GET',\n\t\t\t\tthis._buildUrl(path)\n\t\t\t).then(\n\t\t\t\tfunction(result) {\n\t\t\t\t\tif (self._isSuccessStatus(result.status)) {\n\t\t\t\t\t\tdeferred.resolve(result.status, result.body)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = _.extend(result, self._getSabreException(result))\n\t\t\t\t\t\tdeferred.reject(result.status, result)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\treturn promise\n\t\t},\n\n\t\t/**\n\t\t * Puts the given data into the given file.\n\t\t *\n\t\t * @param {String} path path to file\n\t\t * @param {String} body file body\n\t\t * @param {Object} [options]\n\t\t * @param {String} [options.contentType='text/plain'] content type\n\t\t * @param {boolean} [options.overwrite=true] whether to overwrite an existing file\n\t\t *\n\t\t * @returns {Promise}\n\t\t */\n\t\tputFileContents: function(path, body, options) {\n\t\t\tif (!path) {\n\t\t\t\tthrow 'Missing argument \"path\"'\n\t\t\t}\n\t\t\tconst self = this\n\t\t\tconst deferred = $.Deferred()\n\t\t\tconst promise = deferred.promise()\n\t\t\toptions = options || {}\n\t\t\tconst headers = {}\n\t\t\tlet contentType = 'text/plain;charset=utf-8'\n\t\t\tif (options.contentType) {\n\t\t\t\tcontentType = options.contentType\n\t\t\t}\n\n\t\t\theaders['Content-Type'] = contentType\n\n\t\t\tif (_.isUndefined(options.overwrite) || options.overwrite) {\n\t\t\t\t// will trigger 412 precondition failed if a file already exists\n\t\t\t\theaders['If-None-Match'] = '*'\n\t\t\t}\n\n\t\t\tthis._client.request(\n\t\t\t\t'PUT',\n\t\t\t\tthis._buildUrl(path),\n\t\t\t\theaders,\n\t\t\t\tbody || ''\n\t\t\t).then(\n\t\t\t\tfunction(result) {\n\t\t\t\t\tif (self._isSuccessStatus(result.status)) {\n\t\t\t\t\t\tdeferred.resolve(result.status)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = _.extend(result, self._getSabreException(result))\n\t\t\t\t\t\tdeferred.reject(result.status, result)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\treturn promise\n\t\t},\n\n\t\t_simpleCall: function(method, path, headers) {\n\t\t\tif (!path) {\n\t\t\t\tthrow 'Missing argument \"path\"'\n\t\t\t}\n\n\t\t\tconst self = this\n\t\t\tconst deferred = $.Deferred()\n\t\t\tconst promise = deferred.promise()\n\n\t\t\tthis._client.request(\n\t\t\t\tmethod,\n\t\t\t\tthis._buildUrl(path),\n\t\t\t\theaders ? headers : {}\n\t\t\t).then(\n\t\t\t\tfunction(result) {\n\t\t\t\t\tif (self._isSuccessStatus(result.status)) {\n\t\t\t\t\t\tdeferred.resolve(result.status)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = _.extend(result, self._getSabreException(result))\n\t\t\t\t\t\tdeferred.reject(result.status, result)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\treturn promise\n\t\t},\n\n\t\t/**\n\t\t * Creates a directory\n\t\t *\n\t\t * @param {String} path path to create\n\t\t *\n\t\t * @returns {Promise}\n\t\t */\n\t\tcreateDirectory: function(path, headers) {\n\t\t\treturn this._simpleCall('MKCOL', path, headers)\n\t\t},\n\n\t\t/**\n\t\t * Deletes a file or directory\n\t\t *\n\t\t * @param {String} path path to delete\n\t\t *\n\t\t * @returns {Promise}\n\t\t */\n\t\tremove: function(path) {\n\t\t\treturn this._simpleCall('DELETE', path)\n\t\t},\n\n\t\t/**\n\t\t * Moves path to another path\n\t\t *\n\t\t * @param {String} path path to move\n\t\t * @param {String} destinationPath destination path\n\t\t * @param {boolean} [allowOverwrite=false] true to allow overwriting,\n\t\t * false otherwise\n\t\t * @param {Object} [headers=null] additional headers\n\t\t *\n\t\t * @returns {Promise} promise\n\t\t */\n\t\tmove: function(path, destinationPath, allowOverwrite, headers) {\n\t\t\tif (!path) {\n\t\t\t\tthrow 'Missing argument \"path\"'\n\t\t\t}\n\t\t\tif (!destinationPath) {\n\t\t\t\tthrow 'Missing argument \"destinationPath\"'\n\t\t\t}\n\n\t\t\tconst self = this\n\t\t\tconst deferred = $.Deferred()\n\t\t\tconst promise = deferred.promise()\n\t\t\theaders = _.extend({}, headers, {\n\t\t\t\t'Destination': this._buildUrl(destinationPath),\n\t\t\t})\n\n\t\t\tif (!allowOverwrite) {\n\t\t\t\theaders.Overwrite = 'F'\n\t\t\t}\n\n\t\t\tthis._client.request(\n\t\t\t\t'MOVE',\n\t\t\t\tthis._buildUrl(path),\n\t\t\t\theaders\n\t\t\t).then(\n\t\t\t\tfunction(result) {\n\t\t\t\t\tif (self._isSuccessStatus(result.status)) {\n\t\t\t\t\t\tdeferred.resolve(result.status)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = _.extend(result, self._getSabreException(result))\n\t\t\t\t\t\tdeferred.reject(result.status, result)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\treturn promise\n\t\t},\n\n\t\t/**\n\t\t * Copies path to another path\n\t\t *\n\t\t * @param {String} path path to copy\n\t\t * @param {String} destinationPath destination path\n\t\t * @param {boolean} [allowOverwrite=false] true to allow overwriting,\n\t\t * false otherwise\n\t\t *\n\t\t * @returns {Promise} promise\n\t\t */\n\t\tcopy: function(path, destinationPath, allowOverwrite) {\n\t\t\tif (!path) {\n\t\t\t\tthrow 'Missing argument \"path\"'\n\t\t\t}\n\t\t\tif (!destinationPath) {\n\t\t\t\tthrow 'Missing argument \"destinationPath\"'\n\t\t\t}\n\n\t\t\tconst self = this\n\t\t\tconst deferred = $.Deferred()\n\t\t\tconst promise = deferred.promise()\n\t\t\tconst headers = {\n\t\t\t\t'Destination': this._buildUrl(destinationPath),\n\t\t\t}\n\n\t\t\tif (!allowOverwrite) {\n\t\t\t\theaders.Overwrite = 'F'\n\t\t\t}\n\n\t\t\tthis._client.request(\n\t\t\t\t'COPY',\n\t\t\t\tthis._buildUrl(path),\n\t\t\t\theaders\n\t\t\t).then(\n\t\t\t\tfunction(response) {\n\t\t\t\t\tif (self._isSuccessStatus(response.status)) {\n\t\t\t\t\t\tdeferred.resolve(response.status)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdeferred.reject(response.status)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\treturn promise\n\t\t},\n\n\t\t/**\n\t\t * Add a file info parser function\n\t\t *\n\t\t * @param {OC.Files.Client~parseFileInfo} parserFunction\n\t\t */\n\t\taddFileInfoParser: function(parserFunction) {\n\t\t\tthis._fileInfoParsers.push(parserFunction)\n\t\t},\n\n\t\t/**\n\t\t * Returns the dav.Client instance used internally\n\t\t *\n\t\t * @since 11.0.0\n\t\t * @returns {dav.Client}\n\t\t */\n\t\tgetClient: function() {\n\t\t\treturn this._client\n\t\t},\n\n\t\t/**\n\t\t * Returns the user name\n\t\t *\n\t\t * @since 11.0.0\n\t\t * @returns {String} userName\n\t\t */\n\t\tgetUserName: function() {\n\t\t\treturn this._client.userName\n\t\t},\n\n\t\t/**\n\t\t * Returns the password\n\t\t *\n\t\t * @since 11.0.0\n\t\t * @returns {String} password\n\t\t */\n\t\tgetPassword: function() {\n\t\t\treturn this._client.password\n\t\t},\n\n\t\t/**\n\t\t * Returns the base URL\n\t\t *\n\t\t * @since 11.0.0\n\t\t * @returns {String} base URL\n\t\t */\n\t\tgetBaseUrl: function() {\n\t\t\treturn this._client.baseUrl\n\t\t},\n\n\t\t/**\n\t\t * Returns the host\n\t\t *\n\t\t * @since 13.0.0\n\t\t * @returns {String} base URL\n\t\t */\n\t\tgetHost: function() {\n\t\t\treturn this._host\n\t\t},\n\t}\n\n\t/**\n\t * File info parser function\n\t *\n\t * This function receives a list of Webdav properties as input and\n\t * should return a hash array of parsed properties, if applicable.\n\t *\n\t * @callback OC.Files.Client~parseFileInfo\n\t * @param {Object} XML Webdav properties\n     * @return {Array} array of parsed property values\n\t */\n\n\tif (!OC.Files) {\n\t\t/**\n\t\t * @namespace OC.Files\n\t\t *\n\t\t * @since 8.2\n\t\t */\n\t\tOC.Files = {}\n\t}\n\n\t/**\n\t * Returns the default instance of the files client\n\t *\n\t * @returns {OC.Files.Client} default client\n\t *\n\t * @since 8.2\n\t */\n\tOC.Files.getClient = function() {\n\t\tif (OC.Files._defaultClient) {\n\t\t\treturn OC.Files._defaultClient\n\t\t}\n\n\t\tconst client = new OC.Files.Client({\n\t\t\thost: OC.getHost(),\n\t\t\tport: OC.getPort(),\n\t\t\troot: OC.linkToRemoteBase('dav') + '/files/' + OC.getCurrentUser().uid,\n\t\t\tuseHTTPS: OC.getProtocol() === 'https',\n\t\t})\n\t\tOC.Files._defaultClient = client\n\t\treturn client\n\t}\n\n\tOC.Files.Client = Client\n})(OC, OC.Files.FileInfo)\n"],"names":["OC","FileInfo","Client","options","url","clientOptions","headers","xhr","oldOpen","result","value","key","path","sections","i","headersString","headerRows","sepPos","headerName","headerValue","etag","response","props","data","etagProp","sizeProp","hasPreviewProp","isEncryptedProp","isFavouritedProp","contentType","resType","xmlvalue","permissionProp","permString","sharePermissionsProp","shareAttributesProp","mounTypeProp","quotaAvailableBytes","parserFunction","responses","self","status","xml","messages","exceptions","propDef","deferred","promise","properties","results","filter","body","namespace","prop","property","systemTagIds","escapeHTML","circlesIds","method","destinationPath","allowOverwrite","client"],"mappings":"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"}