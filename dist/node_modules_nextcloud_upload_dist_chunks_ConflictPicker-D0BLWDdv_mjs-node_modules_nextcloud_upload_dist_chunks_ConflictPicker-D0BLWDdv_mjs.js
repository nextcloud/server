"use strict";
(self["webpackChunknextcloud"] = self["webpackChunknextcloud"] || []).push([["node_modules_nextcloud_upload_dist_chunks_ConflictPicker-D0BLWDdv_mjs"],{

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/@nextcloud/upload/dist/assets/ConflictPicker-EWePgg5w.css":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/@nextcloud/upload/dist/assets/ConflictPicker-EWePgg5w.css ***!
  \**********************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../css-loader/dist/runtime/noSourceMaps.js */ "./node_modules/css-loader/dist/runtime/noSourceMaps.js");
/* harmony import */ var _css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.node-picker__wrapper[data-v-0becb48e]:not(:last-of-type) {
  border-bottom: 1px solid var(--color-border);
}
.node-picker[data-v-0becb48e] {
  display: flex;
  align-items: center;
  height: 64px;
}
.node-picker__icon[data-v-0becb48e], .node-picker__preview[data-v-0becb48e] {
  height: 64px;
  width: 64px;
  margin: 0 var(--secondary-margin);
  display: block;
  flex: 0 0 64px;
}
.node-picker__icon[data-v-0becb48e] {
  color: var(--color-text-maxcontrast);
}
.node-picker__icon.folder-icon[data-v-0becb48e] {
  color: var(--color-primary-element);
}
.node-picker__preview[data-v-0becb48e] {
  overflow: hidden;
  border-radius: calc(var(--border-radius) * 2);
  background-position: center;
  background-size: cover;
}
.node-picker__desc[data-v-0becb48e] {
  display: flex;
  flex-direction: column;
}
.node-picker__desc span[data-v-0becb48e] {
  white-space: nowrap;
}[data-v-f0c1b8b3] .modal-container__content {
  display: flex;
  overflow: visible;
  flex-direction: column;
}
.conflict-picker[data-v-f0c1b8b3] {
  --margin: 36px;
  --secondary-margin: 18px;
}
.conflict-picker__header[data-v-f0c1b8b3] {
  position: sticky;
  z-index: 10;
  top: 0;
  padding: 0 var(--margin);
  padding-bottom: var(--secondary-margin);
}
.conflict-picker__form[data-v-f0c1b8b3] {
  position: relative;
  overflow: auto;
  padding: 0 var(--margin);
  margin-top: calc(-1 * var(--secondary-margin));
}
.conflict-picker fieldset[data-v-f0c1b8b3] {
  display: grid;
  width: 100%;
  margin-top: calc(var(--secondary-margin) * 1.5);
  padding-bottom: var(--secondary-margin);
  grid-template-columns: 1fr 1fr;
}
.conflict-picker fieldset[data-v-f0c1b8b3] legend {
  display: flex;
  align-items: center;
  width: 100%;
  margin-bottom: calc(var(--secondary-margin) / 2);
}
.conflict-picker fieldset.conflict-picker__all[data-v-f0c1b8b3] {
  position: sticky;
  top: 0;
  margin: 0;
  padding: var(--secondary-margin) 0;
  background-image: linear-gradient(to top, transparent, var(--color-main-background-blur) 10%, var(--color-main-background) 15%);
}
.conflict-picker fieldset.conflict-picker__all + fieldset[data-v-f0c1b8b3] {
  margin-top: 0;
}
.conflict-picker fieldset.conflict-picker__all[data-v-f0c1b8b3] label {
  font-weight: bold;
}
.conflict-picker .button-vue--disabled[data-v-f0c1b8b3] {
  cursor: default;
  opacity: 0.5;
  filter: saturate(0.7);
}
.conflict-picker[data-v-f0c1b8b3] .dialog__actions {
  width: auto;
  margin-inline: 12px;
}
.conflict-picker[data-v-f0c1b8b3] .dialog__actions span.dialog__actions-separator {
  margin-left: auto;
}
@media screen and (max-width: 768px) {
.conflict-picker[data-v-f0c1b8b3] {
    --margin: var(--secondary-margin) !important;
}
.conflict-picker__description[data-v-f0c1b8b3] {
    display: none !important;
}
.conflict-picker fieldset[data-v-f0c1b8b3] {
    grid-template-columns: 1fr !important;
}
.conflict-picker fieldset.conflict-picker__all[data-v-f0c1b8b3] {
    position: static;
}
}
@media screen and (max-width: 512px) {
.conflict-picker[data-v-f0c1b8b3] .dialog__actions {
    flex-wrap: wrap;
}
.conflict-picker[data-v-f0c1b8b3] .dialog__actions span.dialog__actions-separator {
    width: 100%;
}
}`, ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/@nextcloud/upload/dist/assets/ConflictPicker-EWePgg5w.css":
/*!********************************************************************************!*\
  !*** ./node_modules/@nextcloud/upload/dist/assets/ConflictPicker-EWePgg5w.css ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../../style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../../style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../../style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../../style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _css_loader_dist_cjs_js_ConflictPicker_EWePgg5w_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../../css-loader/dist/cjs.js!./ConflictPicker-EWePgg5w.css */ "./node_modules/css-loader/dist/cjs.js!./node_modules/@nextcloud/upload/dist/assets/ConflictPicker-EWePgg5w.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_ConflictPicker_EWePgg5w_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_ConflictPicker_EWePgg5w_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _css_loader_dist_cjs_js_ConflictPicker_EWePgg5w_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _css_loader_dist_cjs_js_ConflictPicker_EWePgg5w_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "./node_modules/@nextcloud/upload/dist/chunks/ConflictPicker-D0BLWDdv.mjs":
/*!********************************************************************************!*\
  !*** ./node_modules/@nextcloud/upload/dist/chunks/ConflictPicker-D0BLWDdv.mjs ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ConflictPicker)
/* harmony export */ });
/* harmony import */ var _assets_ConflictPicker_EWePgg5w_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../assets/ConflictPicker-EWePgg5w.css */ "./node_modules/@nextcloud/upload/dist/assets/ConflictPicker-EWePgg5w.css");
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.runtime.esm.js");
/* harmony import */ var _nextcloud_dialogs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @nextcloud/dialogs */ "./node_modules/@nextcloud/upload/node_modules/@nextcloud/dialogs/dist/index.mjs");
/* harmony import */ var _nextcloud_files__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @nextcloud/files */ "./node_modules/@nextcloud/files/dist/index.mjs");
/* harmony import */ var _index_BFpeXJm8_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./index-BFpeXJm8.mjs */ "./node_modules/@nextcloud/upload/dist/chunks/index-BFpeXJm8.mjs");
/* harmony import */ var _nextcloud_vue_dist_Components_NcCheckboxRadioSwitch_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @nextcloud/vue/dist/Components/NcCheckboxRadioSwitch.js */ "./node_modules/@nextcloud/vue/dist/Components/NcCheckboxRadioSwitch.mjs");
/* harmony import */ var _nextcloud_vue_dist_Components_NcDialog_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @nextcloud/vue/dist/Components/NcDialog.js */ "./node_modules/@nextcloud/vue/dist/Components/NcDialog.mjs");
/* harmony import */ var _nextcloud_vue_dist_Components_NcButton_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @nextcloud/vue/dist/Components/NcButton.js */ "./node_modules/@nextcloud/vue/dist/Components/NcButton.mjs");
/* harmony import */ var _nextcloud_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @nextcloud/router */ "./node_modules/@nextcloud/router/dist/index.mjs");
/* harmony import */ var _nextcloud_vue_dist_Components_NcDateTime_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @nextcloud/vue/dist/Components/NcDateTime.js */ "./node_modules/@nextcloud/vue/dist/Components/NcDateTime.mjs");










const _sfc_main$5 = {
  name: "ArrowRightIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var _sfc_render$5 = function render() {
  var _vm = this, _c = _vm._self._c;
  return _c("span", _vm._b({ staticClass: "material-design-icon arrow-right-icon", attrs: { "aria-hidden": _vm.title ? null : true, "aria-label": _vm.title, "role": "img" }, on: { "click": function($event) {
    return _vm.$emit("click", $event);
  } } }, "span", _vm.$attrs, false), [_c("svg", { staticClass: "material-design-icon__svg", attrs: { "fill": _vm.fillColor, "width": _vm.size, "height": _vm.size, "viewBox": "0 0 24 24" } }, [_c("path", { attrs: { "d": "M4,11V13H16L10.5,18.5L11.92,19.92L19.84,12L11.92,4.08L10.5,5.5L16,11H4Z" } }, [_vm.title ? _c("title", [_vm._v(_vm._s(_vm.title))]) : _vm._e()])])]);
};
var _sfc_staticRenderFns$5 = [];
var __component__$5 = /* @__PURE__ */ (0,_index_BFpeXJm8_mjs__WEBPACK_IMPORTED_MODULE_3__.n)(
  _sfc_main$5,
  _sfc_render$5,
  _sfc_staticRenderFns$5,
  false,
  null,
  null
);
const ArrowRight = __component__$5.exports;
const _sfc_main$4 = {
  name: "CloseIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var _sfc_render$4 = function render2() {
  var _vm = this, _c = _vm._self._c;
  return _c("span", _vm._b({ staticClass: "material-design-icon close-icon", attrs: { "aria-hidden": _vm.title ? null : true, "aria-label": _vm.title, "role": "img" }, on: { "click": function($event) {
    return _vm.$emit("click", $event);
  } } }, "span", _vm.$attrs, false), [_c("svg", { staticClass: "material-design-icon__svg", attrs: { "fill": _vm.fillColor, "width": _vm.size, "height": _vm.size, "viewBox": "0 0 24 24" } }, [_c("path", { attrs: { "d": "M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" } }, [_vm.title ? _c("title", [_vm._v(_vm._s(_vm.title))]) : _vm._e()])])]);
};
var _sfc_staticRenderFns$4 = [];
var __component__$4 = /* @__PURE__ */ (0,_index_BFpeXJm8_mjs__WEBPACK_IMPORTED_MODULE_3__.n)(
  _sfc_main$4,
  _sfc_render$4,
  _sfc_staticRenderFns$4,
  false,
  null,
  null
);
const Close = __component__$4.exports;
const _sfc_main$3 = {
  name: "FileIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var _sfc_render$3 = function render3() {
  var _vm = this, _c = _vm._self._c;
  return _c("span", _vm._b({ staticClass: "material-design-icon file-icon", attrs: { "aria-hidden": _vm.title ? null : true, "aria-label": _vm.title, "role": "img" }, on: { "click": function($event) {
    return _vm.$emit("click", $event);
  } } }, "span", _vm.$attrs, false), [_c("svg", { staticClass: "material-design-icon__svg", attrs: { "fill": _vm.fillColor, "width": _vm.size, "height": _vm.size, "viewBox": "0 0 24 24" } }, [_c("path", { attrs: { "d": "M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" } }, [_vm.title ? _c("title", [_vm._v(_vm._s(_vm.title))]) : _vm._e()])])]);
};
var _sfc_staticRenderFns$3 = [];
var __component__$3 = /* @__PURE__ */ (0,_index_BFpeXJm8_mjs__WEBPACK_IMPORTED_MODULE_3__.n)(
  _sfc_main$3,
  _sfc_render$3,
  _sfc_staticRenderFns$3,
  false,
  null,
  null
);
const FileSvg = __component__$3.exports;
const _sfc_main$2 = {
  name: "FolderIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var _sfc_render$2 = function render4() {
  var _vm = this, _c = _vm._self._c;
  return _c("span", _vm._b({ staticClass: "material-design-icon folder-icon", attrs: { "aria-hidden": _vm.title ? null : true, "aria-label": _vm.title, "role": "img" }, on: { "click": function($event) {
    return _vm.$emit("click", $event);
  } } }, "span", _vm.$attrs, false), [_c("svg", { staticClass: "material-design-icon__svg", attrs: { "fill": _vm.fillColor, "width": _vm.size, "height": _vm.size, "viewBox": "0 0 24 24" } }, [_c("path", { attrs: { "d": "M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z" } }, [_vm.title ? _c("title", [_vm._v(_vm._s(_vm.title))]) : _vm._e()])])]);
};
var _sfc_staticRenderFns$2 = [];
var __component__$2 = /* @__PURE__ */ (0,_index_BFpeXJm8_mjs__WEBPACK_IMPORTED_MODULE_3__.n)(
  _sfc_main$2,
  _sfc_render$2,
  _sfc_staticRenderFns$2,
  false,
  null,
  null
);
const FolderSvg = __component__$2.exports;
const PREVIEW_SIZE = 64;
const _sfc_main$1 = (0,vue__WEBPACK_IMPORTED_MODULE_9__.defineComponent)({
  name: "NodesPicker",
  components: {
    FileSvg,
    FolderSvg,
    NcCheckboxRadioSwitch: _nextcloud_vue_dist_Components_NcCheckboxRadioSwitch_js__WEBPACK_IMPORTED_MODULE_4__["default"],
    NcDateTime: _nextcloud_vue_dist_Components_NcDateTime_js__WEBPACK_IMPORTED_MODULE_8__["default"]
  },
  props: {
    incoming: {
      type: [File, Object],
      required: true
    },
    existing: {
      type: Object,
      required: true
    },
    newSelected: {
      type: Array,
      required: true
    },
    oldSelected: {
      type: Array,
      required: true
    }
  },
  data() {
    return {
      asyncPreview: null,
      incomingFile: null
    };
  },
  computed: {
    /**
     * Whether the incoming or existing file is selected.
     * This is used by the parent component to ensure
     * that the user has selected at least one of the two files.
     */
    isEnoughSelected() {
      return this.isChecked(this.incoming, this.newSelected) || this.isChecked(this.existing, this.oldSelected);
    },
    incomingPreview() {
      if (!this.incomingFile) {
        return null;
      }
      const preview = this.previewUrl(this.incomingFile);
      return preview ?? this.asyncPreview;
    },
    incomingLastModified() {
      if (!this.incomingFile) {
        return null;
      }
      return this.lastModified(this.incomingFile);
    },
    incomingSize() {
      if (!this.incomingFile) {
        return (0,_index_BFpeXJm8_mjs__WEBPACK_IMPORTED_MODULE_3__.t)("Unknown size");
      }
      return this.size(this.incomingFile);
    },
    existingPreview() {
      return this.previewUrl(this.existing);
    },
    existingLastModified() {
      return this.lastModified(this.existing);
    }
  },
  watch: {
    /**
     * Watch "incoming" to update "incomingFile"
     */
    incoming: {
      // Run the watcher also on mount with initial "incoming" value
      immediate: true,
      async handler() {
        if (this.incoming instanceof File) {
          this.incomingFile = this.incoming;
        } else if (this.incoming instanceof FileSystemFileEntry) {
          this.incomingFile = await new Promise((resolve, reject) => this.incoming.file(resolve, reject));
        } else {
          this.incomingFile = null;
        }
      }
    }
  },
  methods: {
    lastModified(node) {
      const lastModified = node instanceof File ? new Date(node.lastModified) : node.mtime;
      return lastModified ?? null;
    },
    size(node) {
      if (node.size) {
        return (0,_nextcloud_files__WEBPACK_IMPORTED_MODULE_2__.formatFileSize)(node.size, true);
      }
      return (0,_index_BFpeXJm8_mjs__WEBPACK_IMPORTED_MODULE_3__.t)("Unknown size");
    },
    previewUrl(node) {
      if (node instanceof File) {
        this.previewImage(node).then((url) => {
          this.asyncPreview = url;
        });
        return null;
      }
      if (node.type === _nextcloud_files__WEBPACK_IMPORTED_MODULE_2__.FileType.Folder) {
        return null;
      }
      try {
        const previewUrl = node.attributes.previewUrl || (0,_nextcloud_router__WEBPACK_IMPORTED_MODULE_7__.generateUrl)("/core/preview?fileId={fileid}", {
          fileid: node.fileid
        });
        const url = new URL(window.location.origin + previewUrl);
        url.searchParams.set("x", PREVIEW_SIZE.toString());
        url.searchParams.set("y", PREVIEW_SIZE.toString());
        url.searchParams.set("mimeFallback", "true");
        const etag = node.attributes?.etag || "";
        url.searchParams.set("v", etag.slice(0, 6));
        return url.href;
      } catch (e) {
        return null;
      }
    },
    isFolder(node) {
      if ((0,_index_BFpeXJm8_mjs__WEBPACK_IMPORTED_MODULE_3__.i)(node)) {
        return node.isDirectory;
      }
      node = node;
      return node.type === _nextcloud_files__WEBPACK_IMPORTED_MODULE_2__.FileType.Folder || node.type === "httpd/unix-directory";
    },
    isChecked(node, selected) {
      return selected.includes(node);
    },
    onUpdateIncomingChecked(checked) {
      if (checked) {
        this.$emit("update:newSelected", [this.incoming, ...this.newSelected]);
      } else {
        this.$emit("update:newSelected", this.newSelected.filter((node) => node !== this.incoming));
      }
    },
    onUpdateExistingChecked(checked) {
      if (checked) {
        this.$emit("update:oldSelected", [this.existing, ...this.oldSelected]);
      } else {
        this.$emit("update:oldSelected", this.oldSelected.filter((node) => node !== this.existing));
      }
    },
    /**
     * Get the preview Image of a file
     * @param file the soon-to-be-uploaded File
     */
    async previewImage(file) {
      return new Promise((resolve) => {
        if (file instanceof File && file.type.startsWith("image/")) {
          const reader = new FileReader();
          reader.onload = async (e) => {
            const result = e?.target?.result;
            if (result instanceof ArrayBuffer) {
              const blob = new Blob([result], { type: file.type });
              const url = URL.createObjectURL(blob);
              resolve(url);
              return;
            }
            resolve(null);
          };
          reader.readAsArrayBuffer(file);
        } else {
          resolve(null);
        }
      });
    },
    t: _index_BFpeXJm8_mjs__WEBPACK_IMPORTED_MODULE_3__.t
  }
});
var _sfc_render$1 = function render5() {
  var _vm = this, _c = _vm._self._c;
  _vm._self._setupProxy;
  return _c("fieldset", { staticClass: "node-picker__wrapper", attrs: { "data-cy-conflict-picker-fieldset": _vm.existing.basename } }, [_c("legend", [_vm._v(_vm._s(_vm.existing.basename))]), _c("NcCheckboxRadioSwitch", { attrs: { "checked": _vm.isChecked(_vm.incoming, _vm.newSelected), "required": !_vm.isEnoughSelected, "data-cy-conflict-picker-input-incoming": _vm.existing.basename }, on: { "update:checked": _vm.onUpdateIncomingChecked } }, [_c("span", { staticClass: "node-picker node-picker--incoming" }, [!_vm.incomingPreview ? [_vm.isFolder(_vm.incoming) ? _c("FolderSvg", { staticClass: "node-picker__icon", attrs: { "size": 48 } }) : _c("FileSvg", { staticClass: "node-picker__icon", attrs: { "size": 48 } })] : _c("img", { staticClass: "node-picker__preview", attrs: { "src": _vm.incomingPreview, "alt": _vm.t("Preview image"), "loading": "lazy" } }), _c("span", { staticClass: "node-picker__desc" }, [_c("span", { staticClass: "node-picker__name" }, [_vm._v(_vm._s(_vm.t("New version")))]), _vm.incomingLastModified ? _c("NcDateTime", { staticClass: "node-picker__mtime", attrs: { "timestamp": _vm.incomingLastModified, "relative-time": false, "format": { timeStyle: "short", dateStyle: "medium" } } }) : _c("span", { staticClass: "node-picker__mtime" }, [_vm._v(" " + _vm._s(_vm.t("Last modified date unknown")) + " ")]), _c("span", { staticClass: "node-picker__size" }, [_vm._v(_vm._s(_vm.incomingSize))])], 1)], 2)]), _c("NcCheckboxRadioSwitch", { attrs: { "checked": _vm.isChecked(_vm.existing, _vm.oldSelected), "required": !_vm.isEnoughSelected, "data-cy-conflict-picker-input-existing": _vm.existing.basename }, on: { "update:checked": _vm.onUpdateExistingChecked } }, [_c("span", { staticClass: "node-picker node-picker--existing" }, [!_vm.existingPreview ? [_vm.isFolder(_vm.existing) ? _c("FolderSvg", { staticClass: "node-picker__icon", attrs: { "size": 48 } }) : _c("FileSvg", { staticClass: "node-picker__icon", attrs: { "size": 48 } })] : _c("img", { staticClass: "node-picker__preview", attrs: { "src": _vm.existingPreview, "alt": _vm.t("Preview image"), "loading": "lazy" } }), _c("span", { staticClass: "node-picker__desc" }, [_c("span", { staticClass: "node-picker__name" }, [_vm._v(_vm._s(_vm.t("Existing version")))]), _vm.existingLastModified ? _c("NcDateTime", { staticClass: "node-picker__mtime", attrs: { "timestamp": _vm.existingLastModified, "relative-time": false, "format": { timeStyle: "short", dateStyle: "medium" } } }) : _c("span", { staticClass: "node-picker__mtime" }, [_vm._v(" " + _vm._s(_vm.t("Last modified date unknown")) + " ")]), _c("span", { staticClass: "node-picker__size" }, [_vm._v(_vm._s(_vm.size(_vm.existing)))])], 1)], 2)])], 1);
};
var _sfc_staticRenderFns$1 = [];
var __component__$1 = /* @__PURE__ */ (0,_index_BFpeXJm8_mjs__WEBPACK_IMPORTED_MODULE_3__.n)(
  _sfc_main$1,
  _sfc_render$1,
  _sfc_staticRenderFns$1,
  false,
  null,
  "0becb48e"
);
const NodesPicker = __component__$1.exports;
const _sfc_main = (0,vue__WEBPACK_IMPORTED_MODULE_9__.defineComponent)({
  name: "ConflictPicker",
  components: {
    ArrowRight,
    Close,
    NcButton: _nextcloud_vue_dist_Components_NcButton_js__WEBPACK_IMPORTED_MODULE_6__["default"],
    NcCheckboxRadioSwitch: _nextcloud_vue_dist_Components_NcCheckboxRadioSwitch_js__WEBPACK_IMPORTED_MODULE_4__["default"],
    NcDialog: _nextcloud_vue_dist_Components_NcDialog_js__WEBPACK_IMPORTED_MODULE_5__["default"],
    NodesPicker
  },
  props: {
    /** Directory/context file name */
    dirname: {
      type: String,
      default: ""
    },
    /** All the existing files in the current directory */
    content: {
      type: Array,
      required: true
    },
    /** New files being moved/uploaded */
    conflicts: {
      type: Array,
      required: true
    },
    /**
     * If set to true no hint about overwriting directory content will be shown
     */
    recursiveUpload: {
      type: Boolean,
      default: false
    }
  },
  emits: ["cancel", "submit"],
  setup() {
    return {
      blockedTitle: (0,_index_BFpeXJm8_mjs__WEBPACK_IMPORTED_MODULE_3__.t)("You need to select at least one version of each file to continue.")
    };
  },
  data() {
    return {
      // computed list of conflicting files already present in the directory
      files: [],
      opened: true,
      newSelected: [],
      oldSelected: []
    };
  },
  computed: {
    name() {
      if (this?.dirname?.trim?.() !== "") {
        return (0,_index_BFpeXJm8_mjs__WEBPACK_IMPORTED_MODULE_3__.a)("{count} file conflict in {dirname}", "{count} file conflicts in {dirname}", this.conflicts.length, {
          count: this.conflicts.length,
          dirname: this.dirname
        });
      }
      return (0,_index_BFpeXJm8_mjs__WEBPACK_IMPORTED_MODULE_3__.a)("{count} file conflict", "{count} files conflict", this.conflicts.length, { count: this.conflicts.length });
    },
    skipButtonLabel() {
      return (0,_index_BFpeXJm8_mjs__WEBPACK_IMPORTED_MODULE_3__.a)("Skip this file", "Skip {count} files", this.conflicts.length, { count: this.conflicts.length });
    },
    // Select all incoming files
    selectAllNewBind() {
      const label = this.isNoneNewSelected || this.isSomeNewSelected ? this.t("Select all") : this.t("Unselect all");
      return {
        "aria-label": label,
        checked: this.isAllNewSelected,
        indeterminate: this.isSomeNewSelected,
        title: label
      };
    },
    isAllNewSelected() {
      return this.newSelected.length === this.conflicts.length;
    },
    isNoneNewSelected() {
      return this.newSelected.length === 0;
    },
    isSomeNewSelected() {
      return !this.isAllNewSelected && !this.isNoneNewSelected;
    },
    // Select all existing files
    selectAllOldBind() {
      const label = this.isNoneOldSelected || this.isSomeOldSelected ? this.t("Select all") : this.t("Unselect all");
      return {
        "aria-label": label,
        checked: this.isAllOldSelected,
        indeterminate: this.isSomeOldSelected,
        title: label
      };
    },
    isAllOldSelected() {
      return this.oldSelected.length === this.files.length;
    },
    isNoneOldSelected() {
      return this.oldSelected.length === 0;
    },
    isSomeOldSelected() {
      return !this.isAllOldSelected && !this.isNoneOldSelected;
    },
    // Global handlings
    isEnoughSelected() {
      if (this.isAllOldSelected || this.isAllNewSelected) {
        return true;
      }
      return this.$refs?.nodesPicker?.every?.((picker) => picker.isEnoughSelected);
    }
  },
  mounted() {
    this.files = this.conflicts.map((conflict) => {
      const name = conflict instanceof File || (0,_index_BFpeXJm8_mjs__WEBPACK_IMPORTED_MODULE_3__.i)(conflict) ? conflict.name : conflict.basename;
      return this.content.find((node) => node.basename === name);
    }).filter(Boolean);
    if (this.conflicts.length === 0 || this.files.length === 0) {
      const error = new Error("ConflictPicker: files and conflicts must not be empty");
      this.onCancel(error);
      throw error;
    }
    if (this.conflicts.length !== this.files.length) {
      const error = new Error("ConflictPicker: files and conflicts must have the same length. Make sure you filter out non conflicting files from the conflicts array.");
      this.onCancel(error);
      throw error;
    }
    _index_BFpeXJm8_mjs__WEBPACK_IMPORTED_MODULE_3__.l.debug("ConflictPicker initialised", { files: this.files, conflicts: this.conflicts, content: this.content });
  },
  methods: {
    onCancel(error) {
      this.opened = false;
      this.$emit("cancel", error);
    },
    onSkip() {
      _index_BFpeXJm8_mjs__WEBPACK_IMPORTED_MODULE_3__.l.debug("Conflict skipped. Ignoring all conflicting files");
      this.opened = false;
      this.$emit("submit", {
        selected: [],
        renamed: []
      });
    },
    onSubmit() {
      if (!this.isEnoughSelected) {
        this.scrollValidityInputIntoView();
        this.$refs.form.reportValidity();
        (0,_nextcloud_dialogs__WEBPACK_IMPORTED_MODULE_1__.showError)(this.blockedTitle);
        return;
      }
      const selectedOldNames = this.oldSelected.map((node) => node.basename);
      const directoryContent = this.content.map((node) => node.basename);
      const renamed = [];
      const toRename = this.newSelected.filter((node) => {
        const name = node instanceof File || (0,_index_BFpeXJm8_mjs__WEBPACK_IMPORTED_MODULE_3__.i)(node) ? node.name : node.basename;
        return selectedOldNames.includes(name);
      });
      if (toRename.length > 0) {
        toRename.forEach((file) => {
          const name = file instanceof File || (0,_index_BFpeXJm8_mjs__WEBPACK_IMPORTED_MODULE_3__.i)(file) ? file.name : file.basename;
          const newName = (0,_nextcloud_files__WEBPACK_IMPORTED_MODULE_2__.getUniqueName)(name, directoryContent);
          if (file instanceof File || (0,_index_BFpeXJm8_mjs__WEBPACK_IMPORTED_MODULE_3__.i)(file)) {
            Object.defineProperty(file, "name", { value: newName });
            renamed.push(file);
            return;
          }
          file.rename(newName);
          renamed.push(file);
        });
      }
      const selected = this.newSelected.filter((node) => {
        const name = node instanceof File || (0,_index_BFpeXJm8_mjs__WEBPACK_IMPORTED_MODULE_3__.i)(node) ? node.name : node.basename;
        return !selectedOldNames.includes(name) && !toRename.includes(node);
      });
      _index_BFpeXJm8_mjs__WEBPACK_IMPORTED_MODULE_3__.l.debug("Conflict resolved", { selected, renamed });
      this.opened = false;
      this.$emit("submit", {
        selected,
        renamed
      });
    },
    /**
     * Scroll the first invalid input into view.
     * This is needed because the browser uses behavior: "nearest" by default.
     */
    scrollValidityInputIntoView() {
      const selector = '.checkbox-radio-switch input[type="checkbox"]';
      const checkboxes = Array.from(this.$el.querySelectorAll(selector));
      checkboxes.forEach((input) => input?.setCustomValidity?.(""));
      const invalidInput = this.$el.querySelector(selector + ":invalid");
      if (invalidInput) {
        invalidInput.setCustomValidity(this.blockedTitle);
        invalidInput.scrollIntoView({ behavior: "instant", block: "center" });
      }
    },
    onSelectAllNew(selected) {
      if (selected) {
        _index_BFpeXJm8_mjs__WEBPACK_IMPORTED_MODULE_3__.l.debug("Selected all new files");
        this.newSelected = this.conflicts;
      } else {
        _index_BFpeXJm8_mjs__WEBPACK_IMPORTED_MODULE_3__.l.debug("Cleared new selection");
        this.newSelected = [];
      }
    },
    onSelectAllOld(selected) {
      if (selected) {
        _index_BFpeXJm8_mjs__WEBPACK_IMPORTED_MODULE_3__.l.debug("Selected all existing files");
        this.oldSelected = this.files;
      } else {
        _index_BFpeXJm8_mjs__WEBPACK_IMPORTED_MODULE_3__.l.debug("Cleared old selection");
        this.oldSelected = [];
      }
    },
    t: _index_BFpeXJm8_mjs__WEBPACK_IMPORTED_MODULE_3__.t
  }
});
var _sfc_render = function render6() {
  var _vm = this, _c = _vm._self._c;
  _vm._self._setupProxy;
  return _c("NcDialog", { staticClass: "conflict-picker", attrs: { "can-close": "", "data-cy-conflict-picker": "", "close-on-click-outside": false, "show": _vm.opened, "name": _vm.name, "size": "large" }, on: { "closing": _vm.onCancel }, scopedSlots: _vm._u([{ key: "actions", fn: function() {
    return [_c("NcButton", { attrs: { "aria-label": _vm.t("Cancel"), "title": _vm.t("Cancel the entire operation"), "data-cy-conflict-picker-cancel": "", "type": "tertiary" }, on: { "click": _vm.onCancel }, scopedSlots: _vm._u([{ key: "icon", fn: function() {
      return [_c("Close", { attrs: { "size": 20 } })];
    }, proxy: true }]) }, [_vm._v(" " + _vm._s(_vm.t("Cancel")) + " ")]), _c("span", { staticClass: "dialog__actions-separator" }), _c("NcButton", { attrs: { "aria-label": _vm.skipButtonLabel, "data-cy-conflict-picker-skip": "" }, on: { "click": _vm.onSkip }, scopedSlots: _vm._u([{ key: "icon", fn: function() {
      return [_c("Close", { attrs: { "size": 20 } })];
    }, proxy: true }]) }, [_vm._v(" " + _vm._s(_vm.skipButtonLabel) + " ")]), _c("NcButton", { class: { "button-vue--disabled": !_vm.isEnoughSelected }, attrs: { "aria-label": _vm.t("Continue"), "title": _vm.isEnoughSelected ? "" : _vm.blockedTitle, "data-cy-conflict-picker-submit": "", "native-type": "submit", "type": "primary" }, on: { "click": function($event) {
      $event.stopPropagation();
      $event.preventDefault();
      return _vm.onSubmit.apply(null, arguments);
    } }, scopedSlots: _vm._u([{ key: "icon", fn: function() {
      return [_c("ArrowRight", { attrs: { "size": 20 } })];
    }, proxy: true }]) }, [_vm._v(" " + _vm._s(_vm.t("Continue")) + " ")])];
  }, proxy: true }]) }, [_c("div", { staticClass: "conflict-picker__header" }, [_c("p", { staticClass: "conflict-picker__description", attrs: { "id": "conflict-picker-description" } }, [_vm._v(" " + _vm._s(_vm.t("Which files do you want to keep?"))), _c("br"), _vm._v(" " + _vm._s(_vm.t("If you select both versions, the incoming file will have a number added to its name."))), _c("br"), _vm.recursiveUpload ? [_vm._v(" " + _vm._s(_vm.t("When an incoming folder is selected, the content is written into the existing folder and a recursive conflict resolution is performed.")) + " ")] : [_vm._v(" " + _vm._s(_vm.t("When an incoming folder is selected, any conflicting files within it will also be overwritten.")) + " ")]], 2)]), _c("form", { ref: "form", staticClass: "conflict-picker__form", attrs: { "aria-labelledby": "conflict-picker-description", "data-cy-conflict-picker-form": "" }, on: { "submit": function($event) {
    $event.preventDefault();
    $event.stopPropagation();
    return _vm.onSubmit.apply(null, arguments);
  } } }, [_c("fieldset", { staticClass: "conflict-picker__all", attrs: { "data-cy-conflict-picker-fieldset": "all" } }, [_c("legend", { staticClass: "hidden-visually" }, [_vm._v(" " + _vm._s(_vm.t("Select all checkboxes")) + " ")]), _c("NcCheckboxRadioSwitch", _vm._b({ attrs: { "data-cy-conflict-picker-input-incoming": "all" }, on: { "update:checked": _vm.onSelectAllNew } }, "NcCheckboxRadioSwitch", _vm.selectAllNewBind, false), [_vm._v(" " + _vm._s(_vm.t("Select all new files")) + " ")]), _c("NcCheckboxRadioSwitch", _vm._b({ attrs: { "data-cy-conflict-picker-input-existing": "all" }, on: { "update:checked": _vm.onSelectAllOld } }, "NcCheckboxRadioSwitch", _vm.selectAllOldBind, false), [_vm._v(" " + _vm._s(_vm.t("Select all existing files")) + " ")])], 1), _vm._l(_vm.files, function(node, index) {
    return _c("NodesPicker", { key: node.fileid, ref: "nodesPicker", refInFor: true, attrs: { "incoming": _vm.conflicts[index], "existing": _vm.files[index], "new-selected": _vm.newSelected, "old-selected": _vm.oldSelected }, on: { "update:newSelected": function($event) {
      _vm.newSelected = $event;
    }, "update:new-selected": function($event) {
      _vm.newSelected = $event;
    }, "update:oldSelected": function($event) {
      _vm.oldSelected = $event;
    }, "update:old-selected": function($event) {
      _vm.oldSelected = $event;
    } } });
  })], 2)]);
};
var _sfc_staticRenderFns = [];
var __component__ = /* @__PURE__ */ (0,_index_BFpeXJm8_mjs__WEBPACK_IMPORTED_MODULE_3__.n)(
  _sfc_main,
  _sfc_render,
  _sfc_staticRenderFns,
  false,
  null,
  "f0c1b8b3"
);
const ConflictPicker = __component__.exports;



/***/ })

}]);
//# sourceMappingURL=node_modules_nextcloud_upload_dist_chunks_ConflictPicker-D0BLWDdv_mjs-node_modules_nextcloud_upload_dist_chunks_ConflictPicker-D0BLWDdv_mjs.js.map?v=42f19777e82890539665