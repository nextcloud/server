{"version":3,"file":"files_sharing-init-public.js?v=52556d281c61570f4e56","mappings":"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","sources":["webpack:///nextcloud/webpack/runtime/chunk loaded","webpack:///nextcloud/webpack/runtime/load script","webpack:///nextcloud/apps/files/src/store/index.ts","webpack:///nextcloud/apps/files/src/logger.ts","webpack:///nextcloud/apps/files/src/services/Files.ts","webpack:///nextcloud/apps/files/src/services/WebDavSearch.ts","webpack:///nextcloud/apps/files_sharing/src/files_views/publicFileDrop.ts","webpack:///nextcloud/apps/files_sharing/src/services/logger.ts","webpack:///nextcloud/apps/files_sharing/src/router/index.ts","webpack:///nextcloud/apps/files_sharing/src/init-public.ts","webpack:///nextcloud/apps/files_sharing/src/files_views/publicShare.ts","webpack:///nextcloud/apps/files_sharing/src/files_views/publicFileShare.ts","webpack:///nextcloud/apps/files/src/services/RouterService.ts","webpack:///nextcloud/apps/files/src/store/paths.ts","webpack:///nextcloud/apps/files/src/store/active.ts","webpack:///nextcloud/apps/files/src/views/search.ts","webpack:///nextcloud/apps/files/src/services/WebdavClient.ts","webpack:///nextcloud/apps/files/src/store/search.ts","webpack:///nextcloud/apps/files/src/store/files.ts","webpack:///nextcloud/webpack/bootstrap","webpack:///nextcloud/webpack/runtime/compat get default export","webpack:///nextcloud/webpack/runtime/define property getters","webpack:///nextcloud/webpack/runtime/ensure chunk","webpack:///nextcloud/webpack/runtime/get javascript chunk filename","webpack:///nextcloud/webpack/runtime/global","webpack:///nextcloud/webpack/runtime/hasOwnProperty shorthand","webpack:///nextcloud/webpack/runtime/make namespace object","webpack:///nextcloud/webpack/runtime/node module decorator","webpack:///nextcloud/webpack/runtime/runtimeId","webpack:///nextcloud/webpack/runtime/publicPath","webpack:///nextcloud/webpack/runtime/jsonp chunk loading","webpack:///nextcloud/webpack/runtime/nonce","webpack:///nextcloud/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"nextcloud-ui-legacy:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","/**\n * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { createPinia } from 'pinia';\n/**\n *\n */\nexport function getPinia() {\n    if (window._nc_files_pinia) {\n        return window._nc_files_pinia;\n    }\n    window._nc_files_pinia = createPinia();\n    return window._nc_files_pinia;\n}\n","/**\n * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { getLoggerBuilder } from '@nextcloud/logger';\nexport default getLoggerBuilder()\n    .setApp('files')\n    .detectUser()\n    .build();\n","import { resultToNode as davResultToNode, defaultRootPath, getDefaultPropfind } from '@nextcloud/files/dav';\nimport { CancelablePromise } from 'cancelable-promise';\nimport { join } from 'path';\nimport logger from '../logger.ts';\nimport { useFilesStore } from '../store/files.ts';\nimport { getPinia } from '../store/index.ts';\nimport { useSearchStore } from '../store/search.ts';\nimport { client } from './WebdavClient.ts';\nimport { searchNodes } from './WebDavSearch.ts';\n/**\n * Slim wrapper over `@nextcloud/files` `davResultToNode` to allow using the function with `Array.map`\n *\n * @param stat The result returned by the webdav library\n */\nexport const resultToNode = (stat) => davResultToNode(stat);\n/**\n * Get contents implementation for the files view.\n * This also allows to fetch local search results when the user is currently filtering.\n *\n * @param path - The path to query\n */\nexport function getContents(path = '/') {\n    const controller = new AbortController();\n    const searchStore = useSearchStore(getPinia());\n    if (searchStore.query.length >= 3) {\n        return new CancelablePromise((resolve, reject, cancel) => {\n            cancel(() => controller.abort());\n            getLocalSearch(path, searchStore.query, controller.signal)\n                .then(resolve)\n                .catch(reject);\n        });\n    }\n    else {\n        return defaultGetContents(path);\n    }\n}\n/**\n * Generic `getContents` implementation for the users files.\n *\n * @param path - The path to get the contents\n */\nexport function defaultGetContents(path) {\n    path = join(defaultRootPath, path);\n    const controller = new AbortController();\n    const propfindPayload = getDefaultPropfind();\n    return new CancelablePromise(async (resolve, reject, onCancel) => {\n        onCancel(() => controller.abort());\n        try {\n            const contentsResponse = await client.getDirectoryContents(path, {\n                details: true,\n                data: propfindPayload,\n                includeSelf: true,\n                signal: controller.signal,\n            });\n            const root = contentsResponse.data[0];\n            const contents = contentsResponse.data.slice(1);\n            if (root.filename !== path && `${root.filename}/` !== path) {\n                logger.debug(`Exepected \"${path}\" but got filename \"${root.filename}\" instead.`);\n                throw new Error('Root node does not match requested path');\n            }\n            resolve({\n                folder: resultToNode(root),\n                contents: contents.map((result) => {\n                    try {\n                        return resultToNode(result);\n                    }\n                    catch (error) {\n                        logger.error(`Invalid node detected '${result.basename}'`, { error });\n                        return null;\n                    }\n                }).filter(Boolean),\n            });\n        }\n        catch (error) {\n            reject(error);\n        }\n    });\n}\n/**\n * Get the local search results for the current folder.\n *\n * @param path - The path\n * @param query - The current search query\n * @param signal - The aboort signal\n */\nasync function getLocalSearch(path, query, signal) {\n    const filesStore = useFilesStore(getPinia());\n    let folder = filesStore.getDirectoryByPath('files', path);\n    if (!folder) {\n        const rootPath = join(defaultRootPath, path);\n        const stat = await client.stat(rootPath, { details: true });\n        folder = resultToNode(stat.data);\n    }\n    const contents = await searchNodes(query, { dir: path, signal });\n    return {\n        folder,\n        contents,\n    };\n}\n","/*!\n * SPDX-FileCopyrightText: 2025 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { getCurrentUser } from '@nextcloud/auth';\nimport { defaultRootPath, getDavNameSpaces, getDavProperties, resultToNode } from '@nextcloud/files/dav';\nimport { getBaseUrl } from '@nextcloud/router';\nimport logger from '../logger.ts';\nimport { client } from './WebdavClient.ts';\n/**\n * Search for nodes matching the given query.\n *\n * @param query - Search query\n * @param options - Options\n * @param options.dir - The base directory to scope the search to\n * @param options.signal - Abort signal for the request\n */\nexport async function searchNodes(query, { dir, signal }) {\n    const user = getCurrentUser();\n    if (!user) {\n        // the search plugin only works for user roots\n        return [];\n    }\n    query = query.trim();\n    if (query.length < 3) {\n        // the search plugin only works with queries of at least 3 characters\n        return [];\n    }\n    if (dir && !dir.startsWith('/')) {\n        dir = `/${dir}`;\n    }\n    logger.debug('Searching for nodes', { query, dir });\n    const { data } = await client.search('/', {\n        details: true,\n        signal,\n        data: `\n<d:searchrequest ${getDavNameSpaces()}>\n\t <d:basicsearch>\n\t\t <d:select>\n\t\t\t <d:prop>\n\t\t\t ${getDavProperties()}\n\t\t\t </d:prop>\n\t\t </d:select>\n\t\t <d:from>\n\t\t\t <d:scope>\n\t\t\t\t <d:href>/files/${user.uid}${dir || ''}</d:href>\n\t\t\t\t <d:depth>infinity</d:depth>\n\t\t\t </d:scope>\n\t\t </d:from>\n\t\t <d:where>\n\t\t\t <d:like>\n\t\t\t\t <d:prop>\n\t\t\t\t\t <d:displayname/>\n\t\t\t\t </d:prop>\n\t\t\t\t <d:literal>%${query.replace('%', '')}%</d:literal>\n\t\t\t </d:like>\n\t\t </d:where>\n\t\t <d:orderby/>\n\t</d:basicsearch>\n</d:searchrequest>`,\n    });\n    // check if the request was aborted\n    if (signal?.aborted) {\n        return [];\n    }\n    // otherwise return the result mapped to Nextcloud nodes\n    return data.results.map((result) => resultToNode(result, defaultRootPath, getBaseUrl()));\n}\n","import svgCloudUpload from '@mdi/svg/svg/cloud-upload.svg?raw';\nimport { Folder, getNavigation, Permission, View } from '@nextcloud/files';\nimport { defaultRemoteURL, defaultRootPath } from '@nextcloud/files/dav';\nimport { loadState } from '@nextcloud/initial-state';\nimport { translate as t } from '@nextcloud/l10n';\nimport Vue from 'vue';\nexport default () => {\n    const foldername = loadState('files_sharing', 'filename');\n    let FilesViewFileDropEmptyContent;\n    let fileDropEmptyContentInstance;\n    const view = new View({\n        id: 'public-file-drop',\n        name: t('files_sharing', 'File drop'),\n        caption: t('files_sharing', 'Upload files to {foldername}', { foldername }),\n        icon: svgCloudUpload,\n        order: 1,\n        emptyView: async (div) => {\n            if (FilesViewFileDropEmptyContent === undefined) {\n                const { default: component } = await import('../views/FilesViewFileDropEmptyContent.vue');\n                FilesViewFileDropEmptyContent = Vue.extend(component);\n            }\n            if (fileDropEmptyContentInstance) {\n                fileDropEmptyContentInstance.$destroy();\n            }\n            fileDropEmptyContentInstance = new FilesViewFileDropEmptyContent({\n                propsData: {\n                    foldername,\n                },\n            });\n            fileDropEmptyContentInstance.$mount(div);\n        },\n        getContents: async () => {\n            return {\n                contents: [],\n                // Fake a writeonly folder as root\n                folder: new Folder({\n                    id: 0,\n                    source: `${defaultRemoteURL}${defaultRootPath}`,\n                    root: defaultRootPath,\n                    owner: null,\n                    permissions: Permission.CREATE,\n                }),\n            };\n        },\n    });\n    const Navigation = getNavigation();\n    Navigation.register(view);\n};\n","/**\n * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { getLoggerBuilder } from '@nextcloud/logger';\nexport default getLoggerBuilder()\n    .setApp('files_sharing')\n    .detectUser()\n    .build();\n","import { loadState } from '@nextcloud/initial-state';\nimport { generateUrl } from '@nextcloud/router';\nimport queryString from 'query-string';\nimport Vue from 'vue';\nimport Router, { isNavigationFailure, NavigationFailureType } from 'vue-router';\nimport logger from '../services/logger.ts';\nconst view = loadState('files_sharing', 'view');\nconst sharingToken = loadState('files_sharing', 'sharingToken');\nVue.use(Router);\n// Prevent router from throwing errors when we're already on the page we're trying to go to\nconst originalPush = Router.prototype.push;\nRouter.prototype.push = (function (...args) {\n    if (args.length > 1) {\n        return originalPush.call(this, ...args);\n    }\n    return originalPush.call(this, args[0]).catch(ignoreDuplicateNavigation);\n});\nconst originalReplace = Router.prototype.replace;\nRouter.prototype.replace = (function (...args) {\n    if (args.length > 1) {\n        return originalReplace.call(this, ...args);\n    }\n    return originalReplace.call(this, args[0]).catch(ignoreDuplicateNavigation);\n});\n/**\n * Ignore duplicated-navigation error but forward real exceptions\n *\n * @param error The thrown error\n */\nfunction ignoreDuplicateNavigation(error) {\n    if (isNavigationFailure(error, NavigationFailureType.duplicated)) {\n        logger.debug('Ignoring duplicated navigation from vue-router', { error });\n    }\n    else {\n        throw error;\n    }\n}\nconst router = new Router({\n    mode: 'history',\n    // if index.php is in the url AND we got this far, then it's working:\n    // let's keep using index.php in the url\n    base: generateUrl('/s'),\n    linkActiveClass: 'active',\n    routes: [\n        {\n            path: '/',\n            // Pretending we're using the default view\n            redirect: { name: 'filelist', params: { view, token: sharingToken } },\n        },\n        {\n            path: '/:token',\n            name: 'filelist',\n            props: true,\n        },\n    ],\n    // Custom stringifyQuery to prevent encoding of slashes in the url\n    stringifyQuery(query) {\n        const result = queryString.stringify(query).replace(/%2F/gmi, '/');\n        return result ? ('?' + result) : '';\n    },\n});\nexport default router;\n","import { emit, subscribe, unsubscribe } from '@nextcloud/event-bus';\nimport { getNavigation } from '@nextcloud/files';\nimport { loadState } from '@nextcloud/initial-state';\nimport RouterService from '../../files/src/services/RouterService.ts';\nimport registerFileDropView from './files_views/publicFileDrop.ts';\nimport registerPublicFileShareView from './files_views/publicFileShare.ts';\nimport registerPublicShareView from './files_views/publicShare.ts';\nimport router from './router/index.ts';\nimport logger from './services/logger.ts';\nregisterFileDropView();\nregisterPublicShareView();\nregisterPublicFileShareView();\n// Get the current view from state and set it active\nconst view = loadState('files_sharing', 'view');\nconst navigation = getNavigation();\nnavigation.setActive(navigation.views.find(({ id }) => id === view) ?? null);\n// Force our own router\nwindow.OCP.Files = window.OCP.Files ?? {};\nwindow.OCP.Files.Router = new RouterService(router);\n// If this is a single file share, so set the fileid as active in the URL\nconst fileId = loadState('files_sharing', 'fileId', null);\nconst token = loadState('files_sharing', 'sharingToken');\nif (fileId !== null) {\n    window.OCP.Files.Router.goToRoute('filelist', { ...window.OCP.Files.Router.params, token, fileid: String(fileId) }, { ...window.OCP.Files.Router.query, openfile: 'true' });\n}\n// When the file list is loaded we need to apply the \"userconfig\" setup on the share\nsubscribe('files:list:updated', loadShareConfig);\n/**\n * Event handler to load the view config for the current share.\n * This is done on the `files:list:updated` event to ensure the list and especially the config store was correctly initialized.\n *\n * @param context The event context\n * @param context.folder The current folder\n */\nfunction loadShareConfig({ folder }) {\n    // Only setup config once\n    unsubscribe('files:list:updated', loadShareConfig);\n    // Share attributes (the same) are set on all folders of a share\n    if (folder.attributes['share-attributes']) {\n        const shareAttributes = JSON.parse(folder.attributes['share-attributes'] || '[]');\n        const gridViewAttribute = shareAttributes.find(({ scope, key }) => scope === 'config' && key === 'grid_view');\n        if (gridViewAttribute !== undefined) {\n            logger.debug('Loading share attributes', { gridViewAttribute });\n            emit('files:config:updated', { key: 'grid_view', value: gridViewAttribute.value === true });\n        }\n    }\n}\n","import LinkSvg from '@mdi/svg/svg/link.svg?raw';\nimport { getNavigation, View } from '@nextcloud/files';\n/**\n * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { translate as t } from '@nextcloud/l10n';\nimport { getContents } from '../../../files/src/services/Files.ts';\nexport default () => {\n    const view = new View({\n        id: 'public-share',\n        name: t('files_sharing', 'Public share'),\n        caption: t('files_sharing', 'Publicly shared files.'),\n        emptyTitle: t('files_sharing', 'No files'),\n        emptyCaption: t('files_sharing', 'Files and folders shared with you will show up here'),\n        icon: LinkSvg,\n        order: 1,\n        getContents,\n    });\n    const Navigation = getNavigation();\n    Navigation.register(view);\n};\n","/**\n * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport LinkSvg from '@mdi/svg/svg/link.svg?raw';\nimport { davGetDefaultPropfind, davRemoteURL, davResultToNode, davRootPath, Folder, getNavigation, Permission, View } from '@nextcloud/files';\nimport { translate as t } from '@nextcloud/l10n';\nimport { CancelablePromise } from 'cancelable-promise';\nimport { client } from '../../../files/src/services/WebdavClient.ts';\nimport logger from '../services/logger.ts';\nexport default () => {\n    const view = new View({\n        id: 'public-file-share',\n        name: t('files_sharing', 'Public file share'),\n        caption: t('files_sharing', 'Publicly shared file.'),\n        emptyTitle: t('files_sharing', 'No file'),\n        emptyCaption: t('files_sharing', 'The file shared with you will show up here'),\n        icon: LinkSvg,\n        order: 1,\n        getContents: () => {\n            return new CancelablePromise(async (resolve, reject, onCancel) => {\n                const abort = new AbortController();\n                onCancel(() => abort.abort());\n                try {\n                    const node = await client.stat(davRootPath, {\n                        data: davGetDefaultPropfind(),\n                        details: true,\n                        signal: abort.signal,\n                    });\n                    resolve({\n                        // We only have one file as the content\n                        contents: [davResultToNode(node.data)],\n                        // Fake a readonly folder as root\n                        folder: new Folder({\n                            id: 0,\n                            source: `${davRemoteURL}${davRootPath}`,\n                            root: davRootPath,\n                            owner: null,\n                            permissions: Permission.READ,\n                            attributes: {\n                                // Ensure the share note is set on the root\n                                note: node.data.props?.note,\n                            },\n                        }),\n                    });\n                }\n                catch (e) {\n                    logger.error(e);\n                    reject(e);\n                }\n            });\n        },\n    });\n    const Navigation = getNavigation();\n    Navigation.register(view);\n};\n","export default class RouterService {\n    // typescript compiles this to `#router` to make it private even in JS,\n    // but in TS it needs to be called without the visibility specifier\n    router;\n    constructor(router) {\n        this.router = router;\n    }\n    get name() {\n        return this.router.currentRoute.name;\n    }\n    get query() {\n        return this.router.currentRoute.query || {};\n    }\n    get params() {\n        return this.router.currentRoute.params || {};\n    }\n    /**\n     * This is a protected getter only for internal use\n     *\n     */\n    get _router() {\n        return this.router;\n    }\n    /**\n     * Trigger a route change on the files app\n     *\n     * @param path the url path, eg: '/trashbin?dir=/Deleted'\n     * @param replace replace the current history\n     * @see https://router.vuejs.org/guide/essentials/navigation.html#navigate-to-a-different-location\n     */\n    goTo(path, replace = false) {\n        return this.router.push({\n            path,\n            replace,\n        });\n    }\n    /**\n     * Trigger a route change on the files App\n     *\n     * @param name the route name\n     * @param params the route parameters\n     * @param query the url query parameters\n     * @param replace replace the current history\n     * @see https://router.vuejs.org/guide/essentials/navigation.html#navigate-to-a-different-location\n     */\n    goToRoute(name, params, query, replace) {\n        return this.router.push({\n            name,\n            query,\n            params,\n            replace,\n        });\n    }\n}\n","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { subscribe } from '@nextcloud/event-bus';\nimport { File, FileType, getNavigation } from '@nextcloud/files';\nimport { dirname } from '@nextcloud/paths';\nimport { defineStore } from 'pinia';\nimport Vue from 'vue';\nimport logger from '../logger.ts';\nimport { useFilesStore } from './files.ts';\n/**\n *\n * @param args\n */\nexport function usePathsStore(...args) {\n    const files = useFilesStore(...args);\n    const store = defineStore('paths', {\n        state: () => ({\n            paths: {},\n        }),\n        getters: {\n            getPath: (state) => {\n                return (service, path) => {\n                    if (!state.paths[service]) {\n                        return undefined;\n                    }\n                    return state.paths[service][path];\n                };\n            },\n        },\n        actions: {\n            addPath(payload) {\n                // If it doesn't exists, init the service state\n                if (!this.paths[payload.service]) {\n                    Vue.set(this.paths, payload.service, {});\n                }\n                // Now we can set the provided path\n                Vue.set(this.paths[payload.service], payload.path, payload.source);\n            },\n            deletePath(service, path) {\n                // skip if service does not exist\n                if (!this.paths[service]) {\n                    return;\n                }\n                Vue.delete(this.paths[service], path);\n            },\n            onCreatedNode(node) {\n                const service = getNavigation()?.active?.id || 'files';\n                if (!node.fileid) {\n                    logger.error('Node has no fileid', { node });\n                    return;\n                }\n                // Only add path if it's a folder\n                if (node.type === FileType.Folder) {\n                    this.addPath({\n                        service,\n                        path: node.path,\n                        source: node.source,\n                    });\n                }\n                // Update parent folder children if exists\n                // If the folder is the root, get it and update it\n                this.addNodeToParentChildren(node);\n            },\n            onDeletedNode(node) {\n                const service = getNavigation()?.active?.id || 'files';\n                if (node.type === FileType.Folder) {\n                    // Delete the path\n                    this.deletePath(service, node.path);\n                }\n                this.deleteNodeFromParentChildren(node);\n            },\n            onMovedNode({ node, oldSource }) {\n                const service = getNavigation()?.active?.id || 'files';\n                // Update the path of the node\n                if (node.type === FileType.Folder) {\n                    // Delete the old path if it exists\n                    const oldPath = Object.entries(this.paths[service]).find(([, source]) => source === oldSource);\n                    if (oldPath?.[0]) {\n                        this.deletePath(service, oldPath[0]);\n                    }\n                    // Add the new path\n                    this.addPath({\n                        service,\n                        path: node.path,\n                        source: node.source,\n                    });\n                }\n                // Dummy simple clone of the renamed node from a previous state\n                const oldNode = new File({ source: oldSource, owner: node.owner, mime: node.mime });\n                this.deleteNodeFromParentChildren(oldNode);\n                this.addNodeToParentChildren(node);\n            },\n            deleteNodeFromParentChildren(node) {\n                const service = getNavigation()?.active?.id || 'files';\n                // Update children of a root folder\n                const parentSource = dirname(node.source);\n                const folder = (node.dirname === '/' ? files.getRoot(service) : files.getNode(parentSource));\n                if (folder) {\n                    // ensure sources are unique\n                    const children = new Set(folder._children ?? []);\n                    children.delete(node.source);\n                    Vue.set(folder, '_children', [...children.values()]);\n                    logger.debug('Children updated', { parent: folder, node, children: folder._children });\n                    return;\n                }\n                logger.debug('Parent path does not exists, skipping children update', { node });\n            },\n            addNodeToParentChildren(node) {\n                const service = getNavigation()?.active?.id || 'files';\n                // Update children of a root folder\n                const parentSource = dirname(node.source);\n                const folder = (node.dirname === '/' ? files.getRoot(service) : files.getNode(parentSource));\n                if (folder) {\n                    // ensure sources are unique\n                    const children = new Set(folder._children ?? []);\n                    children.add(node.source);\n                    Vue.set(folder, '_children', [...children.values()]);\n                    logger.debug('Children updated', { parent: folder, node, children: folder._children });\n                    return;\n                }\n                logger.debug('Parent path does not exists, skipping children update', { node });\n            },\n        },\n    });\n    const pathsStore = store(...args);\n    // Make sure we only register the listeners once\n    if (!pathsStore._initialized) {\n        subscribe('files:node:created', pathsStore.onCreatedNode);\n        subscribe('files:node:deleted', pathsStore.onDeletedNode);\n        subscribe('files:node:moved', pathsStore.onMovedNode);\n        pathsStore._initialized = true;\n    }\n    return pathsStore;\n}\n","/**\n * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { subscribe } from '@nextcloud/event-bus';\nimport { getNavigation } from '@nextcloud/files';\nimport { defineStore } from 'pinia';\nimport { ref } from 'vue';\nimport logger from '../logger.ts';\nexport const useActiveStore = defineStore('active', () => {\n    /**\n     * The currently active action\n     */\n    const activeAction = ref();\n    /**\n     * The currently active folder\n     */\n    const activeFolder = ref();\n    /**\n     * The current active node within the folder\n     */\n    const activeNode = ref();\n    /**\n     * The current active view\n     */\n    const activeView = ref();\n    initialize();\n    /**\n     * Unset the active node if deleted\n     *\n     * @param node - The node thats deleted\n     */\n    function onDeletedNode(node) {\n        if (activeNode.value && activeNode.value.source === node.source) {\n            activeNode.value = undefined;\n        }\n    }\n    /**\n     * Callback to update the current active view\n     *\n     * @param view - The new active view\n     */\n    function onChangedView(view = null) {\n        logger.debug('Setting active view', { view });\n        activeView.value = view ?? undefined;\n        activeNode.value = undefined;\n    }\n    /**\n     * Initalize the store - connect all event listeners.\n     *\n     */\n    function initialize() {\n        const navigation = getNavigation();\n        // Make sure we only register the listeners once\n        subscribe('files:node:deleted', onDeletedNode);\n        onChangedView(navigation.active);\n        // Or you can react to changes of the current active view\n        navigation.addEventListener('updateActive', (event) => {\n            onChangedView(event.detail);\n        });\n    }\n    return {\n        activeAction,\n        activeFolder,\n        activeNode,\n        activeView,\n    };\n});\n","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport MagnifySvg from '@mdi/svg/svg/magnify.svg?raw';\nimport { getNavigation, View } from '@nextcloud/files';\nimport { t } from '@nextcloud/l10n';\nimport Vue from 'vue';\nimport { getContents } from '../services/Search.ts';\nimport { VIEW_ID as FILES_VIEW_ID } from './files.ts';\nexport const VIEW_ID = 'search';\n/**\n * Register the search-in-files view\n */\nexport function registerSearchView() {\n    let instance;\n    let view;\n    const Navigation = getNavigation();\n    Navigation.register(new View({\n        id: VIEW_ID,\n        name: t('files', 'Search'),\n        caption: t('files', 'Search results within your files.'),\n        async emptyView(el) {\n            if (!view) {\n                view = (await import('./SearchEmptyView.vue')).default;\n            }\n            else {\n                instance.$destroy();\n            }\n            instance = new Vue(view);\n            instance.$mount(el);\n        },\n        icon: MagnifySvg,\n        order: 10,\n        parent: FILES_VIEW_ID,\n        // it should be shown expanded\n        expanded: true,\n        // this view is hidden by default and only shown when active\n        hidden: true,\n        getContents,\n    }));\n}\n","import { getClient, getDefaultPropfind, getRootPath, resultToNode } from '@nextcloud/files/dav';\nexport const client = getClient();\n/**\n *\n * @param path\n */\nexport async function fetchNode(path) {\n    const propfindPayload = getDefaultPropfind();\n    const result = await client.stat(`${getRootPath()}${path}`, {\n        details: true,\n        data: propfindPayload,\n    });\n    return resultToNode(result.data);\n}\n","/*!\n * SPDX-FileCopyrightText: 2025 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { emit, subscribe } from '@nextcloud/event-bus';\nimport debounce from 'debounce';\nimport { defineStore } from 'pinia';\nimport { ref, watch } from 'vue';\nimport logger from '../logger.ts';\nimport { VIEW_ID } from '../views/search.ts';\nexport const useSearchStore = defineStore('search', () => {\n    /**\n     * The current search query\n     */\n    const query = ref('');\n    /**\n     * Scope of the search.\n     * Scopes:\n     * - filter: only filter current file list\n     * - globally: search everywhere\n     */\n    const scope = ref('filter');\n    // reset the base if query is cleared\n    watch(scope, updateSearch);\n    watch(query, (old, current) => {\n        // skip if only whitespaces changed\n        if (old.trim() === current.trim()) {\n            return;\n        }\n        updateSearch();\n    });\n    // initialize the search store\n    initialize();\n    /**\n     * Debounced update of the current route\n     *\n     */\n    const updateRouter = debounce((isSearch) => {\n        const router = window.OCP.Files.Router;\n        router.goToRoute(undefined, {\n            view: VIEW_ID,\n        }, {\n            query: query.value,\n        }, isSearch);\n    });\n    /**\n     * Handle updating the filter if needed.\n     * Also update the search view by updating the current route if needed.\n     *\n     */\n    function updateSearch() {\n        // emit the search event to update the filter\n        emit('files:search:updated', { query: query.value, scope: scope.value });\n        const router = window.OCP.Files.Router;\n        // if we are on the search view and the query was unset or scope was set to 'filter' we need to move back to the files view\n        if (router.params.view === VIEW_ID && (query.value === '' || scope.value === 'filter')) {\n            scope.value = 'filter';\n            return router.goToRoute(undefined, {\n                view: 'files',\n            }, {\n                ...router.query,\n                query: undefined,\n            });\n        }\n        // for the filter scope we do not need to adjust the current route anymore\n        // also if the query is empty we do not need to do anything\n        if (scope.value === 'filter' || !query.value) {\n            return;\n        }\n        const isSearch = router.params.view === VIEW_ID;\n        logger.debug('Update route for updated search query', { query: query.value, isSearch });\n        updateRouter(isSearch);\n    }\n    /**\n     * Event handler that resets the store if the file list view was changed.\n     *\n     * @param view - The new view that is active\n     */\n    function onViewChanged(view) {\n        if (view.id !== VIEW_ID) {\n            query.value = '';\n            scope.value = 'filter';\n        }\n    }\n    /**\n     * Initialize the store from the router if needed\n     */\n    function initialize() {\n        subscribe('files:navigation:changed', onViewChanged);\n        const router = window.OCP.Files.Router;\n        // if we initially load the search view (e.g. hard page refresh)\n        // then we need to initialize the store from the router\n        if (router.params.view === VIEW_ID) {\n            query.value = [router.query.query].flat()[0] ?? '';\n            if (query.value) {\n                scope.value = 'globally';\n                logger.debug('Directly navigated to search view', { query: query.value });\n            }\n            else {\n                // we do not have any query so we need to move to the files list\n                logger.info('Directly navigated to search view without any query, redirect to files view.');\n                router.goToRoute(undefined, {\n                    ...router.params,\n                    view: 'files',\n                }, {\n                    ...router.query,\n                    query: undefined,\n                }, true);\n            }\n        }\n    }\n    return {\n        query,\n        scope,\n    };\n});\n","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { subscribe } from '@nextcloud/event-bus';\nimport { defineStore } from 'pinia';\nimport Vue from 'vue';\nimport logger from '../logger.ts';\nimport { fetchNode } from '../services/WebdavClient.ts';\nimport { usePathsStore } from './paths.ts';\n/**\n *\n * @param args\n */\nexport function useFilesStore(...args) {\n    const store = defineStore('files', {\n        state: () => ({\n            files: {},\n            roots: {},\n        }),\n        getters: {\n            /**\n             * Get a file or folder by its source\n             *\n             * @param state\n             */\n            getNode: (state) => (source) => state.files[source],\n            /**\n             * Get a list of files or folders by their IDs\n             * Note: does not return undefined values\n             *\n             * @param state\n             */\n            getNodes: (state) => (sources) => sources\n                .map((source) => state.files[source])\n                .filter(Boolean),\n            /**\n             * Get files or folders by their file ID\n             * Multiple nodes can have the same file ID but different sources\n             * (e.g. in a shared context)\n             *\n             * @param state\n             */\n            getNodesById: (state) => (fileId) => Object.values(state.files).filter((node) => node.fileid === fileId),\n            /**\n             * Get the root folder of a service\n             *\n             * @param state\n             */\n            getRoot: (state) => (service) => state.roots[service],\n        },\n        actions: {\n            /**\n             * Get cached directory matching a given path\n             *\n             * @param service - The service (files view)\n             * @param path - The path relative within the service\n             * @return The folder if found\n             */\n            getDirectoryByPath(service, path) {\n                const pathsStore = usePathsStore();\n                let folder;\n                // Get the containing folder from path store\n                if (!path || path === '/') {\n                    folder = this.getRoot(service);\n                }\n                else {\n                    const source = pathsStore.getPath(service, path);\n                    if (source) {\n                        folder = this.getNode(source);\n                    }\n                }\n                return folder;\n            },\n            /**\n             * Get cached child nodes within a given path\n             *\n             * @param service - The service (files view)\n             * @param path - The path relative within the service\n             * @return Array of cached nodes within the path\n             */\n            getNodesByPath(service, path) {\n                const folder = this.getDirectoryByPath(service, path);\n                // If we found a cache entry and the cache entry was already loaded (has children) then use it\n                return (folder?._children ?? [])\n                    .map((source) => this.getNode(source))\n                    .filter(Boolean);\n            },\n            updateNodes(nodes) {\n                // Update the store all at once\n                const files = nodes.reduce((acc, node) => {\n                    if (!node.fileid) {\n                        logger.error('Trying to update/set a node without fileid', { node });\n                        return acc;\n                    }\n                    acc[node.source] = node;\n                    return acc;\n                }, {});\n                Vue.set(this, 'files', { ...this.files, ...files });\n            },\n            deleteNodes(nodes) {\n                nodes.forEach((node) => {\n                    if (node.source) {\n                        Vue.delete(this.files, node.source);\n                    }\n                });\n            },\n            setRoot({ service, root }) {\n                Vue.set(this.roots, service, root);\n            },\n            onDeletedNode(node) {\n                this.deleteNodes([node]);\n            },\n            onCreatedNode(node) {\n                this.updateNodes([node]);\n            },\n            onMovedNode({ node, oldSource }) {\n                if (!node.fileid) {\n                    logger.error('Trying to update/set a node without fileid', { node });\n                    return;\n                }\n                // Update the path of the node\n                Vue.delete(this.files, oldSource);\n                this.updateNodes([node]);\n            },\n            async onUpdatedNode(node) {\n                if (!node.fileid) {\n                    logger.error('Trying to update/set a node without fileid', { node });\n                    return;\n                }\n                // If we have multiple nodes with the same file ID, we need to update all of them\n                const nodes = this.getNodesById(node.fileid);\n                if (nodes.length > 1) {\n                    await Promise.all(nodes.map((node) => fetchNode(node.path))).then(this.updateNodes);\n                    logger.debug(nodes.length + ' nodes updated in store', { fileid: node.fileid });\n                    return;\n                }\n                // If we have only one node with the file ID, we can update it directly\n                if (nodes.length === 1 && node.source === nodes[0].source) {\n                    this.updateNodes([node]);\n                    return;\n                }\n                // Otherwise, it means we receive an event for a node that is not in the store\n                fetchNode(node.path).then((n) => this.updateNodes([n]));\n            },\n            // Handlers for legacy sidebar (no real nodes support)\n            onAddFavorite(node) {\n                const ourNode = this.getNode(node.source);\n                if (ourNode) {\n                    Vue.set(ourNode.attributes, 'favorite', 1);\n                }\n            },\n            onRemoveFavorite(node) {\n                const ourNode = this.getNode(node.source);\n                if (ourNode) {\n                    Vue.set(ourNode.attributes, 'favorite', 0);\n                }\n            },\n        },\n    });\n    const fileStore = store(...args);\n    // Make sure we only register the listeners once\n    if (!fileStore._initialized) {\n        subscribe('files:node:created', fileStore.onCreatedNode);\n        subscribe('files:node:deleted', fileStore.onDeletedNode);\n        subscribe('files:node:updated', fileStore.onUpdatedNode);\n        subscribe('files:node:moved', fileStore.onMovedNode);\n        // legacy sidebar\n        subscribe('files:favorites:added', fileStore.onAddFavorite);\n        subscribe('files:favorites:removed', fileStore.onRemoveFavorite);\n        fileStore._initialized = true;\n    }\n    return fileStore;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \"-\" + chunkId + \".js?v=\" + {\"1082\":\"97342e1775a1c5225953\",\"1938\":\"a4c0be77e28a85b9e119\",\"3128\":\"511efa1d13454d52aa76\",\"3183\":\"c50f35f53ad73e31c102\",\"6590\":\"7d2b77fdee7cf2f116e6\",\"7471\":\"e4533847625f31a740b2\",\"8970\":\"0e2b0de588a80e6c431c\",\"9107\":\"1b3c8beea40fc15a961d\",\"9165\":\"5deecec46f30cf51ef76\"}[chunkId] + \"\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.j = 5102;","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = (document && document.baseURI) || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t5102: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunknextcloud_ui_legacy\"] = self[\"webpackChunknextcloud_ui_legacy\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [4208], () => (__webpack_require__(43325)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","inProgress","dataWebpackPrefix","getPinia","window","_nc_files_pinia","createPinia","getLoggerBuilder","setApp","detectUser","build","resultToNode","stat","davResultToNode","getContents","path","controller","AbortController","searchStore","useSearchStore","query","length","CancelablePromise","resolve","reject","cancel","abort","async","signal","folder","useFilesStore","getDirectoryByPath","rootPath","join","defaultRootPath","client","details","data","contents","searchNodes","dir","getLocalSearch","then","catch","propfindPayload","getDefaultPropfind","onCancel","contentsResponse","getDirectoryContents","includeSelf","root","slice","filename","logger","debug","Error","map","result","error","basename","filter","Boolean","defaultGetContents","user","getCurrentUser","trim","startsWith","search","getDavNameSpaces","getDavProperties","uid","replace","aborted","results","getBaseUrl","view","loadState","sharingToken","Vue","use","Router","originalPush","prototype","push","args","call","this","ignoreDuplicateNavigation","originalReplace","isNavigationFailure","NavigationFailureType","duplicated","mode","base","generateUrl","linkActiveClass","routes","redirect","name","params","token","props","stringifyQuery","queryString","stringify","foldername","FilesViewFileDropEmptyContent","fileDropEmptyContentInstance","View","id","t","caption","icon","order","emptyView","undefined","default","component","extend","$destroy","propsData","$mount","div","Folder","source","defaultRemoteURL","owner","permissions","Permission","CREATE","getNavigation","register","registerFileDropView","emptyTitle","emptyCaption","LinkSvg","registerPublicShareView","node","davRootPath","davGetDefaultPropfind","davRemoteURL","READ","attributes","note","e","registerPublicFileShareView","navigation","setActive","views","find","OCP","Files","constructor","router","currentRoute","_router","goTo","goToRoute","fileId","fileid","String","openfile","subscribe","loadShareConfig","unsubscribe","gridViewAttribute","JSON","parse","scope","key","emit","value","usePathsStore","files","pathsStore","defineStore","state","paths","getters","getPath","service","actions","addPath","payload","deletePath","delete","onCreatedNode","active","type","FileType","addNodeToParentChildren","onDeletedNode","deleteNodeFromParentChildren","onMovedNode","oldSource","oldPath","Object","entries","oldNode","File","mime","parentSource","dirname","getRoot","getNode","children","Set","_children","values","parent","add","store","_initialized","activeAction","ref","activeFolder","activeNode","activeView","onChangedView","addEventListener","event","detail","initialize","VIEW_ID","getClient","fetchNode","getRootPath","watch","updateSearch","old","current","onViewChanged","flat","info","updateRouter","debounce","isSearch","fileStore","roots","getNodes","sources","getNodesById","getNodesByPath","updateNodes","nodes","reduce","acc","deleteNodes","forEach","setRoot","onUpdatedNode","Promise","all","n","onAddFavorite","ourNode","onRemoveFavorite","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","splice","r","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","f","chunkId","promises","u","g","globalThis","Function","obj","prop","hasOwnProperty","l","url","done","script","needAttach","scripts","document","getElementsByTagName","s","getAttribute","createElement","charset","nc","setAttribute","src","onScriptComplete","prev","onerror","onload","clearTimeout","timeout","doneFns","parentNode","removeChild","setTimeout","bind","target","head","appendChild","Symbol","toStringTag","nmd","scriptUrl","importScripts","location","currentScript","tagName","toUpperCase","test","p","b","baseURI","self","href","installedChunks","installedChunkData","promise","errorType","realSrc","message","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}