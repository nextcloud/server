{"version":3,"file":"core-files_fileinfo.mjs","sources":["../core/src/files/fileinfo.js"],"sourcesContent":["/**\n * SPDX-FileCopyrightText: 2016-2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-FileCopyrightText: 2016 ownCloud, Inc.\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\n/* eslint-disable */\n(function(OC) {\n\n\t/**\n\t * @class OC.Files.FileInfo\n\t * @classdesc File information\n\t *\n\t * @param {Object} data file data, see attributes for details\n\t *\n\t * @since 8.2\n\t */\n\tconst FileInfo = function(data) {\n\t\tconst self = this\n\t\t_.each(data, function(value, key) {\n\t\t\tif (!_.isFunction(value)) {\n\t\t\t\tself[key] = value\n\t\t\t}\n\t\t})\n\n\t\tif (!_.isUndefined(this.id)) {\n\t\t\tthis.id = parseInt(data.id, 10)\n\t\t}\n\n\t\t// TODO: normalize path\n\t\tthis.path = data.path || ''\n\n\t\tif (this.type === 'dir') {\n\t\t\tthis.mimetype = 'httpd/unix-directory'\n\t\t} else {\n\t\t\tthis.mimetype = this.mimetype || 'application/octet-stream'\n\t\t}\n\n\t\tif (!this.type) {\n\t\t\tif (this.mimetype === 'httpd/unix-directory') {\n\t\t\t\tthis.type = 'dir'\n\t\t\t} else {\n\t\t\t\tthis.type = 'file'\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @memberof OC.Files\n\t */\n\tFileInfo.prototype = {\n\t\t/**\n\t\t * File id\n\t\t *\n\t\t * @type int\n\t\t */\n\t\tid: null,\n\n\t\t/**\n\t\t * File name\n\t\t *\n\t\t * @type String\n\t\t */\n\t\tname: null,\n\n\t\t/**\n\t\t * Path leading to the file, without the file name,\n\t\t * and with a leading slash.\n\t\t *\n\t\t * @type String\n\t\t */\n\t\tpath: null,\n\n\t\t/**\n\t\t * Mime type\n\t\t *\n\t\t * @type String\n\t\t */\n\t\tmimetype: null,\n\n\t\t/**\n\t\t * Icon URL.\n\t\t *\n\t\t * Can be used to override the mime type icon.\n\t\t *\n\t\t * @type String\n\t\t */\n\t\ticon: null,\n\n\t\t/**\n\t\t * File type. 'file'  for files, 'dir' for directories.\n\t\t *\n\t\t * @type String\n\t\t * @deprecated rely on mimetype instead\n\t\t */\n\t\ttype: null,\n\n\t\t/**\n\t\t * Permissions.\n\t\t *\n\t\t * @see OC#PERMISSION_ALL for permissions\n\t\t * @type int\n\t\t */\n\t\tpermissions: null,\n\n\t\t/**\n\t\t * Modification time\n\t\t *\n\t\t * @type int\n\t\t */\n\t\tmtime: null,\n\n\t\t/**\n\t\t * Etag\n\t\t *\n\t\t * @type String\n\t\t */\n\t\tetag: null,\n\n\t\t/**\n\t\t * Mount type.\n\t\t *\n\t\t * One of null, \"external-root\", \"shared\" or \"shared-root\"\n\t\t *\n\t\t * @type string\n\t\t */\n\t\tmountType: null,\n\n\t\t/**\n\t\t * @type boolean\n\t\t */\n\t\thasPreview: true,\n\n\t\t/**\n\t\t * @type int\n\t\t */\n\t\tsharePermissions: null,\n\n\t\t/**\n\t\t * @type Array\n\t\t */\n\t\tshareAttributes: [],\n\n\t\tquotaAvailableBytes: -1,\n\n\t\tcanDownload: function() {\n\t\t\tfor (const i in this.shareAttributes) {\n\t\t\t\tconst attr = this.shareAttributes[i]\n\t\t\t\tif (attr.scope === 'permissions' && attr.key === 'download') {\n\t\t\t\t\treturn attr.enabled\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true\n\t\t},\n\t}\n\n\tif (!OC.Files) {\n\t\tOC.Files = {}\n\t}\n\tOC.Files.FileInfo = FileInfo\n})(OC)\n"],"names":["OC","FileInfo","data","self","value","key","i","attr"],"mappings":";CAOC,SAASA,EAAI,CAUb,MAAMC,EAAW,SAASC,EAAM,CAC/B,MAAMC,EAAO,KACb,EAAE,KAAKD,EAAM,SAASE,EAAOC,EAAK,CAC5B,EAAE,WAAWD,CAAK,IACtBD,EAAKE,CAAG,EAAID,EAEhB,CAAG,EAEI,EAAE,YAAY,KAAK,EAAE,IACzB,KAAK,GAAK,SAASF,EAAK,GAAI,EAAE,GAI/B,KAAK,KAAOA,EAAK,MAAQ,GAErB,KAAK,OAAS,MACjB,KAAK,SAAW,uBAEhB,KAAK,SAAW,KAAK,UAAY,2BAG7B,KAAK,OACL,KAAK,WAAa,uBACrB,KAAK,KAAO,MAEZ,KAAK,KAAO,OAGd,EAKDD,EAAS,UAAY,CAMpB,GAAI,KAOJ,KAAM,KAQN,KAAM,KAON,SAAU,KASV,KAAM,KAQN,KAAM,KAQN,YAAa,KAOb,MAAO,KAOP,KAAM,KASN,UAAW,KAKX,WAAY,GAKZ,iBAAkB,KAKlB,gBAAiB,CAAE,EAEnB,oBAAqB,GAErB,YAAa,UAAW,CACvB,UAAWK,KAAK,KAAK,gBAAiB,CACrC,MAAMC,EAAO,KAAK,gBAAgBD,CAAC,EACnC,GAAIC,EAAK,QAAU,eAAiBA,EAAK,MAAQ,WAChD,OAAOA,EAAK,OAEb,CAED,MAAO,EACP,CACD,EAEIP,EAAG,QACPA,EAAG,MAAQ,CAAE,GAEdA,EAAG,MAAM,SAAWC,CACrB,GAAG,EAAE"}