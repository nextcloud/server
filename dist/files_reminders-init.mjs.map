{"version":3,"file":"files_reminders-init.mjs","sources":["../apps/files_reminders/src/shared/utils.ts","../apps/files_reminders/src/shared/logger.ts","../apps/files_reminders/src/services/reminderService.ts","../apps/files_reminders/src/components/SetCustomReminderModal.vue","../apps/files_reminders/src/services/customPicker.ts","../apps/files_reminders/src/actions/reminderStatusAction.ts","../apps/files_reminders/src/actions/clearReminderAction.ts","../apps/files_reminders/src/actions/setReminderMenuAction.ts","../apps/files_reminders/src/actions/setReminderSuggestionActions.ts","../apps/files_reminders/src/actions/setReminderCustomAction.ts","../apps/files_reminders/src/init.ts"],"sourcesContent":["/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { getCanonicalLocale } from '@nextcloud/l10n'\n\nexport enum DateTimePreset {\n\tLaterToday = 'later-today',\n\tTomorrow = 'tomorrow',\n\tThisWeekend = 'this-weekend',\n\tNextWeek = 'next-week',\n}\n\nconst getFirstWorkdayOfWeek = () => {\n\tconst now = new Date()\n\tnow.setHours(0, 0, 0, 0)\n\tnow.setDate(now.getDate() - now.getDay() + 1)\n\treturn new Date(now)\n}\n\nconst getWeek = (date: Date) => {\n\tconst dateClone = new Date(date)\n\tdateClone.setHours(0, 0, 0, 0)\n\tconst firstDayOfYear = new Date(date.getFullYear(), 0, 1, 0, 0, 0, 0)\n\tconst daysFromFirstDay = (date.getTime() - firstDayOfYear.getTime()) / 86400000\n\treturn Math.ceil((daysFromFirstDay + firstDayOfYear.getDay() + 1) / 7)\n}\n\nconst isSameWeek = (a: Date, b: Date) => {\n\treturn getWeek(a) === getWeek(b)\n\t\t&& a.getFullYear() === b.getFullYear()\n}\n\nconst isSameDate = (a: Date, b: Date) => {\n\treturn a.getDate() === b.getDate()\n\t\t&& a.getMonth() === b.getMonth()\n\t\t&& a.getFullYear() === b.getFullYear()\n}\n\nexport const getDateTime = (dateTime: DateTimePreset): null | Date => {\n\tconst matchPreset: Record<DateTimePreset, () => null | Date> = {\n\t\t[DateTimePreset.LaterToday]: () => {\n\t\t\tconst now = new Date()\n\t\t\tconst evening = new Date()\n\t\t\tevening.setHours(18, 0, 0, 0)\n\t\t\tconst cutoff = new Date()\n\t\t\tcutoff.setHours(17, 0, 0, 0)\n\t\t\tif (now >= cutoff) {\n\t\t\t\treturn null\n\t\t\t}\n\t\t\treturn evening\n\t\t},\n\n\t\t[DateTimePreset.Tomorrow]: () => {\n\t\t\tconst now = new Date()\n\t\t\tconst day = new Date()\n\t\t\tday.setDate(now.getDate() + 1)\n\t\t\tday.setHours(8, 0, 0, 0)\n\t\t\treturn day\n\t\t},\n\n\t\t[DateTimePreset.ThisWeekend]: () => {\n\t\t\tconst today = new Date()\n\t\t\tif (\n\t\t\t\t[\n\t\t\t\t\t5, // Friday\n\t\t\t\t\t6, // Saturday\n\t\t\t\t\t0, // Sunday\n\t\t\t\t].includes(today.getDay())\n\t\t\t) {\n\t\t\t\treturn null\n\t\t\t}\n\t\t\tconst saturday = new Date()\n\t\t\tconst firstWorkdayOfWeek = getFirstWorkdayOfWeek()\n\t\t\tsaturday.setDate(firstWorkdayOfWeek.getDate() + 5)\n\t\t\tsaturday.setHours(8, 0, 0, 0)\n\t\t\treturn saturday\n\t\t},\n\n\t\t[DateTimePreset.NextWeek]: () => {\n\t\t\tconst today = new Date()\n\t\t\tif (today.getDay() === 0) { // Sunday\n\t\t\t\treturn null\n\t\t\t}\n\t\t\tconst workday = new Date()\n\t\t\tconst firstWorkdayOfWeek = getFirstWorkdayOfWeek()\n\t\t\tworkday.setDate(firstWorkdayOfWeek.getDate() + 7)\n\t\t\tworkday.setHours(8, 0, 0, 0)\n\t\t\treturn workday\n\t\t},\n\t}\n\n\treturn matchPreset[dateTime]()\n}\n\nexport const getInitialCustomDueDate = (): Date => {\n\tconst now = new Date()\n\tconst dueDate = new Date()\n\tdueDate.setHours(now.getHours() + 2, 0, 0, 0)\n\treturn dueDate\n}\n\nexport const getDateString = (dueDate: Date): string => {\n\tlet formatOptions: Intl.DateTimeFormatOptions = {\n\t\thour: 'numeric',\n\t\tminute: '2-digit',\n\t}\n\n\tconst today = new Date()\n\n\tif (!isSameDate(dueDate, today)) {\n\t\tformatOptions = {\n\t\t\t...formatOptions,\n\t\t\tweekday: 'short',\n\t\t}\n\t}\n\n\tif (!isSameWeek(dueDate, today)) {\n\t\tformatOptions = {\n\t\t\t...formatOptions,\n\t\t\tmonth: 'short',\n\t\t\tday: 'numeric',\n\t\t}\n\t}\n\n\tif (dueDate.getFullYear() !== today.getFullYear()) {\n\t\tformatOptions = {\n\t\t\t...formatOptions,\n\t\t\tyear: 'numeric',\n\t\t}\n\t}\n\n\treturn dueDate.toLocaleString(\n\t\tgetCanonicalLocale(),\n\t\tformatOptions,\n\t)\n}\n\nexport const getVerboseDateString = (dueDate: Date): string => {\n\tlet formatOptions: Intl.DateTimeFormatOptions = {\n\t\tmonth: 'long',\n\t\tday: 'numeric',\n\t\tweekday: 'long',\n\t\thour: 'numeric',\n\t\tminute: '2-digit',\n\t}\n\n\tconst today = new Date()\n\n\tif (dueDate.getFullYear() !== today.getFullYear()) {\n\t\tformatOptions = {\n\t\t\t...formatOptions,\n\t\t\tyear: 'numeric',\n\t\t}\n\t}\n\n\treturn dueDate.toLocaleString(\n\t\tgetCanonicalLocale(),\n\t\tformatOptions,\n\t)\n}\n","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { getLoggerBuilder } from '@nextcloud/logger'\n\nexport const logger = getLoggerBuilder()\n\t.setApp('files_reminders')\n\t.detectUser()\n\t.build()\n","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport axios from '@nextcloud/axios'\nimport { generateOcsUrl } from '@nextcloud/router'\n\ninterface Reminder {\n\tdueDate: null | Date\n}\n\nexport const getReminder = async (fileId: number): Promise<Reminder> => {\n\tconst url = generateOcsUrl('/apps/files_reminders/api/v1/{fileId}', { fileId })\n\tconst response = await axios.get(url)\n\tconst dueDate = response.data.ocs.data.dueDate ? new Date(response.data.ocs.data.dueDate) : null\n\n\treturn {\n\t\tdueDate,\n\t}\n}\n\nexport const setReminder = async (fileId: number, dueDate: Date): Promise<[]> => {\n\tconst url = generateOcsUrl('/apps/files_reminders/api/v1/{fileId}', { fileId })\n\n\tconst response = await axios.put(url, {\n\t\tdueDate: dueDate.toISOString(), // timezone of string is always UTC\n\t})\n\n\treturn response.data.ocs.data\n}\n\nexport const clearReminder = async (fileId: number): Promise<[]> => {\n\tconst url = generateOcsUrl('/apps/files_reminders/api/v1/{fileId}', { fileId })\n\tconst response = await axios.delete(url)\n\n\treturn response.data.ocs.data\n}\n","<!--\n  - SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n\n<template>\n\t<NcDialog v-if=\"opened\"\n\t\t:name=\"name\"\n\t\t:out-transition=\"true\"\n\t\tsize=\"small\"\n\t\tclose-on-click-outside\n\t\t@closing=\"onClose\">\n\t\t<form id=\"set-custom-reminder-form\"\n\t\t\tclass=\"custom-reminder-modal\"\n\t\t\t@submit.prevent=\"setCustom\">\n\t\t\t<NcDateTimePickerNative id=\"set-custom-reminder\"\n\t\t\t\tv-model=\"customDueDate\"\n\t\t\t\t:label=\"label\"\n\t\t\t\t:min=\"nowDate\"\n\t\t\t\t:required=\"true\"\n\t\t\t\ttype=\"datetime-local\"\n\t\t\t\t@input=\"onInput\" />\n\n\t\t\t<NcNoteCard v-if=\"isValid\" type=\"info\">\n\t\t\t\t{{ t('files_reminders', 'We will remind you of this file') }}\n\t\t\t\t<NcDateTime :timestamp=\"customDueDate\" />\n\t\t\t</NcNoteCard>\n\n\t\t\t<NcNoteCard v-else type=\"error\">\n\t\t\t\t{{ t('files_reminders', 'Please choose a valid date & time') }}\n\t\t\t</NcNoteCard>\n\t\t</form>\n\t\t<template #actions>\n\t\t\t<!-- Cancel pick -->\n\t\t\t<NcButton type=\"tertiary\" @click=\"onClose\">\n\t\t\t\t{{ t('files_reminders', 'Cancel') }}\n\t\t\t</NcButton>\n\n\t\t\t<!-- Clear reminder -->\n\t\t\t<NcButton v-if=\"hasDueDate\" @click=\"clear\">\n\t\t\t\t{{ t('files_reminders', 'Clear reminder') }}\n\t\t\t</NcButton>\n\n\t\t\t<!-- Set reminder -->\n\t\t\t<NcButton :disabled=\"!isValid\"\n\t\t\t\ttype=\"primary\"\n\t\t\t\tform=\"set-custom-reminder-form\"\n\t\t\t\tnative-type=\"submit\">\n\t\t\t\t{{ t('files_reminders', 'Set reminder') }}\n\t\t\t</NcButton>\n\t\t</template>\n\t</NcDialog>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\nimport type { Node } from '@nextcloud/files'\nimport { emit } from '@nextcloud/event-bus'\nimport { showError, showSuccess } from '@nextcloud/dialogs'\nimport { translate as t } from '@nextcloud/l10n'\n\nimport NcButton from '@nextcloud/vue/dist/Components/NcButton.js'\nimport NcDateTime from '@nextcloud/vue/dist/Components/NcDateTime.js'\nimport NcDateTimePickerNative from '@nextcloud/vue/dist/Components/NcDateTimePickerNative.js'\nimport NcDialog from '@nextcloud/vue/dist/Components/NcDialog.js'\nimport NcNoteCard from '@nextcloud/vue/dist/Components/NcNoteCard.js'\n\nimport { getDateString, getInitialCustomDueDate } from '../shared/utils.ts'\nimport { logger } from '../shared/logger.ts'\nimport { clearReminder, setReminder } from '../services/reminderService.ts'\n\nexport default Vue.extend({\n\tname: 'SetCustomReminderModal',\n\n\tcomponents: {\n\t\tNcButton,\n\t\tNcDateTime,\n\t\tNcDateTimePickerNative,\n\t\tNcDialog,\n\t\tNcNoteCard,\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tnode: undefined as Node | undefined,\n\t\t\thasDueDate: false,\n\t\t\topened: false,\n\t\t\tisValid: true,\n\n\t\t\tcustomDueDate: null as null | Date,\n\t\t\tnowDate: new Date(),\n\t\t}\n\t},\n\n\tcomputed: {\n\t\tfileId(): number {\n\t\t\treturn this.node.fileid\n\t\t},\n\n\t\tfileName(): string {\n\t\t\treturn this.node.basename\n\t\t},\n\n\t\tname() {\n\t\t\treturn t('files_reminders', 'Set reminder for \"{fileName}\"', { fileName: this.fileName })\n\t\t},\n\n\t\tlabel(): string {\n\t\t\treturn t('files_reminders', 'Set reminder at custom date & time')\n\t\t},\n\n\t\tclearAriaLabel(): string {\n\t\t\treturn t('files_reminders', 'Clear reminder')\n\t\t},\n\t},\n\n\tmethods: {\n\t\tt,\n\t\tgetDateString,\n\n\t\t/**\n\t\t * Open the modal to set a custom reminder\n\t\t * and reset the state.\n\t\t * @param node The node to set a reminder for\n\t\t */\n\t\topen(node: Node): void {\n\t\t\tconst dueDate = node.attributes['reminder-due-date'] ? new Date(node.attributes['reminder-due-date']) : null\n\n\t\t\tthis.node = node\n\t\t\tthis.hasDueDate = Boolean(dueDate)\n\t\t\tthis.isValid = true\n\t\t\tthis.opened = true\n\t\t\tthis.customDueDate = dueDate ?? getInitialCustomDueDate()\n\t\t\tthis.nowDate = new Date()\n\n\t\t\t// Focus the input and show the picker after the animation\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst input = document.getElementById('set-custom-reminder') as HTMLInputElement\n\t\t\t\tinput.focus()\n\t\t\t\tif (!this.hasDueDate) {\n\t\t\t\t\tinput.showPicker()\n\t\t\t\t}\n\t\t\t}, 300)\n\t\t},\n\n\t\tasync setCustom(): Promise<void> {\n\t\t\t// Handle input cleared or invalid date\n\t\t\tif (!(this.customDueDate instanceof Date) || isNaN(this.customDueDate)) {\n\t\t\t\tshowError(t('files_reminders', 'Please choose a valid date & time'))\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait setReminder(this.fileId, this.customDueDate)\n\t\t\t\tVue.set(this.node.attributes, 'reminder-due-date', this.customDueDate.toISOString())\n\t\t\t\temit('files:node:updated', this.node)\n\t\t\t\tshowSuccess(t('files_reminders', 'Reminder set for \"{fileName}\"', { fileName: this.fileName }))\n\t\t\t\tthis.onClose()\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error('Failed to set reminder', { error })\n\t\t\t\tshowError(t('files_reminders', 'Failed to set reminder'))\n\t\t\t}\n\t\t},\n\n\t\tasync clear(): Promise<void> {\n\t\t\ttry {\n\t\t\t\tawait clearReminder(this.fileId)\n\t\t\t\tVue.set(this.node.attributes, 'reminder-due-date', '')\n\t\t\t\temit('files:node:updated', this.node)\n\t\t\t\tshowSuccess(t('files_reminders', 'Reminder cleared for \"{fileName}\"', { fileName: this.fileName }))\n\t\t\t\tthis.onClose()\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error('Failed to clear reminder', { error })\n\t\t\t\tshowError(t('files_reminders', 'Failed to clear reminder'))\n\t\t\t}\n\t\t},\n\n\t\tonClose(): void {\n\t\t\tthis.opened = false\n\t\t\tthis.$emit('close')\n\t\t},\n\n\t\tonInput(): void {\n\t\t\tconst input = document.getElementById('set-custom-reminder') as HTMLInputElement\n\t\t\tthis.isValid = input.checkValidity()\n\t\t},\n\t},\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.custom-reminder-modal {\n\tmargin: 0 12px;\n}\n</style>\n","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport type { Node } from '@nextcloud/files'\nimport Vue from 'vue'\n\nimport SetCustomReminderModal from '../components/SetCustomReminderModal.vue'\n\nconst View = Vue.extend(SetCustomReminderModal)\nconst mount = document.createElement('div')\nmount.id = 'set-custom-reminder-modal'\ndocument.body.appendChild(mount)\n\n// Create a new Vue instance and mount it to our modal container\nconst CustomReminderModal = new View({\n\tname: 'SetCustomReminderModal',\n\tel: mount,\n})\n\nexport const pickCustomDate = (node: Node): Promise<void> => {\n\tCustomReminderModal.open(node)\n\n\t// Wait for the modal to close\n\treturn new Promise((resolve) => {\n\t\tCustomReminderModal.$once('close', resolve)\n\t})\n}\n","/**\n * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { FileAction, type Node } from '@nextcloud/files'\nimport { translate as t } from '@nextcloud/l10n'\n\nimport AlarmSvg from '@mdi/svg/svg/alarm.svg?raw'\n\nimport { pickCustomDate } from '../services/customPicker.ts'\nimport { getVerboseDateString } from '../shared/utils.ts'\n\nexport const action = new FileAction({\n\tid: 'reminder-status',\n\n\tinline: () => true,\n\n\tdisplayName: () => '',\n\n\ttitle: (nodes: Node[]) => {\n\t\tconst node = nodes.at(0)!\n\t\tconst dueDate = new Date(node.attributes['reminder-due-date'])\n\t\treturn `${t('files_reminders', 'Reminder set')} – ${getVerboseDateString(dueDate)}`\n\t},\n\n\ticonSvgInline: () => AlarmSvg,\n\n\tenabled: (nodes: Node[]) => {\n\t\t// Only allow on a single node\n\t\tif (nodes.length !== 1) {\n\t\t\treturn false\n\t\t}\n\t\tconst node = nodes.at(0)!\n\t\tconst dueDate = node.attributes['reminder-due-date']\n\t\treturn Boolean(dueDate)\n\t},\n\n\tasync exec(node: Node) {\n\t\tpickCustomDate(node)\n\t\treturn null\n\t},\n\n\torder: -15,\n})\n","/**\n * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport Vue from 'vue'\nimport { FileAction, type Node } from '@nextcloud/files'\nimport { emit } from '@nextcloud/event-bus'\nimport { translate as t } from '@nextcloud/l10n'\n\nimport AlarmOffSvg from '@mdi/svg/svg/alarm-off.svg?raw'\n\nimport { clearReminder } from '../services/reminderService.ts'\nimport { getVerboseDateString } from '../shared/utils.ts'\n\nexport const action = new FileAction({\n\tid: 'clear-reminder',\n\n\tdisplayName: () => t('files_reminders', 'Clear reminder'),\n\n\ttitle: (nodes: Node[]) => {\n\t\tconst node = nodes.at(0)!\n\t\tconst dueDate = new Date(node.attributes['reminder-due-date'])\n\t\treturn `${t('files_reminders', 'Clear reminder')} – ${getVerboseDateString(dueDate)}`\n\t},\n\n\ticonSvgInline: () => AlarmOffSvg,\n\n\tenabled: (nodes: Node[]) => {\n\t\t// Only allow on a single node\n\t\tif (nodes.length !== 1) {\n\t\t\treturn false\n\t\t}\n\t\tconst node = nodes.at(0)!\n\t\tconst dueDate = node.attributes['reminder-due-date']\n\t\treturn Boolean(dueDate)\n\t},\n\n\tasync exec(node: Node) {\n\t\tif (node.fileid) {\n\t\t\ttry {\n\t\t\t\tawait clearReminder(node.fileid)\n\t\t\t\tVue.set(node.attributes, 'reminder-due-date', '')\n\t\t\t\temit('files:node:updated', node)\n\t\t\t\treturn true\n\t\t\t} catch (error) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn null\n\t},\n\n\torder: 19,\n})\n","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport type { Node, View } from '@nextcloud/files'\n\nimport { FileAction } from '@nextcloud/files'\nimport { translate as t } from '@nextcloud/l10n'\nimport AlarmSvg from '@mdi/svg/svg/alarm.svg?raw'\n\nexport const SET_REMINDER_MENU_ID = 'set-reminder-menu'\n\nexport const action = new FileAction({\n\tid: SET_REMINDER_MENU_ID,\n\tdisplayName: () => t('files_reminders', 'Set reminder'),\n\ticonSvgInline: () => AlarmSvg,\n\n\tenabled: (_nodes: Node[], view: View) => {\n\t\treturn view.id !== 'trashbin'\n\t},\n\n\tasync exec() {\n\t\treturn null\n\t},\n\n\torder: 20,\n})\n","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport Vue from 'vue'\nimport type { Node, View } from '@nextcloud/files'\n\nimport { FileAction } from '@nextcloud/files'\nimport { emit } from '@nextcloud/event-bus'\nimport { showError, showSuccess } from '@nextcloud/dialogs'\nimport { translate as t } from '@nextcloud/l10n'\n\nimport { DateTimePreset, getDateString, getDateTime, getVerboseDateString } from '../shared/utils'\nimport { logger } from '../shared/logger'\nimport { SET_REMINDER_MENU_ID } from './setReminderMenuAction'\nimport { setReminder } from '../services/reminderService'\nimport './setReminderSuggestionActions.scss'\n\ninterface ReminderOption {\n\tdateTimePreset: DateTimePreset\n\tlabel: string\n\tariaLabel: string\n\tdateString?: string\n\tverboseDateString?: string\n\taction?: () => Promise<void>\n}\n\nconst laterToday: ReminderOption = {\n\tdateTimePreset: DateTimePreset.LaterToday,\n\tlabel: t('files_reminders', 'Later today'),\n\tariaLabel: t('files_reminders', 'Set reminder for later today'),\n\tdateString: '',\n\tverboseDateString: ''\n}\n\nconst tomorrow: ReminderOption = {\n\tdateTimePreset: DateTimePreset.Tomorrow,\n\tlabel: t('files_reminders', 'Tomorrow'),\n\tariaLabel: t('files_reminders', 'Set reminder for tomorrow'),\n\tdateString: '',\n\tverboseDateString: ''\n}\n\nconst thisWeekend: ReminderOption = {\n\tdateTimePreset: DateTimePreset.ThisWeekend,\n\tlabel: t('files_reminders', 'This weekend'),\n\tariaLabel: t('files_reminders', 'Set reminder for this weekend'),\n\tdateString: '',\n\tverboseDateString: ''\n}\n\nconst nextWeek: ReminderOption = {\n\tdateTimePreset: DateTimePreset.NextWeek,\n\tlabel: t('files_reminders', 'Next week'),\n\tariaLabel: t('files_reminders', 'Set reminder for next week'),\n\tdateString: '',\n\tverboseDateString: ''\n}\n\n/**\n * Generate a file action for the given option\n *\n * @param option The option to generate the action for\n * @return The file action or null if the option should not be shown\n */\nconst generateFileAction = (option: ReminderOption): FileAction|null => {\n\n\treturn new FileAction({\n\t\tid: `set-reminder-${option.dateTimePreset}`,\n\t\tdisplayName: () => `${option.label} – ${option.dateString}`,\n\t\ttitle: () => `${option.ariaLabel} – ${option.verboseDateString}`,\n\n\t\t// Empty svg to hide the icon\n\t\ticonSvgInline: () => '<svg></svg>',\n\n\t\tenabled: (_nodes: Node[], view: View) => {\n\t\t\tif (view.id === 'trashbin') {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\treturn Boolean(getDateTime(option.dateTimePreset))\n\t\t},\n\n\t\tparent: SET_REMINDER_MENU_ID,\n\n\t\tasync exec(node: Node) {\n\t\t\t// Can't really happen, but just in case™\n\t\t\tif (!node.fileid) {\n\t\t\t\tlogger.error('Failed to set reminder, missing file id')\n\t\t\t\tshowError(t('files_reminders', 'Failed to set reminder'))\n\t\t\t\treturn null\n\t\t\t}\n\n\t\t\t// Set the reminder\n\t\t\ttry {\n\t\t\t\tconst dateTime = getDateTime(option.dateTimePreset)!\n\t\t\t\tawait setReminder(node.fileid, dateTime)\n\t\t\t\tVue.set(node.attributes, 'reminder-due-date', dateTime.toISOString())\n\t\t\t\temit('files:node:updated', node)\n\t\t\t\tshowSuccess(t('files_reminders', 'Reminder set for \"{fileName}\"', { fileName: node.basename }))\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error('Failed to set reminder', { error })\n\t\t\t\tshowError(t('files_reminders', 'Failed to set reminder'))\n\t\t\t}\n\t\t\t// Silent success as we display our own notification\n\t\t\treturn null\n\t\t},\n\n\t\torder: 21,\n\t})\n}\n\n[laterToday, tomorrow, thisWeekend, nextWeek].forEach((option) => {\n\t// Generate the initial date string\n\tconst dateTime = getDateTime(option.dateTimePreset)\n\tif (!dateTime) {\n\t\treturn\n\t}\n\toption.dateString = getDateString(dateTime)\n\toption.verboseDateString = getVerboseDateString(dateTime)\n\n\t// Update the date string every 30 minutes\n\tsetInterval(() => {\n\t\tconst dateTime = getDateTime(option.dateTimePreset)\n\t\tif (!dateTime) {\n\t\t\treturn\n\t\t}\n\n\t\t// update the submenu remind options strings\n\t\toption.dateString = getDateString(dateTime)\n\t\toption.verboseDateString = getVerboseDateString(dateTime)\n\t}, 1000 * 30 * 60)\n})\n\n// Generate the default preset actions\nexport const actions = [laterToday, tomorrow, thisWeekend, nextWeek]\n\t.map(generateFileAction) as FileAction[]\n","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport type { Node, View } from '@nextcloud/files'\n\nimport { FileAction } from '@nextcloud/files'\nimport { translate as t } from '@nextcloud/l10n'\nimport CalendarClockSvg from '@mdi/svg/svg/calendar-clock.svg?raw'\n\nimport { SET_REMINDER_MENU_ID } from './setReminderMenuAction'\nimport { pickCustomDate } from '../services/customPicker'\n\nexport const action = new FileAction({\n\tid: 'set-reminder-custom',\n\tdisplayName: () => t('files_reminders', 'Set custom reminder'),\n\ttitle: () => t('files_reminders', 'Set reminder at custom date & time'),\n\ticonSvgInline: () => CalendarClockSvg,\n\n\tenabled: (_nodes: Node[], view: View) => {\n\t\treturn view.id !== 'trashbin'\n\t},\n\n\tparent: SET_REMINDER_MENU_ID,\n\n\tasync exec(file: Node) {\n\t\tpickCustomDate(file)\n\t\treturn null\n\t},\n\n\t// After presets\n\torder: 22,\n})\n","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { registerDavProperty, registerFileAction } from '@nextcloud/files'\nimport { action as statusAction } from './actions/reminderStatusAction'\nimport { action as clearAction } from './actions/clearReminderAction'\nimport { action as menuAction } from './actions/setReminderMenuAction'\nimport { actions as suggestionActions } from './actions/setReminderSuggestionActions'\nimport { action as customAction } from './actions/setReminderCustomAction'\n\nregisterDavProperty('nc:reminder-due-date', { nc: 'http://nextcloud.org/ns' })\n\nregisterFileAction(statusAction)\nregisterFileAction(clearAction)\nregisterFileAction(menuAction)\nregisterFileAction(customAction)\nsuggestionActions.forEach((action) => registerFileAction(action))\n"],"names":["DateTimePreset","getFirstWorkdayOfWeek","now","getWeek","date","firstDayOfYear","daysFromFirstDay","isSameWeek","a","b","isSameDate","getDateTime","dateTime","evening","cutoff","day","today","saturday","firstWorkdayOfWeek","workday","getInitialCustomDueDate","dueDate","getDateString","formatOptions","getCanonicalLocale","getVerboseDateString","logger","getLoggerBuilder","setReminder","fileId","url","generateOcsUrl","axios","clearReminder","_sfc_main","Vue","NcButton","NcDateTime","NcDateTimePickerNative","NcDialog","NcNoteCard","t","node","input","showError","emit","showSuccess","error","View","SetCustomReminderModal","mount","CustomReminderModal","pickCustomDate","resolve","action","FileAction","nodes","AlarmSvg","AlarmOffSvg","SET_REMINDER_MENU_ID","_nodes","view","laterToday","tomorrow","thisWeekend","nextWeek","generateFileAction","option","actions","CalendarClockSvg","file","registerDavProperty","registerFileAction","statusAction","clearAction","menuAction","customAction","suggestionActions"],"mappings":"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"}