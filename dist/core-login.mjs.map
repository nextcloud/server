{"version":3,"file":"core-login.mjs","sources":["../core/src/mixins/auth.js","../core/src/components/login/LoginButton.vue","../core/src/components/login/LoginForm.vue","../core/src/services/WebAuthnAuthenticationService.ts","../core/src/components/login/PasswordLessLoginForm.vue","../core/src/components/login/ResetPassword.vue","../core/src/components/login/UpdatePassword.vue","../core/src/views/Login.vue","../core/src/login.js"],"sourcesContent":["/**\n * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nexport default {\n\n\tcomputed: {\n\t\tuserNameInputLengthIs255() {\n\t\t\treturn this.user.length >= 255\n\t\t},\n\t\tuserInputHelperText() {\n\t\t\tif (this.userNameInputLengthIs255) {\n\t\t\t\treturn t('core', 'Email length is at max (255)')\n\t\t\t}\n\t\t\treturn undefined\n\t\t},\n\t},\n}\n","<!--\n  - SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n\n<template>\n\t<NcButton type=\"primary\"\n\t\tnative-type=\"submit\"\n\t\t:wide=\"true\"\n\t\t:disabled=\"loading\"\n\t\t@click=\"$emit('click')\">\n\t\t{{ !loading ? value : valueLoading }}\n\t\t<template #icon>\n\t\t\t<div v-if=\"loading\" class=\"submit-wrapper__icon icon-loading-small-dark\" />\n\t\t\t<ArrowRight v-else class=\"submit-wrapper__icon\" />\n\t\t</template>\n\t</NcButton>\n</template>\n\n<script>\nimport { translate as t } from '@nextcloud/l10n'\n\nimport NcButton from '@nextcloud/vue/dist/Components/NcButton.js'\nimport ArrowRight from 'vue-material-design-icons/ArrowRight.vue'\n\nexport default {\n\tname: 'LoginButton',\n\tcomponents: {\n\t\tArrowRight,\n\t\tNcButton,\n\t},\n\tprops: {\n\t\tvalue: {\n\t\t\ttype: String,\n\t\t\tdefault: t('core', 'Log in'),\n\t\t},\n\t\tvalueLoading: {\n\t\t\ttype: String,\n\t\t\tdefault: t('core', 'Logging in â€¦'),\n\t\t},\n\t\tloading: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true,\n\t\t},\n\t\tinvertedColors: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.button-vue {\n\tmargin-top: .5rem;\n}\n</style>\n","<!--\n  - SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n\n<template>\n\t<form ref=\"loginForm\"\n\t\tclass=\"login-form\"\n\t\tmethod=\"post\"\n\t\tname=\"login\"\n\t\t:action=\"loginActionUrl\"\n\t\t@submit=\"submit\">\n\t\t<fieldset class=\"login-form__fieldset\" data-login-form>\n\t\t\t<NcNoteCard v-if=\"apacheAuthFailed\"\n\t\t\t\t:title=\"t('core', 'Server side authentication failed!')\"\n\t\t\t\ttype=\"warning\">\n\t\t\t\t{{ t('core', 'Please contact your administrator.') }}\n\t\t\t</NcNoteCard>\n\t\t\t<NcNoteCard v-if=\"csrfCheckFailed\"\n\t\t\t\t:heading=\"t('core', 'Temporary error')\"\n\t\t\t\ttype=\"error\">\n\t\t\t\t{{ t('core', 'Please try again.') }}\n\t\t\t</NcNoteCard>\n\t\t\t<NcNoteCard v-if=\"messages.length > 0\">\n\t\t\t\t<div v-for=\"(message, index) in messages\"\n\t\t\t\t\t:key=\"index\">\n\t\t\t\t\t{{ message }}<br>\n\t\t\t\t</div>\n\t\t\t</NcNoteCard>\n\t\t\t<NcNoteCard v-if=\"internalException\"\n\t\t\t\t:class=\"t('core', 'An internal error occurred.')\"\n\t\t\t\ttype=\"warning\">\n\t\t\t\t{{ t('core', 'Please try again or contact your administrator.') }}\n\t\t\t</NcNoteCard>\n\t\t\t<div id=\"message\"\n\t\t\t\tclass=\"hidden\">\n\t\t\t\t<img class=\"float-spinner\"\n\t\t\t\t\talt=\"\"\n\t\t\t\t\t:src=\"loadingIcon\">\n\t\t\t\t<span id=\"messageText\" />\n\t\t\t\t<!-- the following div ensures that the spinner is always inside the #message div -->\n\t\t\t\t<div style=\"clear: both;\" />\n\t\t\t</div>\n\t\t\t<h2 class=\"login-form__headline\" data-login-form-headline>\n\t\t\t\t{{ headlineText }}\n\t\t\t</h2>\n\t\t\t<NcTextField id=\"user\"\n\t\t\t\tref=\"user\"\n\t\t\t\t:label=\"loginText\"\n\t\t\t\tname=\"user\"\n\t\t\t\t:maxlength=\"255\"\n\t\t\t\t:value.sync=\"user\"\n\t\t\t\t:class=\"{shake: invalidPassword}\"\n\t\t\t\tautocapitalize=\"none\"\n\t\t\t\t:spellchecking=\"false\"\n\t\t\t\t:autocomplete=\"autoCompleteAllowed ? 'username' : 'off'\"\n\t\t\t\trequired\n\t\t\t\t:error=\"userNameInputLengthIs255\"\n\t\t\t\t:helper-text=\"userInputHelperText\"\n\t\t\t\tdata-login-form-input-user\n\t\t\t\t@change=\"updateUsername\" />\n\n\t\t\t<NcPasswordField id=\"password\"\n\t\t\t\tref=\"password\"\n\t\t\t\tname=\"password\"\n\t\t\t\t:class=\"{shake: invalidPassword}\"\n\t\t\t\t:value.sync=\"password\"\n\t\t\t\t:spellchecking=\"false\"\n\t\t\t\tautocapitalize=\"none\"\n\t\t\t\t:autocomplete=\"autoCompleteAllowed ? 'current-password' : 'off'\"\n\t\t\t\t:label=\"t('core', 'Password')\"\n\t\t\t\t:helper-text=\"errorLabel\"\n\t\t\t\t:error=\"isError\"\n\t\t\t\tdata-login-form-input-password\n\t\t\t\trequired />\n\n\t\t\t<LoginButton data-login-form-submit :loading=\"loading\" />\n\n\t\t\t<input v-if=\"redirectUrl\"\n\t\t\t\ttype=\"hidden\"\n\t\t\t\tname=\"redirect_url\"\n\t\t\t\t:value=\"redirectUrl\">\n\t\t\t<input type=\"hidden\"\n\t\t\t\tname=\"timezone\"\n\t\t\t\t:value=\"timezone\">\n\t\t\t<input type=\"hidden\"\n\t\t\t\tname=\"timezone_offset\"\n\t\t\t\t:value=\"timezoneOffset\">\n\t\t\t<input type=\"hidden\"\n\t\t\t\tname=\"requesttoken\"\n\t\t\t\t:value=\"requestToken\">\n\t\t\t<input v-if=\"directLogin\"\n\t\t\t\ttype=\"hidden\"\n\t\t\t\tname=\"direct\"\n\t\t\t\tvalue=\"1\">\n\t\t</fieldset>\n\t</form>\n</template>\n\n<script>\nimport { loadState } from '@nextcloud/initial-state'\nimport { translate as t } from '@nextcloud/l10n'\nimport { generateUrl, imagePath } from '@nextcloud/router'\nimport { debounce } from 'debounce'\n\nimport NcPasswordField from '@nextcloud/vue/dist/Components/NcPasswordField.js'\nimport NcTextField from '@nextcloud/vue/dist/Components/NcTextField.js'\nimport NcNoteCard from '@nextcloud/vue/dist/Components/NcNoteCard.js'\n\nimport AuthMixin from '../../mixins/auth.js'\nimport LoginButton from './LoginButton.vue'\n\nexport default {\n\tname: 'LoginForm',\n\n\tcomponents: {\n\t\tLoginButton,\n\t\tNcPasswordField,\n\t\tNcTextField,\n\t\tNcNoteCard,\n\t},\n\n\tmixins: [AuthMixin],\n\n\tprops: {\n\t\tusername: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t\tredirectUrl: {\n\t\t\ttype: [String, Boolean],\n\t\t\tdefault: false,\n\t\t},\n\t\terrors: {\n\t\t\ttype: Array,\n\t\t\tdefault: () => [],\n\t\t},\n\t\tmessages: {\n\t\t\ttype: Array,\n\t\t\tdefault: () => [],\n\t\t},\n\t\tthrottleDelay: {\n\t\t\ttype: Number,\n\t\t\tdefault: 0,\n\t\t},\n\t\tautoCompleteAllowed: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t},\n\t\tdirectLogin: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t\temailStates: {\n\t\t\ttype: Array,\n\t\t\tdefault() {\n\t\t\t\treturn []\n\t\t\t},\n\t\t},\n\t},\n\n\tsetup() {\n\t\t// non reactive props\n\t\treturn {\n\t\t\tt,\n\n\t\t\t// Disable escape and sanitize to prevent special characters to be html escaped\n\t\t\t// For example \"J's cloud\" would be escaped to \"J&#39; cloud\". But we do not need escaping as Vue does this in `v-text` automatically\n\t\t\theadlineText: t('core', 'Log in to {productName}', { productName: OC.theme.name }, undefined, { sanitize: false, escape: false }),\n\n\t\t\tloginTimeout: loadState('core', 'loginTimeout', 300),\n\t\t\trequestToken: window.OC.requestToken,\n\t\t\ttimezone: (new Intl.DateTimeFormat())?.resolvedOptions()?.timeZone,\n\t\t\ttimezoneOffset: (-new Date().getTimezoneOffset() / 60),\n\t\t}\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tloading: false,\n\t\t\tuser: '',\n\t\t\tpassword: '',\n\t\t}\n\t},\n\n\tcomputed: {\n\t\t/**\n\t\t * Reset the login form after a long idle time (debounced)\n\t\t */\n\t\tresetFormTimeout() {\n\t\t\t// Infinite timeout, do nothing\n\t\t\tif (this.loginTimeout <= 0) {\n\t\t\t\treturn () => {}\n\t\t\t}\n\t\t\t// Debounce for given timeout (in seconds so convert to milli seconds)\n\t\t\treturn debounce(this.handleResetForm, this.loginTimeout * 1000)\n\t\t},\n\n\t\tisError() {\n\t\t\treturn this.invalidPassword || this.userDisabled\n\t\t\t\t|| this.throttleDelay > 5000\n\t\t},\n\t\terrorLabel() {\n\t\t\tif (this.invalidPassword) {\n\t\t\t\treturn t('core', 'Wrong login or password.')\n\t\t\t}\n\t\t\tif (this.userDisabled) {\n\t\t\t\treturn t('core', 'This account is disabled')\n\t\t\t}\n\t\t\tif (this.throttleDelay > 5000) {\n\t\t\t\treturn t('core', 'We have detected multiple invalid login attempts from your IP. Therefore your next login is throttled up to 30 seconds.')\n\t\t\t}\n\t\t\treturn undefined\n\t\t},\n\t\tapacheAuthFailed() {\n\t\t\treturn this.errors.indexOf('apacheAuthFailed') !== -1\n\t\t},\n\t\tcsrfCheckFailed() {\n\t\t\treturn this.errors.indexOf('csrfCheckFailed') !== -1\n\t\t},\n\t\tinternalException() {\n\t\t\treturn this.errors.indexOf('internalexception') !== -1\n\t\t},\n\t\tinvalidPassword() {\n\t\t\treturn this.errors.indexOf('invalidpassword') !== -1\n\t\t},\n\t\tuserDisabled() {\n\t\t\treturn this.errors.indexOf('userdisabled') !== -1\n\t\t},\n\t\tloadingIcon() {\n\t\t\treturn imagePath('core', 'loading-dark.gif')\n\t\t},\n\t\tloginActionUrl() {\n\t\t\treturn generateUrl('login')\n\t\t},\n\t\temailEnabled() {\n\t\t\treturn this.emailStates ? this.emailStates.every((state) => state === '1') : 1\n\t\t},\n\t\tloginText() {\n\t\t\tif (this.emailEnabled) {\n\t\t\t\treturn t('core', 'Account name or email')\n\t\t\t}\n\t\t\treturn t('core', 'Account name')\n\t\t},\n\t},\n\n\twatch: {\n\t\t/**\n\t\t * Reset form reset after the password was changed\n\t\t */\n\t\tpassword() {\n\t\t\tthis.resetFormTimeout()\n\t\t},\n\t},\n\n\tmounted() {\n\t\tif (this.username === '') {\n\t\t\tthis.$refs.user.$refs.inputField.$refs.input.focus()\n\t\t} else {\n\t\t\tthis.user = this.username\n\t\t\tthis.$refs.password.$refs.inputField.$refs.input.focus()\n\t\t}\n\t},\n\n\tmethods: {\n\t\t/**\n\t\t * Handle reset of the login form after a long IDLE time\n\t\t * This is recommended security behavior to prevent password leak on public devices\n\t\t */\n\t\thandleResetForm() {\n\t\t\tthis.password = ''\n\t\t},\n\n\t\tupdateUsername() {\n\t\t\tthis.$emit('update:username', this.user)\n\t\t},\n\t\tsubmit(event) {\n\t\t\tif (this.loading) {\n\t\t\t\t// Prevent the form from being submitted twice\n\t\t\t\tevent.preventDefault()\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tthis.loading = true\n\t\t\tthis.$emit('submit')\n\t\t},\n\t},\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.login-form {\n\ttext-align: left;\n\tfont-size: 1rem;\n\n\t&__fieldset {\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: .5rem;\n\t}\n\n\t&__headline {\n\t\ttext-align: center;\n\t\toverflow-wrap: anywhere;\n\t}\n}\n</style>\n","/**\n * SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport type { AuthenticationResponseJSON, PublicKeyCredentialRequestOptionsJSON } from '@simplewebauthn/types'\n\nimport { startAuthentication as startWebauthnAuthentication } from '@simplewebauthn/browser'\nimport { generateUrl } from '@nextcloud/router'\n\nimport Axios from '@nextcloud/axios'\nimport logger from '../logger'\n\nexport class NoValidCredentials extends Error {}\n\n/**\n * Start webautn authentication\n * This loads the challenge, connects to the authenticator and returns the repose that needs to be sent to the server.\n *\n * @param loginName Name to login\n */\nexport async function startAuthentication(loginName: string) {\n\tconst url = generateUrl('/login/webauthn/start')\n\n\tconst { data } = await Axios.post<PublicKeyCredentialRequestOptionsJSON>(url, { loginName })\n\tif (!data.allowCredentials || data.allowCredentials.length === 0) {\n\t\tlogger.error('No valid credentials returned for webauthn')\n\t\tthrow new NoValidCredentials()\n\t}\n\treturn await startWebauthnAuthentication(data)\n}\n\n/**\n * Verify webauthn authentication\n * @param authData The authentication data to sent to the server\n */\nexport async function finishAuthentication(authData: AuthenticationResponseJSON) {\n\tconst url = generateUrl('/login/webauthn/finish')\n\n\tconst { data } = await Axios.post(url, { data: JSON.stringify(authData) })\n\treturn data\n}\n","<!--\n - SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n<template>\n\t<form v-if=\"(isHttps || isLocalhost) && supportsWebauthn\"\n\t\tref=\"loginForm\"\n\t\tmethod=\"post\"\n\t\tname=\"login\"\n\t\t@submit.prevent=\"submit\">\n\t\t<h2>{{ t('core', 'Log in with a device') }}</h2>\n\t\t<fieldset>\n\t\t\t<NcTextField required\n\t\t\t\t:value=\"user\"\n\t\t\t\t:autocomplete=\"autoCompleteAllowed ? 'on' : 'off'\"\n\t\t\t\t:error=\"!validCredentials\"\n\t\t\t\t:label=\"t('core', 'Login or email')\"\n\t\t\t\t:placeholder=\"t('core', 'Login or email')\"\n\t\t\t\t:helper-text=\"!validCredentials ? t('core', 'Your account is not setup for passwordless login.') : ''\"\n\t\t\t\t@update:value=\"changeUsername\" />\n\n\t\t\t<LoginButton v-if=\"validCredentials\"\n\t\t\t\t:loading=\"loading\"\n\t\t\t\t@click=\"authenticate\" />\n\t\t</fieldset>\n\t</form>\n\t<div v-else-if=\"!supportsWebauthn\" class=\"update\">\n\t\t<InformationIcon size=\"70\" />\n\t\t<h2>{{ t('core', 'Browser not supported') }}</h2>\n\t\t<p class=\"infogroup\">\n\t\t\t{{ t('core', 'Passwordless authentication is not supported in your browser.') }}\n\t\t</p>\n\t</div>\n\t<div v-else-if=\"!isHttps && !isLocalhost\" class=\"update\">\n\t\t<LockOpenIcon size=\"70\" />\n\t\t<h2>{{ t('core', 'Your connection is not secure') }}</h2>\n\t\t<p class=\"infogroup\">\n\t\t\t{{ t('core', 'Passwordless authentication is only available over a secure connection.') }}\n\t\t</p>\n\t</div>\n</template>\n\n<script>\nimport { browserSupportsWebAuthn } from '@simplewebauthn/browser'\nimport {\n\tstartAuthentication,\n\tfinishAuthentication,\n} from '../../services/WebAuthnAuthenticationService.ts'\nimport LoginButton from './LoginButton.vue'\nimport InformationIcon from 'vue-material-design-icons/Information.vue'\nimport LockOpenIcon from 'vue-material-design-icons/LockOpen.vue'\nimport NcTextField from '@nextcloud/vue/dist/Components/NcTextField.js'\nimport logger from '../../logger'\n\nexport default {\n\tname: 'PasswordLessLoginForm',\n\tcomponents: {\n\t\tLoginButton,\n\t\tInformationIcon,\n\t\tLockOpenIcon,\n\t\tNcTextField,\n\t},\n\tprops: {\n\t\tusername: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t\tredirectUrl: {\n\t\t\ttype: [String, Boolean],\n\t\t\tdefault: false,\n\t\t},\n\t\tautoCompleteAllowed: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t},\n\t\tisHttps: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t\tisLocalhost: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n\n\tsetup() {\n\t\treturn {\n\t\t\tsupportsWebauthn: browserSupportsWebAuthn(),\n\t\t}\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tuser: this.username,\n\t\t\tloading: false,\n\t\t\tvalidCredentials: true,\n\t\t}\n\t},\n\tmethods: {\n\t\tasync authenticate() {\n\t\t\t// check required fields\n\t\t\tif (!this.$refs.loginForm.checkValidity()) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconsole.debug('passwordless login initiated')\n\n\t\t\ttry {\n\t\t\t\tconst params = await startAuthentication(this.user)\n\t\t\t\tawait this.completeAuthentication(params)\n\t\t\t} catch (error) {\n\t\t\t\tif (error instanceof NoValidCredentials) {\n\t\t\t\t\tthis.validCredentials = false\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tlogger.debug(error)\n\t\t\t}\n\t\t},\n\t\tchangeUsername(username) {\n\t\t\tthis.user = username\n\t\t\tthis.$emit('update:username', this.user)\n\t\t},\n\t\tcompleteAuthentication(challenge) {\n\t\t\tconst redirectUrl = this.redirectUrl\n\n\t\t\treturn finishAuthentication(challenge)\n\t\t\t\t.then(({ defaultRedirectUrl }) => {\n\t\t\t\t\tconsole.debug('Logged in redirecting')\n\t\t\t\t\t// Redirect url might be false so || should be used instead of ??.\n\t\t\t\t\twindow.location.href = redirectUrl || defaultRedirectUrl\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tconsole.debug('GOT AN ERROR WHILE SUBMITTING CHALLENGE!')\n\t\t\t\t\tconsole.debug(error) // Example: timeout, interaction refused...\n\t\t\t\t})\n\t\t},\n\t\tsubmit() {\n\t\t\t// noop\n\t\t},\n\t},\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\tfieldset {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: 0.5rem;\n\n\t\t:deep(label) {\n\t\t\ttext-align: initial;\n\t\t}\n\t}\n\n\t.update {\n\t\tmargin: 0 auto;\n\t}\n</style>\n","<!--\n  - SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n\n<template>\n\t<form class=\"login-form\" @submit.prevent=\"submit\">\n\t\t<fieldset class=\"login-form__fieldset\">\n\t\t\t<NcTextField id=\"user\"\n\t\t\t\t:value.sync=\"user\"\n\t\t\t\tname=\"user\"\n\t\t\t\t:maxlength=\"255\"\n\t\t\t\tautocapitalize=\"off\"\n\t\t\t\t:label=\"t('core', 'Login or email')\"\n\t\t\t\t:error=\"userNameInputLengthIs255\"\n\t\t\t\t:helper-text=\"userInputHelperText\"\n\t\t\t\trequired\n\t\t\t\t@change=\"updateUsername\" />\n\t\t\t<LoginButton :value=\"t('core', 'Reset password')\" />\n\n\t\t\t<NcNoteCard v-if=\"message === 'send-success'\"\n\t\t\t\ttype=\"success\">\n\t\t\t\t{{ t('core', 'If this account exists, a password reset message has been sent to its email address. If you do not receive it, verify your email address and/or Login, check your spam/junk folders or ask your local administration for help.') }}\n\t\t\t</NcNoteCard>\n\t\t\t<NcNoteCard v-else-if=\"message === 'send-error'\"\n\t\t\t\ttype=\"error\">\n\t\t\t\t{{ t('core', 'Couldn\\'t send reset email. Please contact your administrator.') }}\n\t\t\t</NcNoteCard>\n\t\t\t<NcNoteCard v-else-if=\"message === 'reset-error'\"\n\t\t\t\ttype=\"error\">\n\t\t\t\t{{ t('core', 'Password cannot be changed. Please contact your administrator.') }}\n\t\t\t</NcNoteCard>\n\n\t\t\t<a class=\"login-form__link\"\n\t\t\t\thref=\"#\"\n\t\t\t\t@click.prevent=\"$emit('abort')\">\n\t\t\t\t{{ t('core', 'Back to login') }}\n\t\t\t</a>\n\t\t</fieldset>\n\t</form>\n</template>\n\n<script>\nimport axios from '@nextcloud/axios'\nimport { generateUrl } from '@nextcloud/router'\nimport LoginButton from './LoginButton.vue'\nimport NcTextField from '@nextcloud/vue/dist/Components/NcTextField.js'\nimport NcNoteCard from '@nextcloud/vue/dist/Components/NcNoteCard.js'\n\nimport AuthMixin from '../../mixins/auth.js'\n\nexport default {\n\tname: 'ResetPassword',\n\tcomponents: {\n\t\tLoginButton,\n\t\tNcNoteCard,\n\t\tNcTextField,\n\t},\n\tmixins: [AuthMixin],\n\tprops: {\n\t\tusername: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tresetPasswordLink: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\terror: false,\n\t\t\tloading: false,\n\t\t\tmessage: undefined,\n\t\t\tuser: this.username,\n\t\t}\n\t},\n\twatch: {\n\t\tusername(value) {\n\t\t\tthis.user = value\n\t\t},\n\t},\n\tmethods: {\n\t\tupdateUsername() {\n\t\t\tthis.$emit('update:username', this.user)\n\t\t},\n\t\tsubmit() {\n\t\t\tthis.loading = true\n\t\t\tthis.error = false\n\t\t\tthis.message = ''\n\t\t\tconst url = generateUrl('/lostpassword/email')\n\n\t\t\tconst data = {\n\t\t\t\tuser: this.user,\n\t\t\t}\n\n\t\t\treturn axios.post(url, data)\n\t\t\t\t.then(resp => resp.data)\n\t\t\t\t.then(data => {\n\t\t\t\t\tif (data.status !== 'success') {\n\t\t\t\t\t\tthrow new Error(`got status ${data.status}`)\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.message = 'send-success'\n\t\t\t\t})\n\t\t\t\t.catch(e => {\n\t\t\t\t\tconsole.error('could not send reset email request', e)\n\n\t\t\t\t\tthis.error = true\n\t\t\t\t\tthis.message = 'send-error'\n\t\t\t\t})\n\t\t\t\t.then(() => { this.loading = false })\n\t\t},\n\t},\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.login-form {\n\ttext-align: left;\n\tfont-size: 1rem;\n\n\t&__fieldset {\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: .5rem;\n\t}\n\n\t&__link {\n\t\tdisplay: block;\n\t\tfont-weight: normal !important;\n\t\tpadding-bottom: 1rem;\n\t\tcursor: pointer;\n\t\tfont-size: var(--default-font-size);\n\t\ttext-align: center;\n\t\tpadding: .5rem 1rem 1rem 1rem;\n\t}\n}\n</style>\n","<!--\n  - SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n\n<template>\n\t<form @submit.prevent=\"submit\">\n\t\t<fieldset>\n\t\t\t<p>\n\t\t\t\t<label for=\"password\" class=\"infield\">{{ t('core', 'New password') }}</label>\n\t\t\t\t<input id=\"password\"\n\t\t\t\t\tv-model=\"password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tautocomplete=\"new-password\"\n\t\t\t\t\tautocapitalize=\"none\"\n\t\t\t\t\tspellcheck=\"false\"\n\t\t\t\t\trequired\n\t\t\t\t\t:placeholder=\"t('core', 'New password')\">\n\t\t\t</p>\n\n\t\t\t<div v-if=\"encrypted\" class=\"update\">\n\t\t\t\t<p>\n\t\t\t\t\t{{ t('core', 'Your files are encrypted. There will be no way to get your data back after your password is reset. If you are not sure what to do, please contact your administrator before you continue. Do you really want to continue?') }}\n\t\t\t\t</p>\n\t\t\t\t<input id=\"encrypted-continue\"\n\t\t\t\t\tv-model=\"proceed\"\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tclass=\"checkbox\">\n\t\t\t\t<label for=\"encrypted-continue\">\n\t\t\t\t\t{{ t('core', 'I know what I\\'m doing') }}\n\t\t\t\t</label>\n\t\t\t</div>\n\n\t\t\t<LoginButton :loading=\"loading\"\n\t\t\t\t:value=\"t('core', 'Reset password')\"\n\t\t\t\t:value-loading=\"t('core', 'Resetting password')\" />\n\n\t\t\t<p v-if=\"error && message\" :class=\"{warning: error}\">\n\t\t\t\t{{ message }}\n\t\t\t</p>\n\t\t</fieldset>\n\t</form>\n</template>\n\n<script>\nimport Axios from '@nextcloud/axios'\nimport LoginButton from './LoginButton.vue'\n\nexport default {\n\tname: 'UpdatePassword',\n\tcomponents: {\n\t\tLoginButton,\n\t},\n\tprops: {\n\t\tusername: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tresetPasswordTarget: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\terror: false,\n\t\t\tloading: false,\n\t\t\tmessage: undefined,\n\t\t\tuser: this.username,\n\t\t\tpassword: '',\n\t\t\tencrypted: false,\n\t\t\tproceed: false,\n\t\t}\n\t},\n\twatch: {\n\t\tusername(value) {\n\t\t\tthis.user = value\n\t\t},\n\t},\n\tmethods: {\n\t\tasync submit() {\n\t\t\tthis.loading = true\n\t\t\tthis.error = false\n\t\t\tthis.message = ''\n\n\t\t\ttry {\n\t\t\t\tconst { data } = await Axios.post(this.resetPasswordTarget, {\n\t\t\t\t\tpassword: this.password,\n\t\t\t\t\tproceed: this.proceed,\n\t\t\t\t})\n\t\t\t\tif (data && data.status === 'success') {\n\t\t\t\t\tthis.message = 'send-success'\n\t\t\t\t\tthis.$emit('update:username', this.user)\n\t\t\t\t\tthis.$emit('done')\n\t\t\t\t} else if (data && data.encryption) {\n\t\t\t\t\tthis.encrypted = true\n\t\t\t\t} else if (data && data.msg) {\n\t\t\t\t\tthrow new Error(data.msg)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error()\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tthis.error = true\n\t\t\t\tthis.message = e.message ? e.message : t('core', 'Password cannot be changed. Please contact your administrator.')\n\t\t\t} finally {\n\t\t\t\tthis.loading = false\n\t\t\t}\n\t\t},\n\t},\n}\n</script>\n\n<style scoped>\n\tfieldset {\n\t\ttext-align: center;\n\t}\n\n\tinput[type=submit] {\n\t\tmargin-top: 20px;\n\t}\n</style>\n","<!--\n  - SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n\n<template>\n\t<div class=\"guest-box login-box\">\n\t\t<template v-if=\"!hideLoginForm || directLogin\">\n\t\t\t<transition name=\"fade\" mode=\"out-in\">\n\t\t\t\t<div v-if=\"!passwordlessLogin && !resetPassword && resetPasswordTarget === ''\">\n\t\t\t\t\t<LoginForm :username.sync=\"user\"\n\t\t\t\t\t\t:redirect-url=\"redirectUrl\"\n\t\t\t\t\t\t:direct-login=\"directLogin\"\n\t\t\t\t\t\t:messages=\"messages\"\n\t\t\t\t\t\t:errors=\"errors\"\n\t\t\t\t\t\t:throttle-delay=\"throttleDelay\"\n\t\t\t\t\t\t:auto-complete-allowed=\"autoCompleteAllowed\"\n\t\t\t\t\t\t:email-states=\"emailStates\"\n\t\t\t\t\t\t@submit=\"loading = true\" />\n\t\t\t\t\t<a v-if=\"canResetPassword && resetPasswordLink !== ''\"\n\t\t\t\t\t\tid=\"lost-password\"\n\t\t\t\t\t\tclass=\"login-box__link\"\n\t\t\t\t\t\t:href=\"resetPasswordLink\">\n\t\t\t\t\t\t{{ t('core', 'Forgot password?') }}\n\t\t\t\t\t</a>\n\t\t\t\t\t<a v-else-if=\"canResetPassword && !resetPassword\"\n\t\t\t\t\t\tid=\"lost-password\"\n\t\t\t\t\t\tclass=\"login-box__link\"\n\t\t\t\t\t\t:href=\"resetPasswordLink\"\n\t\t\t\t\t\t@click.prevent=\"resetPassword = true\">\n\t\t\t\t\t\t{{ t('core', 'Forgot password?') }}\n\t\t\t\t\t</a>\n\t\t\t\t\t<template v-if=\"hasPasswordless\">\n\t\t\t\t\t\t<div v-if=\"countAlternativeLogins\"\n\t\t\t\t\t\t\tclass=\"alternative-logins\">\n\t\t\t\t\t\t\t<a v-if=\"hasPasswordless\"\n\t\t\t\t\t\t\t\tclass=\"button\"\n\t\t\t\t\t\t\t\t:class=\"{ 'single-alt-login-option': countAlternativeLogins }\"\n\t\t\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\t\t\t@click.prevent=\"passwordlessLogin = true\">\n\t\t\t\t\t\t\t\t{{ t('core', 'Log in with a device') }}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<a v-else\n\t\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\t\t@click.prevent=\"passwordlessLogin = true\">\n\t\t\t\t\t\t\t{{ t('core', 'Log in with a device') }}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</template>\n\t\t\t\t</div>\n\t\t\t\t<div v-else-if=\"!loading && passwordlessLogin\"\n\t\t\t\t\tkey=\"reset-pw-less\"\n\t\t\t\t\tclass=\"login-additional login-passwordless\">\n\t\t\t\t\t<PasswordLessLoginForm :username.sync=\"user\"\n\t\t\t\t\t\t:redirect-url=\"redirectUrl\"\n\t\t\t\t\t\t:auto-complete-allowed=\"autoCompleteAllowed\"\n\t\t\t\t\t\t:is-https=\"isHttps\"\n\t\t\t\t\t\t:is-localhost=\"isLocalhost\"\n\t\t\t\t\t\t@submit=\"loading = true\" />\n\t\t\t\t\t<NcButton type=\"tertiary\"\n\t\t\t\t\t\t:aria-label=\"t('core', 'Back to login form')\"\n\t\t\t\t\t\t:wide=\"true\"\n\t\t\t\t\t\t@click=\"passwordlessLogin = false\">\n\t\t\t\t\t\t{{ t('core', 'Back') }}\n\t\t\t\t\t</NcButton>\n\t\t\t\t</div>\n\t\t\t\t<div v-else-if=\"!loading && canResetPassword\"\n\t\t\t\t\tkey=\"reset-can-reset\"\n\t\t\t\t\tclass=\"login-additional\">\n\t\t\t\t\t<div class=\"lost-password-container\">\n\t\t\t\t\t\t<ResetPassword v-if=\"resetPassword\"\n\t\t\t\t\t\t\t:username.sync=\"user\"\n\t\t\t\t\t\t\t:reset-password-link=\"resetPasswordLink\"\n\t\t\t\t\t\t\t@abort=\"resetPassword = false\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div v-else-if=\"resetPasswordTarget !== ''\">\n\t\t\t\t\t<UpdatePassword :username.sync=\"user\"\n\t\t\t\t\t\t:reset-password-target=\"resetPasswordTarget\"\n\t\t\t\t\t\t@done=\"passwordResetFinished\" />\n\t\t\t\t</div>\n\t\t\t</transition>\n\t\t</template>\n\t\t<template v-else>\n\t\t\t<transition name=\"fade\" mode=\"out-in\">\n\t\t\t\t<NcNoteCard type=\"info\" :title=\"t('core', 'Login form is disabled.')\">\n\t\t\t\t\t{{ t('core', 'The Nextcloud login form is disabled. Use another login option if available or contact your administration.') }}\n\t\t\t\t</NcNoteCard>\n\t\t\t</transition>\n\t\t</template>\n\n\t\t<div id=\"alternative-logins\" class=\"alternative-logins\">\n\t\t\t<NcButton v-for=\"(alternativeLogin, index) in alternativeLogins\"\n\t\t\t\t:key=\"index\"\n\t\t\t\ttype=\"secondary\"\n\t\t\t\t:wide=\"true\"\n\t\t\t\t:class=\"[alternativeLogin.class]\"\n\t\t\t\trole=\"link\"\n\t\t\t\t:href=\"alternativeLogin.href\">\n\t\t\t\t{{ alternativeLogin.name }}\n\t\t\t</NcButton>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport { loadState } from '@nextcloud/initial-state'\nimport queryString from 'query-string'\n\nimport LoginForm from '../components/login/LoginForm.vue'\nimport PasswordLessLoginForm from '../components/login/PasswordLessLoginForm.vue'\nimport ResetPassword from '../components/login/ResetPassword.vue'\nimport UpdatePassword from '../components/login/UpdatePassword.vue'\nimport NcButton from '@nextcloud/vue/dist/Components/NcButton.js'\nimport NcNoteCard from '@nextcloud/vue/dist/Components/NcNoteCard.js'\n\nconst query = queryString.parse(location.search)\nif (query.clear === '1') {\n\ttry {\n\t\twindow.localStorage.clear()\n\t\twindow.sessionStorage.clear()\n\t\tconsole.debug('Browser storage cleared')\n\t} catch (e) {\n\t\tconsole.error('Could not clear browser storage', e)\n\t}\n}\n\nexport default {\n\tname: 'Login',\n\n\tcomponents: {\n\t\tLoginForm,\n\t\tPasswordLessLoginForm,\n\t\tResetPassword,\n\t\tUpdatePassword,\n\t\tNcButton,\n\t\tNcNoteCard,\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tloading: false,\n\t\t\tuser: loadState('core', 'loginUsername', ''),\n\t\t\tpasswordlessLogin: false,\n\t\t\tresetPassword: false,\n\n\t\t\t// Initial data\n\t\t\terrors: loadState('core', 'loginErrors', []),\n\t\t\tmessages: loadState('core', 'loginMessages', []),\n\t\t\tredirectUrl: loadState('core', 'loginRedirectUrl', false),\n\t\t\tthrottleDelay: loadState('core', 'loginThrottleDelay', 0),\n\t\t\tcanResetPassword: loadState('core', 'loginCanResetPassword', false),\n\t\t\tresetPasswordLink: loadState('core', 'loginResetPasswordLink', ''),\n\t\t\tautoCompleteAllowed: loadState('core', 'loginAutocomplete', true),\n\t\t\tresetPasswordTarget: loadState('core', 'resetPasswordTarget', ''),\n\t\t\tresetPasswordUser: loadState('core', 'resetPasswordUser', ''),\n\t\t\tdirectLogin: query.direct === '1',\n\t\t\thasPasswordless: loadState('core', 'webauthn-available', false),\n\t\t\tcountAlternativeLogins: loadState('core', 'countAlternativeLogins', false),\n\t\t\talternativeLogins: loadState('core', 'alternativeLogins', []),\n\t\t\tisHttps: window.location.protocol === 'https:',\n\t\t\tisLocalhost: window.location.hostname === 'localhost',\n\t\t\thideLoginForm: loadState('core', 'hideLoginForm', false),\n\t\t\temailStates: loadState('core', 'emailStates', []),\n\t\t}\n\t},\n\n\tmethods: {\n\t\tpasswordResetFinished() {\n\t\t\tthis.resetPasswordTarget = ''\n\t\t\tthis.directLogin = true\n\t\t},\n\t},\n}\n</script>\n\n<style lang=\"scss\">\nbody {\n\tfont-size: var(--default-font-size);\n}\n\n.login-box {\n\t// Same size as dashboard panels\n\twidth: 320px;\n\tbox-sizing: border-box;\n\n\t&__link {\n\t\tdisplay: block;\n\t\tpadding: 1rem;\n\t\tfont-size: var(--default-font-size);\n\t\ttext-align: center;\n\t\tfont-weight: normal !important;\n\t}\n}\n\n.fade-enter-active, .fade-leave-active {\n\ttransition: opacity .3s;\n}\n.fade-enter, .fade-leave-to /* .fade-leave-active below version 2.1.8 */ {\n\topacity: 0;\n}\n\n.alternative-logins {\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 0.75rem;\n\n\t.button-vue {\n\t\tbox-sizing: border-box;\n\t}\n}\n\n.login-passwordless {\n\t.button-vue {\n\t\tmargin-top: 0.5rem;\n\t}\n}\n</style>\n","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\n// eslint-disable-next-line import/no-unresolved, n/no-missing-import\nimport 'vite/modulepreload-polyfill'\n\nimport Vue from 'vue'\n\nimport LoginView from './views/Login.vue'\nimport Nextcloud from './mixins/Nextcloud.js'\n\nVue.mixin(Nextcloud)\n\nconst View = Vue.extend(LoginView)\nnew View().$mount('#login')\n"],"names":["AuthMixin","_sfc_main","ArrowRight","NcButton","t","LoginButton","NcPasswordField","NcTextField","NcNoteCard","loadState","_b","_a","debounce","imagePath","generateUrl","state","event","startAuthentication","loginName","url","data","Axios","logger","NoValidCredentials","startWebauthnAuthentication","finishAuthentication","authData","InformationIcon","LockOpenIcon","browserSupportsWebAuthn","params","error","username","challenge","redirectUrl","defaultRedirectUrl","value","axios","resp","e","query","queryString","LoginForm","PasswordLessLoginForm","ResetPassword","UpdatePassword","Vue","Nextcloud","View","LoginView"],"mappings":"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"}