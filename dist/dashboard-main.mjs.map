{"version":3,"file":"dashboard-main.mjs","sources":["../apps/dashboard/src/mixins/isMobile.js","../apps/dashboard/src/components/ApiDashboardWidget.vue","../apps/dashboard/src/DashboardApp.vue","../apps/dashboard/src/main.js"],"sourcesContent":["/**\n * SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tisMobile: this._isMobile(),\n\t\t}\n\t},\n\tbeforeMount() {\n\t\twindow.addEventListener('resize', this._onResize)\n\t},\n\tbeforeDestroy() {\n\t\twindow.removeEventListener('resize', this._onResize)\n\t},\n\tmethods: {\n\t\t_onResize() {\n\t\t\t// Update mobile mode\n\t\t\tthis.isMobile = this._isMobile()\n\t\t},\n\t\t_isMobile() {\n\t\t\t// check if content width is under 768px\n\t\t\treturn document.documentElement.clientWidth < 768\n\t\t},\n\t},\n}\n","<!--\n - SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n - SPDX-License-Identifier: AGPL-3.0-or-later\n -->\n<template>\n\t<NcDashboardWidget :items=\"items\"\n\t\t:show-more-label=\"showMoreLabel\"\n\t\t:show-more-url=\"showMoreUrl\"\n\t\t:loading=\"loading\"\n\t\t:show-items-and-empty-content=\"!!halfEmptyContentMessage\"\n\t\t:half-empty-content-message=\"halfEmptyContentMessage\">\n\t\t<template #default=\"{ item }\">\n\t\t\t<NcDashboardWidgetItem :target-url=\"item.link\"\n\t\t\t\t:overlay-icon-url=\"item.overlayIconUrl ? item.overlayIconUrl : ''\"\n\t\t\t\t:main-text=\"item.title\"\n\t\t\t\t:sub-text=\"item.subtitle\">\n\t\t\t\t<template #avatar>\n\t\t\t\t\t<template v-if=\"item.iconUrl\">\n\t\t\t\t\t\t<NcAvatar :size=\"44\" :url=\"item.iconUrl\" />\n\t\t\t\t\t</template>\n\t\t\t\t</template>\n\t\t\t</NcDashboardWidgetItem>\n\t\t</template>\n\t\t<template #empty-content>\n\t\t\t<NcEmptyContent v-if=\"items.length === 0\"\n\t\t\t\t:description=\"emptyContentMessage\">\n\t\t\t\t<template #icon>\n\t\t\t\t\t<CheckIcon v-if=\"emptyContentMessage\" :size=\"65\" />\n\t\t\t\t</template>\n\t\t\t\t<template #action>\n\t\t\t\t\t<NcButton v-if=\"setupButton\" :href=\"setupButton.link\">\n\t\t\t\t\t\t{{ setupButton.text }}\n\t\t\t\t\t</NcButton>\n\t\t\t\t</template>\n\t\t\t</NcEmptyContent>\n\t\t</template>\n\t</NcDashboardWidget>\n</template>\n\n<script>\nimport {\n\tNcAvatar,\n\tNcDashboardWidget,\n\tNcDashboardWidgetItem,\n\tNcEmptyContent,\n\tNcButton,\n} from '@nextcloud/vue'\nimport CheckIcon from 'vue-material-design-icons/Check.vue'\n\nexport default {\n\tname: 'ApiDashboardWidget',\n\tcomponents: {\n\t\tNcAvatar,\n\t\tNcDashboardWidget,\n\t\tNcDashboardWidgetItem,\n\t\tNcEmptyContent,\n\t\tNcButton,\n\t\tCheckIcon,\n\t},\n\tprops: {\n\t\twidget: {\n\t\t\ttype: [Object, undefined],\n\t\t\tdefault: undefined,\n\t\t},\n\t\tdata: {\n\t\t\ttype: [Object, undefined],\n\t\t\tdefault: undefined,\n\t\t},\n\t\tloading: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed: {\n\t\t/** @return {object[]} */\n\t\titems() {\n\t\t\treturn this.data?.items ?? []\n\t\t},\n\n\t\t/** @return {string} */\n\t\temptyContentMessage() {\n\t\t\treturn this.data?.emptyContentMessage ?? ''\n\t\t},\n\n\t\t/** @return {string} */\n\t\thalfEmptyContentMessage() {\n\t\t\treturn this.data?.halfEmptyContentMessage ?? ''\n\t\t},\n\n\t\t/** @return {object|undefined} */\n\t\tnewButton() {\n\t\t\t// TODO: Render new button in the template\n\t\t\t// I couldn't find a widget that makes use of the button. Furthermore, there is no convenient\n\t\t\t// way to render such a button using the official widget component.\n\t\t\treturn this.widget?.buttons?.find(button => button.type === 'new')\n\t\t},\n\n\t\t/** @return {object|undefined} */\n\t\tmoreButton() {\n\t\t\treturn this.widget?.buttons?.find(button => button.type === 'more')\n\t\t},\n\n\t\t/** @return {object|undefined} */\n\t\tsetupButton() {\n\t\t\treturn this.widget?.buttons?.find(button => button.type === 'setup')\n\t\t},\n\n\t\t/** @return {string|undefined} */\n\t\tshowMoreLabel() {\n\t\t\treturn this.moreButton?.text\n\t\t},\n\n\t\t/** @return {string|undefined} */\n\t\tshowMoreUrl() {\n\t\t\treturn this.moreButton?.link\n\t\t},\n\t},\n}\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n","<!--\n - SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n - SPDX-License-Identifier: AGPL-3.0-or-later\n -->\n<template>\n\t<div id=\"app-dashboard\">\n\t\t<h2>{{ greeting.text }}</h2>\n\t\t<ul class=\"statuses\">\n\t\t\t<li v-for=\"status in sortedRegisteredStatus\"\n\t\t\t\t:id=\"'status-' + status\"\n\t\t\t\t:key=\"status\">\n\t\t\t\t<div :ref=\"'status-' + status\" />\n\t\t\t</li>\n\t\t</ul>\n\n\t\t<Draggable v-model=\"layout\"\n\t\t\tclass=\"panels\"\n\t\t\tv-bind=\"{swapThreshold: 0.30, delay: 500, delayOnTouchOnly: true, touchStartThreshold: 3}\"\n\t\t\thandle=\".panel--header\"\n\t\t\t@end=\"saveLayout\">\n\t\t\t<template v-for=\"panelId in layout\">\n\t\t\t\t<div v-if=\"isApiWidgetV2(panels[panelId].id)\"\n\t\t\t\t\t:key=\"`${panels[panelId].id}-v2`\"\n\t\t\t\t\tclass=\"panel\">\n\t\t\t\t\t<div class=\"panel--header\">\n\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t<span :aria-labelledby=\"`panel-${panels[panelId].id}--header--icon--description`\"\n\t\t\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\t\t\t:class=\"apiWidgets[panels[panelId].id].icon_class\"\n\t\t\t\t\t\t\t\trole=\"img\" />\n\t\t\t\t\t\t\t{{ apiWidgets[panels[panelId].id].title }}\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t<span :id=\"`panel-${panels[panelId].id}--header--icon--description`\" class=\"hidden-visually\">\n\t\t\t\t\t\t\t{{ t('dashboard', '\"{title} icon\"', { title: apiWidgets[panels[panelId].id].title }) }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"panel--content\">\n\t\t\t\t\t\t<ApiDashboardWidget :widget=\"apiWidgets[panels[panelId].id]\"\n\t\t\t\t\t\t\t:data=\"apiWidgetItems[panels[panelId].id]\"\n\t\t\t\t\t\t\t:loading=\"loadingItems\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div v-else :key=\"panels[panelId].id\" class=\"panel\">\n\t\t\t\t\t<div class=\"panel--header\">\n\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t<span :aria-labelledby=\"`panel-${panels[panelId].id}--header--icon--description`\"\n\t\t\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\t\t\t:class=\"panels[panelId].iconClass\"\n\t\t\t\t\t\t\t\trole=\"img\" />\n\t\t\t\t\t\t\t{{ panels[panelId].title }}\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t<span :id=\"`panel-${panels[panelId].id}--header--icon--description`\" class=\"hidden-visually\"> {{ t('dashboard', '\"{title} icon\"', { title: panels[panelId].title }) }} </span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"panel--content\" :class=\"{ loading: !panels[panelId].mounted }\">\n\t\t\t\t\t\t<div :ref=\"panels[panelId].id\" :data-id=\"panels[panelId].id\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t</Draggable>\n\n\t\t<div class=\"footer\">\n\t\t\t<NcButton @click=\"showModal\">\n\t\t\t\t<template #icon>\n\t\t\t\t\t<Pencil :size=\"20\" />\n\t\t\t\t</template>\n\t\t\t\t{{ t('dashboard', 'Customize') }}\n\t\t\t</NcButton>\n\t\t</div>\n\n\t\t<NcModal v-if=\"modal\" size=\"large\" @close=\"closeModal\">\n\t\t\t<div class=\"modal__content\">\n\t\t\t\t<h2>{{ t('dashboard', 'Edit widgets') }}</h2>\n\t\t\t\t<ol class=\"panels\">\n\t\t\t\t\t<li v-for=\"status in sortedAllStatuses\" :key=\"status\" :class=\"'panel-' + status\">\n\t\t\t\t\t\t<input :id=\"'status-checkbox-' + status\"\n\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\tclass=\"checkbox\"\n\t\t\t\t\t\t\t:checked=\"isStatusActive(status)\"\n\t\t\t\t\t\t\t@input=\"updateStatusCheckbox(status, $event.target.checked)\">\n\t\t\t\t\t\t<label :for=\"'status-checkbox-' + status\">\n\t\t\t\t\t\t\t<NcUserStatusIcon v-if=\"status === 'status'\" status=\"online\" aria-hidden=\"true\" />\n\t\t\t\t\t\t\t<span v-else :class=\"statusInfo[status].icon\" aria-hidden=\"true\" />\n\t\t\t\t\t\t\t{{ statusInfo[status].text }}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</li>\n\t\t\t\t</ol>\n\t\t\t\t<Draggable v-model=\"layout\"\n\t\t\t\t\tclass=\"panels\"\n\t\t\t\t\ttag=\"ol\"\n\t\t\t\t\tv-bind=\"{swapThreshold: 0.30, delay: 500, delayOnTouchOnly: true, touchStartThreshold: 3}\"\n\t\t\t\t\thandle=\".draggable\"\n\t\t\t\t\t@end=\"saveLayout\">\n\t\t\t\t\t<li v-for=\"panel in sortedPanels\" :key=\"panel.id\" :class=\"'panel-' + panel.id\">\n\t\t\t\t\t\t<input :id=\"'panel-checkbox-' + panel.id\"\n\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\tclass=\"checkbox\"\n\t\t\t\t\t\t\t:checked=\"isActive(panel)\"\n\t\t\t\t\t\t\t@input=\"updateCheckbox(panel, $event.target.checked)\">\n\t\t\t\t\t\t<label :for=\"'panel-checkbox-' + panel.id\" :class=\"{ draggable: isActive(panel) }\">\n\t\t\t\t\t\t\t<span :class=\"panel.iconClass\" aria-hidden=\"true\" />\n\t\t\t\t\t\t\t{{ panel.title }}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</li>\n\t\t\t\t</Draggable>\n\n\t\t\t\t<a v-if=\"isAdmin && appStoreEnabled\" :href=\"appStoreUrl\" class=\"button\">{{ t('dashboard', 'Get more widgets from the App Store') }}</a>\n\n\t\t\t\t<div v-if=\"statuses.weather && isStatusActive('weather')\">\n\t\t\t\t\t<h2>{{ t('dashboard', 'Weather service') }}</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{{ t('dashboard', 'For your privacy, the weather data is requested by your Nextcloud server on your behalf so the weather service receives no personal information.') }}\n\t\t\t\t\t</p>\n\t\t\t\t\t<p class=\"credits--end\">\n\t\t\t\t\t\t<a href=\"https://api.met.no/doc/TermsOfService\" target=\"_blank\" rel=\"noopener\">{{ t('dashboard', 'Weather data from Met.no') }}</a>,\n\t\t\t\t\t\t<a href=\"https://wiki.osmfoundation.org/wiki/Privacy_Policy\" target=\"_blank\" rel=\"noopener\">{{ t('dashboard', 'geocoding with Nominatim') }}</a>,\n\t\t\t\t\t\t<a href=\"https://www.opentopodata.org/#public-api\" target=\"_blank\" rel=\"noopener\">{{ t('dashboard', 'elevation data from OpenTopoData') }}</a>.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</NcModal>\n\t</div>\n</template>\n\n<script>\nimport { getCurrentUser } from '@nextcloud/auth'\nimport { loadState } from '@nextcloud/initial-state'\nimport { translate as t } from '@nextcloud/l10n'\nimport { generateUrl, generateOcsUrl } from '@nextcloud/router'\nimport axios from '@nextcloud/axios'\nimport NcButton from '@nextcloud/vue/dist/Components/NcButton.js'\nimport Draggable from 'vuedraggable'\nimport NcModal from '@nextcloud/vue/dist/Components/NcModal.js'\nimport NcUserStatusIcon from '@nextcloud/vue/dist/Components/NcUserStatusIcon.js'\nimport Pencil from 'vue-material-design-icons/Pencil.vue'\nimport Vue from 'vue'\n\nimport isMobile from './mixins/isMobile.js'\nimport ApiDashboardWidget from './components/ApiDashboardWidget.vue'\n\nconst panels = loadState('dashboard', 'panels')\nconst firstRun = loadState('dashboard', 'firstRun')\n\nconst statusInfo = {\n\tweather: {\n\t\ttext: t('dashboard', 'Weather'),\n\t\ticon: 'icon-weather-status',\n\t},\n\tstatus: {\n\t\ttext: t('dashboard', 'Status'),\n\t},\n}\n\nexport default {\n\tname: 'DashboardApp',\n\tcomponents: {\n\t\tApiDashboardWidget,\n\t\tNcButton,\n\t\tDraggable,\n\t\tNcModal,\n\t\tPencil,\n\t\tNcUserStatusIcon,\n\t},\n\tmixins: [\n\t\tisMobile,\n\t],\n\n\tdata() {\n\t\treturn {\n\t\t\tisAdmin: getCurrentUser().isAdmin,\n\t\t\ttimer: new Date(),\n\t\t\tregisteredStatus: [],\n\t\t\tcallbacks: {},\n\t\t\tcallbacksStatus: {},\n\t\t\tallCallbacksStatus: {},\n\t\t\tstatusInfo,\n\t\t\tenabledStatuses: loadState('dashboard', 'statuses'),\n\t\t\tpanels,\n\t\t\tfirstRun,\n\t\t\tdisplayName: getCurrentUser()?.displayName,\n\t\t\tuid: getCurrentUser()?.uid,\n\t\t\tlayout: loadState('dashboard', 'layout').filter((panelId) => panels[panelId]),\n\t\t\tmodal: false,\n\t\t\tappStoreUrl: generateUrl('/settings/apps/dashboard'),\n\t\t\tappStoreEnabled: loadState('dashboard', 'appStoreEnabled', true),\n\t\t\tstatuses: {},\n\t\t\tapiWidgets: [],\n\t\t\tapiWidgetItems: {},\n\t\t\tloadingItems: true,\n\t\t}\n\t},\n\tcomputed: {\n\t\tgreeting() {\n\t\t\tconst time = this.timer.getHours()\n\n\t\t\t// Determine part of the day\n\t\t\tlet partOfDay\n\t\t\tif (time >= 22 || time < 5) {\n\t\t\t\tpartOfDay = 'night'\n\t\t\t} else if (time >= 18) {\n\t\t\t\tpartOfDay = 'evening'\n\t\t\t} else if (time >= 12) {\n\t\t\t\tpartOfDay = 'afternoon'\n\t\t\t} else {\n\t\t\t\tpartOfDay = 'morning'\n\t\t\t}\n\n\t\t\t// Define the greetings\n\t\t\tconst good = {\n\t\t\t\tmorning: {\n\t\t\t\t\tgeneric: t('dashboard', 'Good morning'),\n\t\t\t\t\twithName: t('dashboard', 'Good morning, {name}', { name: this.displayName }, undefined, { escape: false }),\n\t\t\t\t},\n\t\t\t\tafternoon: {\n\t\t\t\t\tgeneric: t('dashboard', 'Good afternoon'),\n\t\t\t\t\twithName: t('dashboard', 'Good afternoon, {name}', { name: this.displayName }, undefined, { escape: false }),\n\t\t\t\t},\n\t\t\t\tevening: {\n\t\t\t\t\tgeneric: t('dashboard', 'Good evening'),\n\t\t\t\t\twithName: t('dashboard', 'Good evening, {name}', { name: this.displayName }, undefined, { escape: false }),\n\t\t\t\t},\n\t\t\t\tnight: {\n\t\t\t\t\t// Don't use \"Good night\" as it's not a greeting\n\t\t\t\t\tgeneric: t('dashboard', 'Hello'),\n\t\t\t\t\twithName: t('dashboard', 'Hello, {name}', { name: this.displayName }, undefined, { escape: false }),\n\t\t\t\t},\n\t\t\t}\n\n\t\t\t// Figure out which greeting to show\n\t\t\tconst shouldShowName = this.displayName && this.uid !== this.displayName\n\t\t\treturn { text: shouldShowName ? good[partOfDay].withName : good[partOfDay].generic }\n\t\t},\n\n\t\tisActive() {\n\t\t\treturn (panel) => this.layout.indexOf(panel.id) > -1\n\t\t},\n\t\tisStatusActive() {\n\t\t\treturn (status) => this.enabledStatuses.findIndex((s) => s === status) !== -1\n\t\t},\n\n\t\tsortedAllStatuses() {\n\t\t\treturn Object.keys(this.allCallbacksStatus).slice().sort(this.sortStatuses)\n\t\t},\n\t\tsortedPanels() {\n\t\t\treturn Object.values(this.panels).sort((a, b) => {\n\t\t\t\tconst indexA = this.layout.indexOf(a.id)\n\t\t\t\tconst indexB = this.layout.indexOf(b.id)\n\t\t\t\tif (indexA === -1 || indexB === -1) {\n\t\t\t\t\treturn indexB - indexA || a.id - b.id\n\t\t\t\t}\n\t\t\t\treturn indexA - indexB || a.id - b.id\n\t\t\t})\n\t\t},\n\t\tsortedRegisteredStatus() {\n\t\t\treturn this.registeredStatus.slice().sort(this.sortStatuses)\n\t\t},\n\t},\n\n\twatch: {\n\t\tcallbacks() {\n\t\t\tthis.rerenderPanels()\n\t\t},\n\t\tcallbacksStatus() {\n\t\t\tfor (const app in this.callbacksStatus) {\n\t\t\t\tconst element = this.$refs['status-' + app]\n\t\t\t\tif (this.statuses[app] && this.statuses[app].mounted) {\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.callbacksStatus[app](element[0])\n\t\t\t\t\tVue.set(this.statuses, app, { mounted: true })\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('Failed to register panel in the frontend as no backend data was provided for ' + app)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t},\n\n\tasync created() {\n\t\tawait this.fetchApiWidgets()\n\n\t\tconst apiWidgetIdsToFetch = Object\n\t\t\t.values(this.apiWidgets)\n\t\t\t.filter(widget => this.isApiWidgetV2(widget.id))\n\t\t\t.map(widget => widget.id)\n\t\tawait Promise.all(apiWidgetIdsToFetch.map(id => this.fetchApiWidgetItems([id], true)))\n\n\t\tfor (const widget of Object.values(this.apiWidgets)) {\n\t\t\tif (widget.reload_interval > 0) {\n\t\t\t\tsetInterval(async () => {\n\t\t\t\t\tawait this.fetchApiWidgetItems([widget.id], true)\n\t\t\t\t}, widget.reload_interval * 1000)\n\t\t\t}\n\t\t}\n\t},\n\tmounted() {\n\t\tthis.updateSkipLink()\n\t\twindow.addEventListener('scroll', this.handleScroll)\n\n\t\tsetInterval(() => {\n\t\t\tthis.timer = new Date()\n\t\t}, 30000)\n\n\t\tif (this.firstRun) {\n\t\t\twindow.addEventListener('scroll', this.disableFirstrunHint)\n\t\t}\n\t},\n\tdestroyed() {\n\t\twindow.removeEventListener('scroll', this.handleScroll)\n\t},\n\n\tmethods: {\n\t\tt,\n\n\t\t/**\n\t\t * Method to register panels that will be called by the integrating apps\n\t\t *\n\t\t * @param {string} app The unique app id for the widget\n\t\t * @param {Function} callback The callback function to register a panel which gets the DOM element passed as parameter\n\t\t */\n\t\tregister(app, callback) {\n\t\t\tVue.set(this.callbacks, app, callback)\n\t\t},\n\t\tregisterStatus(app, callback) {\n\t\t\t// always save callbacks in case user enables the status later\n\t\t\tVue.set(this.allCallbacksStatus, app, callback)\n\t\t\t// register only if status is enabled or missing from config\n\t\t\tif (this.isStatusActive(app)) {\n\t\t\t\tthis.registeredStatus.push(app)\n\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\tVue.set(this.callbacksStatus, app, callback)\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\t\trerenderPanels() {\n\t\t\tfor (const app in this.callbacks) {\n\t\t\t\t// TODO: Properly rerender v2 widgets\n\t\t\t\tif (this.isApiWidgetV2(this.panels[app].id)) {\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\n\t\t\t\tconst element = this.$refs[app]\n\t\t\t\tif (this.layout.indexOf(app) === -1) {\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\tif (this.panels[app] && this.panels[app].mounted) {\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.callbacks[app](element[0], {\n\t\t\t\t\t\twidget: this.panels[app],\n\t\t\t\t\t})\n\t\t\t\t\tVue.set(this.panels[app], 'mounted', true)\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('Failed to register panel in the frontend as no backend data was provided for ' + app)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tsaveLayout() {\n\t\t\taxios.post(generateOcsUrl('/apps/dashboard/api/v3/layout'), {\n\t\t\t\tlayout: this.layout,\n\t\t\t})\n\t\t},\n\t\tsaveStatuses() {\n\t\t\taxios.post(generateOcsUrl('/apps/dashboard/api/v3/statuses'), {\n\t\t\t\tstatuses: this.enabledStatuses,\n\t\t\t})\n\t\t},\n\t\tshowModal() {\n\t\t\tthis.modal = true\n\t\t\tthis.firstRun = false\n\t\t},\n\t\tcloseModal() {\n\t\t\tthis.modal = false\n\t\t},\n\t\tupdateCheckbox(panel, currentValue) {\n\t\t\tconst index = this.layout.indexOf(panel.id)\n\t\t\tif (!currentValue && index > -1) {\n\t\t\t\tthis.layout.splice(index, 1)\n\n\t\t\t} else {\n\t\t\t\tthis.layout.push(panel.id)\n\t\t\t}\n\t\t\tVue.set(this.panels[panel.id], 'mounted', false)\n\t\t\tthis.saveLayout()\n\t\t\tthis.$nextTick(() => this.rerenderPanels())\n\t\t},\n\t\tdisableFirstrunHint() {\n\t\t\twindow.removeEventListener('scroll', this.disableFirstrunHint)\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.firstRun = false\n\t\t\t}, 1000)\n\t\t},\n\t\tupdateSkipLink() {\n\t\t\t// Make sure \"Skip to main content\" link points to the app content\n\t\t\tdocument.getElementsByClassName('skip-navigation')[0].setAttribute('href', '#app-dashboard')\n\t\t},\n\t\tupdateStatusCheckbox(app, checked) {\n\t\t\tif (checked) {\n\t\t\t\tthis.enableStatus(app)\n\t\t\t} else {\n\t\t\t\tthis.disableStatus(app)\n\t\t\t}\n\t\t},\n\t\tenableStatus(app) {\n\t\t\tthis.enabledStatuses.push(app)\n\t\t\tthis.registerStatus(app, this.allCallbacksStatus[app])\n\t\t\tthis.saveStatuses()\n\t\t},\n\t\tdisableStatus(app) {\n\t\t\tconst i = this.enabledStatuses.findIndex((s) => s === app)\n\t\t\tif (i !== -1) {\n\t\t\t\tthis.enabledStatuses.splice(i, 1)\n\t\t\t}\n\t\t\tconst j = this.registeredStatus.findIndex((s) => s === app)\n\t\t\tif (j !== -1) {\n\t\t\t\tthis.registeredStatus.splice(j, 1)\n\t\t\t\tVue.set(this.statuses, app, { mounted: false })\n\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\tVue.delete(this.callbacksStatus, app)\n\t\t\t\t})\n\t\t\t}\n\t\t\tthis.saveStatuses()\n\t\t},\n\t\tsortStatuses(a, b) {\n\t\t\tconst al = a.toLowerCase()\n\t\t\tconst bl = b.toLowerCase()\n\t\t\treturn al > bl\n\t\t\t\t? 1\n\t\t\t\t: al < bl\n\t\t\t\t\t? -1\n\t\t\t\t\t: 0\n\t\t},\n\t\thandleScroll() {\n\t\t\tif (window.scrollY > 70) {\n\t\t\t\tdocument.body.classList.add('dashboard--scrolled')\n\t\t\t} else {\n\t\t\t\tdocument.body.classList.remove('dashboard--scrolled')\n\t\t\t}\n\t\t},\n\t\tasync fetchApiWidgets() {\n\t\t\tconst response = await axios.get(generateOcsUrl('/apps/dashboard/api/v1/widgets'))\n\t\t\tthis.apiWidgets = response.data.ocs.data\n\t\t},\n\t\tasync fetchApiWidgetItems(widgetIds, merge = false) {\n\t\t\ttry {\n\t\t\t\tconst url = generateOcsUrl('/apps/dashboard/api/v2/widget-items')\n\t\t\t\tconst params = new URLSearchParams(widgetIds.map(id => ['widgets[]', id]))\n\t\t\t\tconst response = await axios.get(`${url}?${params.toString()}`)\n\t\t\t\tconst widgetItems = response.data.ocs.data\n\t\t\t\tif (merge) {\n\t\t\t\t\tthis.apiWidgetItems = Object.assign({}, this.apiWidgetItems, widgetItems)\n\t\t\t\t} else {\n\t\t\t\t\tthis.apiWidgetItems = widgetItems\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tthis.loadingItems = false\n\t\t\t}\n\t\t},\n\t\tisApiWidgetV2(id) {\n\t\t\tfor (const widget of Object.values(this.apiWidgets)) {\n\t\t\t\tif (widget.id === id && widget.item_api_versions.includes(2)) {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false\n\t\t},\n\t},\n}\n</script>\n\n<style lang=\"scss\" scoped>\n#app-dashboard {\n\twidth: 100%;\n\tmin-height: 100%;\n\tbackground-size: cover;\n\tbackground-position: center center;\n\tbackground-repeat: no-repeat;\n\tbackground-attachment: fixed;\n\n\t> h2 {\n\t\t// this is shown directly on the background image / color\n\t\tcolor: var(--color-background-plain-text);\n\t\ttext-align: center;\n\t\tfont-size: 32px;\n\t\tline-height: 130%;\n\t\tpadding: 1rem 0;\n\t}\n}\n\n.panels {\n\twidth: auto;\n\tmargin: auto;\n\tmax-width: 1800px;\n\tdisplay: flex;\n\tjustify-content: center;\n\tflex-direction: row;\n\talign-items: flex-start;\n\tflex-wrap: wrap;\n}\n\n.panel, .panels > div {\n\t// Ensure the maxcontrast color is set for the background\n\t--color-text-maxcontrast: var(--color-text-maxcontrast-background-blur, var(--color-main-text));\n\n\twidth: 320px;\n\tmax-width: 100%;\n\tmargin: 16px;\n\talign-self: stretch;\n\tbackground-color: var(--color-main-background-blur);\n\t-webkit-backdrop-filter: var(--filter-background-blur);\n\tbackdrop-filter: var(--filter-background-blur);\n\tborder-radius: var(--border-radius-rounded);\n\n\t#body-user.theme--highcontrast & {\n\t\tborder: 2px solid var(--color-border);\n\t}\n\n\t&.sortable-ghost {\n\t\t opacity: 0.1;\n\t}\n\n\t& > .panel--header {\n\t\tdisplay: flex;\n\t\tz-index: 1;\n\t\ttop: 50px;\n\t\tpadding: 16px;\n\t\tcursor: grab;\n\n\t\t&, ::v-deep * {\n\t\t\t-webkit-touch-callout: none;\n\t\t\t-webkit-user-select: none;\n\t\t\t-khtml-user-select: none;\n\t\t\t-moz-user-select: none;\n\t\t\t-ms-user-select: none;\n\t\t\tuser-select: none;\n\t\t}\n\n\t\t&:active {\n\t\t\tcursor: grabbing;\n\t\t}\n\n\t\ta {\n\t\t\tflex-grow: 1;\n\t\t}\n\n\t\t> h2 {\n\t\t\tdisplay: block;\n\t\t\talign-items: center;\n\t\t\tflex-grow: 1;\n\t\t\tmargin: 0;\n\t\t\tfont-size: 20px;\n\t\t\tline-height: 24px;\n\t\t\tfont-weight: bold;\n\t\t\tpadding: 16px 8px;\n\t\t\theight: 56px;\n\t\t\twhite-space: nowrap;\n\t\t\toverflow: hidden;\n\t\t\ttext-overflow: ellipsis;\n\t\t\tcursor: grab;\n\t\t\tspan {\n\t\t\t\tbackground-size: 32px;\n\t\t\t\twidth: 32px;\n\t\t\t\theight: 32px;\n\t\t\t\tmargin-right: 16px;\n\t\t\t\tbackground-position: center;\n\t\t\t\tfloat: left;\n\t\t\t\tmargin-top: -6px;\n\t\t\t\tmargin-left: 6px;\n\t\t\t}\n\t\t}\n\t}\n\n\t& > .panel--content {\n\t\tmargin: 0 16px 16px 16px;\n\t\theight: 424px;\n\t\t// We specifically do not want scrollbars inside widgets\n\t\toverflow: visible;\n\t}\n\n\t// No need to extend height of widgets if only one column is shown\n\t@media only screen and (max-width: 709px) {\n\t\t& > .panel--content {\n\t\t\theight: auto;\n\t\t}\n\t}\n}\n\n.footer {\n\tdisplay: flex;\n\tjustify-content: center;\n\ttransition: bottom var(--animation-slow) ease-in-out;\n\tpadding: 1rem 0;\n}\n\n.edit-panels {\n\tdisplay: inline-block;\n\tmargin:auto;\n\tbackground-position: 16px center;\n\tpadding: 12px 16px;\n\tpadding-left: 36px;\n\tborder-radius: var(--border-radius-pill);\n\tmax-width: 200px;\n\topacity: 1;\n\ttext-align: center;\n}\n\n.button,\n.button-vue,\n.edit-panels,\n.statuses ::v-deep .action-item .action-item__menutoggle,\n.statuses ::v-deep .action-item.action-item--open .action-item__menutoggle {\n\t// Ensure the maxcontrast color is set for the background\n\t--color-text-maxcontrast: var(--color-text-maxcontrast-background-blur, var(--color-main-text));\n\n\tbackground-color: var(--color-main-background-blur);\n\t-webkit-backdrop-filter: var(--filter-background-blur);\n\tbackdrop-filter: var(--filter-background-blur);\n\topacity: 1 !important;\n\n\t&:hover,\n\t&:focus,\n\t&:active {\n\t\tbackground-color: var(--color-background-hover)!important;\n\t}\n\t&:focus-visible {\n\t\tbox-shadow: 0 0 0 4px var(--color-main-background) !important;\n\t\toutline: 2px solid var(--color-main-text) !important;\n\t}\n}\n\n.modal__content {\n\tpadding: 32px 16px;\n\ttext-align: center;\n\n\tol {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tjustify-content: center;\n\t\tlist-style-type: none;\n\t\tpadding-bottom: 16px;\n\t}\n\tli {\n\t\tlabel {\n\t\t\tposition: relative;\n\t\t\tdisplay: block;\n\t\t\tpadding: 48px 16px 14px 16px;\n\t\t\tmargin: 8px;\n\t\t\twidth: 140px;\n\t\t\tbackground-color: var(--color-background-hover);\n\t\t\tborder: 2px solid var(--color-main-background);\n\t\t\tborder-radius: var(--border-radius-large);\n\t\t\ttext-align: left;\n\t\t\toverflow: hidden;\n\t\t\ttext-overflow: ellipsis;\n\t\t\twhite-space: nowrap;\n\n\t\t\tspan {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 16px;\n\t\t\t\twidth: 24px;\n\t\t\t\theight: 24px;\n\t\t\t\tbackground-size: 24px;\n\t\t\t}\n\n\t\t\t&:hover {\n\t\t\t\tborder-color: var(--color-primary-element);\n\t\t\t}\n\t\t}\n\n\t\t// Do not invert status icons\n\t\t&:not(.panel-status) label span {\n\t\t\tfilter: var(--background-invert-if-dark);\n\t\t}\n\n\t\tinput[type='checkbox'].checkbox + label:before {\n\t\t\tposition: absolute;\n\t\t\tright: 12px;\n\t\t\ttop: 16px;\n\t\t}\n\n\t\tinput:focus + label {\n\t\t\tborder-color: var(--color-primary-element);\n\t\t}\n\t}\n\n\th2 {\n\t\tfont-weight: bold;\n\t\tmargin-top: 12px;\n\t}\n\n\t// Adjust design of 'Get more widgets' button\n\t.button {\n\t\tdisplay: inline-block;\n\t\tpadding: 10px 16px;\n\t\tmargin: 0;\n\t}\n\n\tp {\n\t\tmax-width: 650px;\n\t\tmargin: 0 auto;\n\n\t\ta:hover,\n\t\ta:focus {\n\t\t\tborder-bottom: 2px solid var(--color-border);\n\t\t}\n\t}\n\n\t.credits--end {\n\t\tpadding-bottom: 32px;\n\t\tcolor: var(--color-text-maxcontrast);\n\n\t\ta {\n\t\t\tcolor: var(--color-text-maxcontrast);\n\t\t}\n\t}\n}\n\n.flip-list-move {\n\ttransition: transform var(--animation-slow);\n}\n\n.statuses {\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\tflex-wrap: wrap;\n\tmargin-bottom: 36px;\n\n\t& > li {\n\t\tmargin: 8px;\n\t}\n}\n</style>\n<style>\nhtml, body {\n\tbackground-attachment: fixed;\n}\n\n#body-user #header {\n\tposition: fixed;\n}\n\n#content {\n\toverflow: auto;\n}\n</style>\n","/**\n * SPDX-FileCopyrightText: 2016 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\n// eslint-disable-next-line import/no-unresolved, n/no-missing-import\nimport 'vite/modulepreload-polyfill'\n\nimport Vue from 'vue'\nimport DashboardApp from './DashboardApp.vue'\n\nconst Dashboard = Vue.extend(DashboardApp)\nconst Instance = new Dashboard({}).$mount('#app-content-vue')\n\nwindow.OCA.Dashboard = {\n\tregister: (app, callback) => Instance.register(app, callback),\n\tregisterStatus: (app, callback) => Instance.registerStatus(app, callback),\n}\n"],"names":["isMobile","_sfc_main","NcAvatar","NcDashboardWidget","NcDashboardWidgetItem","NcEmptyContent","NcButton","CheckIcon","_b","_a","button","panels","loadState","firstRun","statusInfo","t","ApiDashboardWidget","Draggable","NcModal","Pencil","NcUserStatusIcon","getCurrentUser","panelId","generateUrl","time","partOfDay","good","panel","status","s","a","b","indexA","indexB","app","element","Vue","apiWidgetIdsToFetch","widget","id","callback","axios","generateOcsUrl","currentValue","index","checked","i","j","al","bl","response","widgetIds","merge","url","params","widgetItems","Dashboard","DashboardApp","Instance"],"mappings":"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"}