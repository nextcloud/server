{"version":3,"mappings":";;wIAUA,MAAMA,EAAoBC,EAAU,OAAQ,OAAQ,CAAE,GAEhDC,EAAYC,EAAqB,IAAMC,EAAA,WAAO,0CAAqC,EAAC,+CAQ1F,SAASC,EAAWC,EAAeC,EAAkB,CAC9C,MAAAC,EAAU,SAAS,cAAc,KAAK,EACnC,qBAAK,YAAYA,CAAO,EAE1B,IAAI,QAASC,GAAY,CAC/B,IAAIC,EAAY,GAEV,MAAAC,EAAS,IAAIC,EAAI,CACtB,GAAIJ,EACJ,OAASK,GAAMA,EAAEX,EAAW,CAC3B,MAAO,CACN,MAAAI,EACA,QAAAC,CACD,EACA,GAAI,CACH,QAAS,IAAM,CAAcG,EAAA,EAAK,EAClC,cAAgBI,GAAkB,CApCvC,IAAAC,EAqCWD,KACJC,EAAAJ,EAAO,WAAP,MAAAI,EAAA,KAAAJ,CAAA,EACAF,EAAQC,CAAS,EAEbA,GAAaJ,KAASN,IAClB,gBAAWA,EAAkBM,CAAK,EAAE,MAG9C,CACD,EACA,EACD,EACD,CACF,CAeAU,EAAU,+BAAiCC,GAAoC,CAjE/E,IAAAF,EAkEK,GAAAE,EAAM,aAAa,aAAe,cAAe,CACpDA,EAAM,aAAe,GAGrB,KAAM,CAACC,EAAGC,EAAKZ,EAASa,CAAE,GAAIL,EAAAE,EAAM,OAAO,IAAI,MAAM,WAAC,qCAAkC,KAA1D,OAA+D,GACjFZ,EAAAc,GAA6BF,EAAM,aAAa,SAAqBV,CAAO,EACtF,KAAMG,GAAc,CAChBA,GACGW,EAAA,OAAOC,EAAe,+CAAgD,CAAE,GAAIL,EAAM,aAAa,cAAgB,EAAC,CACvH,CACA,CACH,CACD,CAAC","names":["navigationEntries","loadState","DialogVue","defineAsyncComponent","__vitePreload","showDialog","appId","version","element","resolve","dismissed","dialog","Vue","h","open","_a","subscribe","event","_","app","__","axios","generateOcsUrl"],"ignoreList":[],"sources":["../apps/updatenotification/src/init.ts"],"sourcesContent":["/**\n * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { subscribe } from '@nextcloud/event-bus'\nimport { loadState } from '@nextcloud/initial-state'\nimport { generateOcsUrl } from '@nextcloud/router'\nimport Vue, { defineAsyncComponent } from 'vue'\nimport axios from '@nextcloud/axios'\n\nconst navigationEntries = loadState('core', 'apps', {})\n\nconst DialogVue = defineAsyncComponent(() => import('./components/AppChangelogDialog.vue'))\n\n/**\n * Show the app changelog dialog\n *\n * @param appId The app to show the changelog for\n * @param version Optional version to show\n */\nfunction showDialog(appId: string, version?: string) {\n\tconst element = document.createElement('div')\n\tdocument.body.appendChild(element)\n\n\treturn new Promise((resolve) => {\n\t\tlet dismissed = false\n\n\t\tconst dialog = new Vue({\n\t\t\tel: element,\n\t\t\trender: (h) => h(DialogVue, {\n\t\t\t\tprops: {\n\t\t\t\t\tappId,\n\t\t\t\t\tversion,\n\t\t\t\t},\n\t\t\t\ton: {\n\t\t\t\t\tdismiss: () => { dismissed = true },\n\t\t\t\t\t'update:open': (open: boolean) => {\n\t\t\t\t\t\tif (!open) {\n\t\t\t\t\t\t\tdialog.$destroy?.()\n\t\t\t\t\t\t\tresolve(dismissed)\n\n\t\t\t\t\t\t\tif (dismissed && appId in navigationEntries) {\n\t\t\t\t\t\t\t\twindow.location = navigationEntries[appId].href\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}),\n\t\t})\n\t})\n}\n\ninterface INotificationActionEvent {\n\tcancelAction: boolean\n\tnotification: Readonly<{\n\t\tnotificationId: number\n\t\tobjectId: string\n\t\tobjectType: string\n\t}>\n\taction: Readonly<{\n\t\turl: string\n\t\ttype: 'WEB'|'GET'|'POST'|'DELETE'\n\t}>,\n}\n\nsubscribe('notifications:action:execute', (event: INotificationActionEvent) => {\n\tif (event.notification.objectType === 'app_updated') {\n\t\tevent.cancelAction = true\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\tconst [_, app, version, __] = event.action.url.match(/(?<=\\/)([^?]+)?version=((\\d+.?)+)/) ?? []\n\t\tshowDialog((app as string|undefined) || (event.notification.objectId as string), version)\n\t\t\t.then((dismissed) => {\n\t\t\t\tif (dismissed) {\n\t\t\t\t\taxios.delete(generateOcsUrl('apps/notifications/api/v2/notifications/{id}', { id: event.notification.notificationId }))\n\t\t\t\t}\n\t\t\t})\n\t}\n})\n"],"file":"updatenotification-init.mjs"}