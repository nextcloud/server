{"version":3,"file":"node_modules_nextcloud_upload_dist_chunks_ConflictPicker-D0BLWDdv_mjs-node_modules_nextcloud_upload_dist_chunks_ConflictPicker-D0BLWDdv_mjs.js?v=42f19777e82890539665","mappingszsources":["webpack:///nextcloud/node_modules/@nextcloud/upload/dist/assets/ConflictPicker-EWePgg5w.css","webpack://nextcloud/./node_modules/@nextcloud/upload/dist/assets/ConflictPicker-EWePgg5w.css?a01f","webpack:///nextcloud/node_modules/@nextcloud/upload/dist/chunks/ConflictPicker-D0BLWDdv.mjs"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.node-picker__wrapper[data-v-0becb48e]:not(:last-of-type) {\n  border-bottom: 1px solid var(--color-border);\n}\n.node-picker[data-v-0becb48e] {\n  display: flex;\n  align-items: center;\n  height: 64px;\n}\n.node-picker__icon[data-v-0becb48e], .node-picker__preview[data-v-0becb48e] {\n  height: 64px;\n  width: 64px;\n  margin: 0 var(--secondary-margin);\n  display: block;\n  flex: 0 0 64px;\n}\n.node-picker__icon[data-v-0becb48e] {\n  color: var(--color-text-maxcontrast);\n}\n.node-picker__icon.folder-icon[data-v-0becb48e] {\n  color: var(--color-primary-element);\n}\n.node-picker__preview[data-v-0becb48e] {\n  overflow: hidden;\n  border-radius: calc(var(--border-radius) * 2);\n  background-position: center;\n  background-size: cover;\n}\n.node-picker__desc[data-v-0becb48e] {\n  display: flex;\n  flex-direction: column;\n}\n.node-picker__desc span[data-v-0becb48e] {\n  white-space: nowrap;\n}[data-v-f0c1b8b3] .modal-container__content {\n  display: flex;\n  overflow: visible;\n  flex-direction: column;\n}\n.conflict-picker[data-v-f0c1b8b3] {\n  --margin: 36px;\n  --secondary-margin: 18px;\n}\n.conflict-picker__header[data-v-f0c1b8b3] {\n  position: sticky;\n  z-index: 10;\n  top: 0;\n  padding: 0 var(--margin);\n  padding-bottom: var(--secondary-margin);\n}\n.conflict-picker__form[data-v-f0c1b8b3] {\n  position: relative;\n  overflow: auto;\n  padding: 0 var(--margin);\n  margin-top: calc(-1 * var(--secondary-margin));\n}\n.conflict-picker fieldset[data-v-f0c1b8b3] {\n  display: grid;\n  width: 100%;\n  margin-top: calc(var(--secondary-margin) * 1.5);\n  padding-bottom: var(--secondary-margin);\n  grid-template-columns: 1fr 1fr;\n}\n.conflict-picker fieldset[data-v-f0c1b8b3] legend {\n  display: flex;\n  align-items: center;\n  width: 100%;\n  margin-bottom: calc(var(--secondary-margin) / 2);\n}\n.conflict-picker fieldset.conflict-picker__all[data-v-f0c1b8b3] {\n  position: sticky;\n  top: 0;\n  margin: 0;\n  padding: var(--secondary-margin) 0;\n  background-image: linear-gradient(to top, transparent, var(--color-main-background-blur) 10%, var(--color-main-background) 15%);\n}\n.conflict-picker fieldset.conflict-picker__all + fieldset[data-v-f0c1b8b3] {\n  margin-top: 0;\n}\n.conflict-picker fieldset.conflict-picker__all[data-v-f0c1b8b3] label {\n  font-weight: bold;\n}\n.conflict-picker .button-vue--disabled[data-v-f0c1b8b3] {\n  cursor: default;\n  opacity: 0.5;\n  filter: saturate(0.7);\n}\n.conflict-picker[data-v-f0c1b8b3] .dialog__actions {\n  width: auto;\n  margin-inline: 12px;\n}\n.conflict-picker[data-v-f0c1b8b3] .dialog__actions span.dialog__actions-separator {\n  margin-left: auto;\n}\n@media screen and (max-width: 768px) {\n.conflict-picker[data-v-f0c1b8b3] {\n    --margin: var(--secondary-margin) !important;\n}\n.conflict-picker__description[data-v-f0c1b8b3] {\n    display: none !important;\n}\n.conflict-picker fieldset[data-v-f0c1b8b3] {\n    grid-template-columns: 1fr !important;\n}\n.conflict-picker fieldset.conflict-picker__all[data-v-f0c1b8b3] {\n    position: static;\n}\n}\n@media screen and (max-width: 512px) {\n.conflict-picker[data-v-f0c1b8b3] .dialog__actions {\n    flex-wrap: wrap;\n}\n.conflict-picker[data-v-f0c1b8b3] .dialog__actions span.dialog__actions-separator {\n    width: 100%;\n}\n}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../css-loader/dist/cjs.js!./ConflictPicker-EWePgg5w.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../css-loader/dist/cjs.js!./ConflictPicker-EWePgg5w.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import '../assets/ConflictPicker-EWePgg5w.css';\nimport { defineComponent } from \"vue\";\nimport { showError } from \"@nextcloud/dialogs\";\nimport { formatFileSize, FileType, getUniqueName } from \"@nextcloud/files\";\nimport { n as normalizeComponent, t, i as isFileSystemEntry, a as n, l as logger } from \"./index-BFpeXJm8.mjs\";\nimport NcCheckboxRadioSwitch from \"@nextcloud/vue/dist/Components/NcCheckboxRadioSwitch.js\";\nimport NcDialog from \"@nextcloud/vue/dist/Components/NcDialog.js\";\nimport NcButton from \"@nextcloud/vue/dist/Components/NcButton.js\";\nimport { generateUrl } from \"@nextcloud/router\";\nimport NcDateTime from \"@nextcloud/vue/dist/Components/NcDateTime.js\";\nconst _sfc_main$5 = {\n  name: \"ArrowRightIcon\",\n  emits: [\"click\"],\n  props: {\n    title: {\n      type: String\n    },\n    fillColor: {\n      type: String,\n      default: \"currentColor\"\n    },\n    size: {\n      type: Number,\n      default: 24\n    }\n  }\n};\nvar _sfc_render$5 = function render() {\n  var _vm = this, _c = _vm._self._c;\n  return _c(\"span\", _vm._b({ staticClass: \"material-design-icon arrow-right-icon\", attrs: { \"aria-hidden\": _vm.title ? null : true, \"aria-label\": _vm.title, \"role\": \"img\" }, on: { \"click\": function($event) {\n    return _vm.$emit(\"click\", $event);\n  } } }, \"span\", _vm.$attrs, false), [_c(\"svg\", { staticClass: \"material-design-icon__svg\", attrs: { \"fill\": _vm.fillColor, \"width\": _vm.size, \"height\": _vm.size, \"viewBox\": \"0 0 24 24\" } }, [_c(\"path\", { attrs: { \"d\": \"M4,11V13H16L10.5,18.5L11.92,19.92L19.84,12L11.92,4.08L10.5,5.5L16,11H4Z\" } }, [_vm.title ? _c(\"title\", [_vm._v(_vm._s(_vm.title))]) : _vm._e()])])]);\n};\nvar _sfc_staticRenderFns$5 = [];\nvar __component__$5 = /* @__PURE__ */ normalizeComponent(\n  _sfc_main$5,\n  _sfc_render$5,\n  _sfc_staticRenderFns$5,\n  false,\n  null,\n  null\n);\nconst ArrowRight = __component__$5.exports;\nconst _sfc_main$4 = {\n  name: \"CloseIcon\",\n  emits: [\"click\"],\n  props: {\n    title: {\n      type: String\n    },\n    fillColor: {\n      type: String,\n      default: \"currentColor\"\n    },\n    size: {\n      type: Number,\n      default: 24\n    }\n  }\n};\nvar _sfc_render$4 = function render2() {\n  var _vm = this, _c = _vm._self._c;\n  return _c(\"span\", _vm._b({ staticClass: \"material-design-icon close-icon\", attrs: { \"aria-hidden\": _vm.title ? null : true, \"aria-label\": _vm.title, \"role\": \"img\" }, on: { \"click\": function($event) {\n    return _vm.$emit(\"click\", $event);\n  } } }, \"span\", _vm.$attrs, false), [_c(\"svg\", { staticClass: \"material-design-icon__svg\", attrs: { \"fill\": _vm.fillColor, \"width\": _vm.size, \"height\": _vm.size, \"viewBox\": \"0 0 24 24\" } }, [_c(\"path\", { attrs: { \"d\": \"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" } }, [_vm.title ? _c(\"title\", [_vm._v(_vm._s(_vm.title))]) : _vm._e()])])]);\n};\nvar _sfc_staticRenderFns$4 = [];\nvar __component__$4 = /* @__PURE__ */ normalizeComponent(\n  _sfc_main$4,\n  _sfc_render$4,\n  _sfc_staticRenderFns$4,\n  false,\n  null,\n  null\n);\nconst Close = __component__$4.exports;\nconst _sfc_main$3 = {\n  name: \"FileIcon\",\n  emits: [\"click\"],\n  props: {\n    title: {\n      type: String\n    },\n    fillColor: {\n      type: String,\n      default: \"currentColor\"\n    },\n    size: {\n      type: Number,\n      default: 24\n    }\n  }\n};\nvar _sfc_render$3 = function render3() {\n  var _vm = this, _c = _vm._self._c;\n  return _c(\"span\", _vm._b({ staticClass: \"material-design-icon file-icon\", attrs: { \"aria-hidden\": _vm.title ? null : true, \"aria-label\": _vm.title, \"role\": \"img\" }, on: { \"click\": function($event) {\n    return _vm.$emit(\"click\", $event);\n  } } }, \"span\", _vm.$attrs, false), [_c(\"svg\", { staticClass: \"material-design-icon__svg\", attrs: { \"fill\": _vm.fillColor, \"width\": _vm.size, \"height\": _vm.size, \"viewBox\": \"0 0 24 24\" } }, [_c(\"path\", { attrs: { \"d\": \"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z\" } }, [_vm.title ? _c(\"title\", [_vm._v(_vm._s(_vm.title))]) : _vm._e()])])]);\n};\nvar _sfc_staticRenderFns$3 = [];\nvar __component__$3 = /* @__PURE__ */ normalizeComponent(\n  _sfc_main$3,\n  _sfc_render$3,\n  _sfc_staticRenderFns$3,\n  false,\n  null,\n  null\n);\nconst FileSvg = __component__$3.exports;\nconst _sfc_main$2 = {\n  name: \"FolderIcon\",\n  emits: [\"click\"],\n  props: {\n    title: {\n      type: String\n    },\n    fillColor: {\n      type: String,\n      default: \"currentColor\"\n    },\n    size: {\n      type: Number,\n      default: 24\n    }\n  }\n};\nvar _sfc_render$2 = function render4() {\n  var _vm = this, _c = _vm._self._c;\n  return _c(\"span\", _vm._b({ staticClass: \"material-design-icon folder-icon\", attrs: { \"aria-hidden\": _vm.title ? null : true, \"aria-label\": _vm.title, \"role\": \"img\" }, on: { \"click\": function($event) {\n    return _vm.$emit(\"click\", $event);\n  } } }, \"span\", _vm.$attrs, false), [_c(\"svg\", { staticClass: \"material-design-icon__svg\", attrs: { \"fill\": _vm.fillColor, \"width\": _vm.size, \"height\": _vm.size, \"viewBox\": \"0 0 24 24\" } }, [_c(\"path\", { attrs: { \"d\": \"M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z\" } }, [_vm.title ? _c(\"title\", [_vm._v(_vm._s(_vm.title))]) : _vm._e()])])]);\n};\nvar _sfc_staticRenderFns$2 = [];\nvar __component__$2 = /* @__PURE__ */ normalizeComponent(\n  _sfc_main$2,\n  _sfc_render$2,\n  _sfc_staticRenderFns$2,\n  false,\n  null,\n  null\n);\nconst FolderSvg = __component__$2.exports;\nconst PREVIEW_SIZE = 64;\nconst _sfc_main$1 = defineComponent({\n  name: \"NodesPicker\",\n  components: {\n    FileSvg,\n    FolderSvg,\n    NcCheckboxRadioSwitch,\n    NcDateTime\n  },\n  props: {\n    incoming: {\n      type: [File, Object],\n      required: true\n    },\n    existing: {\n      type: Object,\n      required: true\n    },\n    newSelected: {\n      type: Array,\n      required: true\n    },\n    oldSelected: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      asyncPreview: null,\n      incomingFile: null\n    };\n  },\n  computed: {\n    /**\n     * Whether the incoming or existing file is selected.\n     * This is used by the parent component to ensure\n     * that the user has selected at least one of the two files.\n     */\n    isEnoughSelected() {\n      return this.isChecked(this.incoming, this.newSelected) || this.isChecked(this.existing, this.oldSelected);\n    },\n    incomingPreview() {\n      if (!this.incomingFile) {\n        return null;\n      }\n      const preview = this.previewUrl(this.incomingFile);\n      return preview ?? this.asyncPreview;\n    },\n    incomingLastModified() {\n      if (!this.incomingFile) {\n        return null;\n      }\n      return this.lastModified(this.incomingFile);\n    },\n    incomingSize() {\n      if (!this.incomingFile) {\n        return t(\"Unknown size\");\n      }\n      return this.size(this.incomingFile);\n    },\n    existingPreview() {\n      return this.previewUrl(this.existing);\n    },\n    existingLastModified() {\n      return this.lastModified(this.existing);\n    }\n  },\n  watch: {\n    /**\n     * Watch \"incoming\" to update \"incomingFile\"\n     */\n    incoming: {\n      // Run the watcher also on mount with initial \"incoming\" value\n      immediate: true,\n      async handler() {\n        if (this.incoming instanceof File) {\n          this.incomingFile = this.incoming;\n        } else if (this.incoming instanceof FileSystemFileEntry) {\n          this.incomingFile = await new Promise((resolve, reject) => this.incoming.file(resolve, reject));\n        } else {\n          this.incomingFile = null;\n        }\n      }\n    }\n  },\n  methods: {\n    lastModified(node) {\n      const lastModified = node instanceof File ? new Date(node.lastModified) : node.mtime;\n      return lastModified ?? null;\n    },\n    size(node) {\n      if (node.size) {\n        return formatFileSize(node.size, true);\n      }\n      return t(\"Unknown size\");\n    },\n    previewUrl(node) {\n      if (node instanceof File) {\n        this.previewImage(node).then((url) => {\n          this.asyncPreview = url;\n        });\n        return null;\n      }\n      if (node.type === FileType.Folder) {\n        return null;\n      }\n      try {\n        const previewUrl = node.attributes.previewUrl || generateUrl(\"/core/preview?fileId={fileid}\", {\n          fileid: node.fileid\n        });\n        const url = new URL(window.location.origin + previewUrl);\n        url.searchParams.set(\"x\", PREVIEW_SIZE.toString());\n        url.searchParams.set(\"y\", PREVIEW_SIZE.toString());\n        url.searchParams.set(\"mimeFallback\", \"true\");\n        const etag = node.attributes?.etag || \"\";\n        url.searchParams.set(\"v\", etag.slice(0, 6));\n        return url.href;\n      } catch (e) {\n        return null;\n      }\n    },\n    isFolder(node) {\n      if (isFileSystemEntry(node)) {\n        return node.isDirectory;\n      }\n      node = node;\n      return node.type === FileType.Folder || node.type === \"httpd/unix-directory\";\n    },\n    isChecked(node, selected) {\n      return selected.includes(node);\n    },\n    onUpdateIncomingChecked(checked) {\n      if (checked) {\n        this.$emit(\"update:newSelected\", [this.incoming, ...this.newSelected]);\n      } else {\n        this.$emit(\"update:newSelected\", this.newSelected.filter((node) => node !== this.incoming));\n      }\n    },\n    onUpdateExistingChecked(checked) {\n      if (checked) {\n        this.$emit(\"update:oldSelected\", [this.existing, ...this.oldSelected]);\n      } else {\n        this.$emit(\"update:oldSelected\", this.oldSelected.filter((node) => node !== this.existing));\n      }\n    },\n    /**\n     * Get the preview Image of a file\n     * @param file the soon-to-be-uploaded File\n     */\n    async previewImage(file) {\n      return new Promise((resolve) => {\n        if (file instanceof File && file.type.startsWith(\"image/\")) {\n          const reader = new FileReader();\n          reader.onload = async (e) => {\n            const result = e?.target?.result;\n            if (result instanceof ArrayBuffer) {\n              const blob = new Blob([result], { type: file.type });\n              const url = URL.createObjectURL(blob);\n              resolve(url);\n              return;\n            }\n            resolve(null);\n          };\n          reader.readAsArrayBuffer(file);\n        } else {\n          resolve(null);\n        }\n      });\n    },\n    t\n  }\n});\nvar _sfc_render$1 = function render5() {\n  var _vm = this, _c = _vm._self._c;\n  _vm._self._setupProxy;\n  return _c(\"fieldset\", { staticClass: \"node-picker__wrapper\", attrs: { \"data-cy-conflict-picker-fieldset\": _vm.existing.basename } }, [_c(\"legend\", [_vm._v(_vm._s(_vm.existing.basename))]), _c(\"NcCheckboxRadioSwitch\", { attrs: { \"checked\": _vm.isChecked(_vm.incoming, _vm.newSelected), \"required\": !_vm.isEnoughSelected, \"data-cy-conflict-picker-input-incoming\": _vm.existing.basename }, on: { \"update:checked\": _vm.onUpdateIncomingChecked } }, [_c(\"span\", { staticClass: \"node-picker node-picker--incoming\" }, [!_vm.incomingPreview ? [_vm.isFolder(_vm.incoming) ? _c(\"FolderSvg\", { staticClass: \"node-picker__icon\", attrs: { \"size\": 48 } }) : _c(\"FileSvg\", { staticClass: \"node-picker__icon\", attrs: { \"size\": 48 } })] : _c(\"img\", { staticClass: \"node-picker__preview\", attrs: { \"src\": _vm.incomingPreview, \"alt\": _vm.t(\"Preview image\"), \"loading\": \"lazy\" } }), _c(\"span\", { staticClass: \"node-picker__desc\" }, [_c(\"span\", { staticClass: \"node-picker__name\" }, [_vm._v(_vm._s(_vm.t(\"New version\")))]), _vm.incomingLastModified ? _c(\"NcDateTime\", { staticClass: \"node-picker__mtime\", attrs: { \"timestamp\": _vm.incomingLastModified, \"relative-time\": false, \"format\": { timeStyle: \"short\", dateStyle: \"medium\" } } }) : _c(\"span\", { staticClass: \"node-picker__mtime\" }, [_vm._v(\" \" + _vm._s(_vm.t(\"Last modified date unknown\")) + \" \")]), _c(\"span\", { staticClass: \"node-picker__size\" }, [_vm._v(_vm._s(_vm.incomingSize))])], 1)], 2)]), _c(\"NcCheckboxRadioSwitch\", { attrs: { \"checked\": _vm.isChecked(_vm.existing, _vm.oldSelected), \"required\": !_vm.isEnoughSelected, \"data-cy-conflict-picker-input-existing\": _vm.existing.basename }, on: { \"update:checked\": _vm.onUpdateExistingChecked } }, [_c(\"span\", { staticClass: \"node-picker node-picker--existing\" }, [!_vm.existingPreview ? [_vm.isFolder(_vm.existing) ? _c(\"FolderSvg\", { staticClass: \"node-picker__icon\", attrs: { \"size\": 48 } }) : _c(\"FileSvg\", { staticClass: \"node-picker__icon\", attrs: { \"size\": 48 } })] : _c(\"img\", { staticClass: \"node-picker__preview\", attrs: { \"src\": _vm.existingPreview, \"alt\": _vm.t(\"Preview image\"), \"loading\": \"lazy\" } }), _c(\"span\", { staticClass: \"node-picker__desc\" }, [_c(\"span\", { staticClass: \"node-picker__name\" }, [_vm._v(_vm._s(_vm.t(\"Existing version\")))]), _vm.existingLastModified ? _c(\"NcDateTime\", { staticClass: \"node-picker__mtime\", attrs: { \"timestamp\": _vm.existingLastModified, \"relative-time\": false, \"format\": { timeStyle: \"short\", dateStyle: \"medium\" } } }) : _c(\"span\", { staticClass: \"node-picker__mtime\" }, [_vm._v(\" \" + _vm._s(_vm.t(\"Last modified date unknown\")) + \" \")]), _c(\"span\", { staticClass: \"node-picker__size\" }, [_vm._v(_vm._s(_vm.size(_vm.existing)))])], 1)], 2)])], 1);\n};\nvar _sfc_staticRenderFns$1 = [];\nvar __component__$1 = /* @__PURE__ */ normalizeComponent(\n  _sfc_main$1,\n  _sfc_render$1,\n  _sfc_staticRenderFns$1,\n  false,\n  null,\n  \"0becb48e\"\n);\nconst NodesPicker = __component__$1.exports;\nconst _sfc_main = defineComponent({\n  name: \"ConflictPicker\",\n  components: {\n    ArrowRight,\n    Close,\n    NcButton,\n    NcCheckboxRadioSwitch,\n    NcDialog,\n    NodesPicker\n  },\n  props: {\n    /** Directory/context file name */\n    dirname: {\n      type: String,\n      default: \"\"\n    },\n    /** All the existing files in the current directory */\n    content: {\n      type: Array,\n      required: true\n    },\n    /** New files being moved/uploaded */\n    conflicts: {\n      type: Array,\n      required: true\n    },\n    /**\n     * If set to true no hint about overwriting directory content will be shown\n     */\n    recursiveUpload: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: [\"cancel\", \"submit\"],\n  setup() {\n    return {\n      blockedTitle: t(\"You need to select at least one version of each file to continue.\")\n    };\n  },\n  data() {\n    return {\n      // computed list of conflicting files already present in the directory\n      files: [],\n      opened: true,\n      newSelected: [],\n      oldSelected: []\n    };\n  },\n  computed: {\n    name() {\n      if (this?.dirname?.trim?.() !== \"\") {\n        return n(\"{count} file conflict in {dirname}\", \"{count} file conflicts in {dirname}\", this.conflicts.length, {\n          count: this.conflicts.length,\n          dirname: this.dirname\n        });\n      }\n      return n(\"{count} file conflict\", \"{count} files conflict\", this.conflicts.length, { count: this.conflicts.length });\n    },\n    skipButtonLabel() {\n      return n(\"Skip this file\", \"Skip {count} files\", this.conflicts.length, { count: this.conflicts.length });\n    },\n    // Select all incoming files\n    selectAllNewBind() {\n      const label = this.isNoneNewSelected || this.isSomeNewSelected ? this.t(\"Select all\") : this.t(\"Unselect all\");\n      return {\n        \"aria-label\": label,\n        checked: this.isAllNewSelected,\n        indeterminate: this.isSomeNewSelected,\n        title: label\n      };\n    },\n    isAllNewSelected() {\n      return this.newSelected.length === this.conflicts.length;\n    },\n    isNoneNewSelected() {\n      return this.newSelected.length === 0;\n    },\n    isSomeNewSelected() {\n      return !this.isAllNewSelected && !this.isNoneNewSelected;\n    },\n    // Select all existing files\n    selectAllOldBind() {\n      const label = this.isNoneOldSelected || this.isSomeOldSelected ? this.t(\"Select all\") : this.t(\"Unselect all\");\n      return {\n        \"aria-label\": label,\n        checked: this.isAllOldSelected,\n        indeterminate: this.isSomeOldSelected,\n        title: label\n      };\n    },\n    isAllOldSelected() {\n      return this.oldSelected.length === this.files.length;\n    },\n    isNoneOldSelected() {\n      return this.oldSelected.length === 0;\n    },\n    isSomeOldSelected() {\n      return !this.isAllOldSelected && !this.isNoneOldSelected;\n    },\n    // Global handlings\n    isEnoughSelected() {\n      if (this.isAllOldSelected || this.isAllNewSelected) {\n        return true;\n      }\n      return this.$refs?.nodesPicker?.every?.((picker) => picker.isEnoughSelected);\n    }\n  },\n  mounted() {\n    this.files = this.conflicts.map((conflict) => {\n      const name = conflict instanceof File || isFileSystemEntry(conflict) ? conflict.name : conflict.basename;\n      return this.content.find((node) => node.basename === name);\n    }).filter(Boolean);\n    if (this.conflicts.length === 0 || this.files.length === 0) {\n      const error = new Error(\"ConflictPicker: files and conflicts must not be empty\");\n      this.onCancel(error);\n      throw error;\n    }\n    if (this.conflicts.length !== this.files.length) {\n      const error = new Error(\"ConflictPicker: files and conflicts must have the same length. Make sure you filter out non conflicting files from the conflicts array.\");\n      this.onCancel(error);\n      throw error;\n    }\n    logger.debug(\"ConflictPicker initialised\", { files: this.files, conflicts: this.conflicts, content: this.content });\n  },\n  methods: {\n    onCancel(error) {\n      this.opened = false;\n      this.$emit(\"cancel\", error);\n    },\n    onSkip() {\n      logger.debug(\"Conflict skipped. Ignoring all conflicting files\");\n      this.opened = false;\n      this.$emit(\"submit\", {\n        selected: [],\n        renamed: []\n      });\n    },\n    onSubmit() {\n      if (!this.isEnoughSelected) {\n        this.scrollValidityInputIntoView();\n        this.$refs.form.reportValidity();\n        showError(this.blockedTitle);\n        return;\n      }\n      const selectedOldNames = this.oldSelected.map((node) => node.basename);\n      const directoryContent = this.content.map((node) => node.basename);\n      const renamed = [];\n      const toRename = this.newSelected.filter((node) => {\n        const name = node instanceof File || isFileSystemEntry(node) ? node.name : node.basename;\n        return selectedOldNames.includes(name);\n      });\n      if (toRename.length > 0) {\n        toRename.forEach((file) => {\n          const name = file instanceof File || isFileSystemEntry(file) ? file.name : file.basename;\n          const newName = getUniqueName(name, directoryContent);\n          if (file instanceof File || isFileSystemEntry(file)) {\n            Object.defineProperty(file, \"name\", { value: newName });\n            renamed.push(file);\n            return;\n          }\n          file.rename(newName);\n          renamed.push(file);\n        });\n      }\n      const selected = this.newSelected.filter((node) => {\n        const name = node instanceof File || isFileSystemEntry(node) ? node.name : node.basename;\n        return !selectedOldNames.includes(name) && !toRename.includes(node);\n      });\n      logger.debug(\"Conflict resolved\", { selected, renamed });\n      this.opened = false;\n      this.$emit(\"submit\", {\n        selected,\n        renamed\n      });\n    },\n    /**\n     * Scroll the first invalid input into view.\n     * This is needed because the browser uses behavior: \"nearest\" by default.\n     */\n    scrollValidityInputIntoView() {\n      const selector = '.checkbox-radio-switch input[type=\"checkbox\"]';\n      const checkboxes = Array.from(this.$el.querySelectorAll(selector));\n      checkboxes.forEach((input) => input?.setCustomValidity?.(\"\"));\n      const invalidInput = this.$el.querySelector(selector + \":invalid\");\n      if (invalidInput) {\n        invalidInput.setCustomValidity(this.blockedTitle);\n        invalidInput.scrollIntoView({ behavior: \"instant\", block: \"center\" });\n      }\n    },\n    onSelectAllNew(selected) {\n      if (selected) {\n        logger.debug(\"Selected all new files\");\n        this.newSelected = this.conflicts;\n      } else {\n        logger.debug(\"Cleared new selection\");\n        this.newSelected = [];\n      }\n    },\n    onSelectAllOld(selected) {\n      if (selected) {\n        logger.debug(\"Selected all existing files\");\n        this.oldSelected = this.files;\n      } else {\n        logger.debug(\"Cleared old selection\");\n        this.oldSelected = [];\n      }\n    },\n    t\n  }\n});\nvar _sfc_render = function render6() {\n  var _vm = this, _c = _vm._self._c;\n  _vm._self._setupProxy;\n  return _c(\"NcDialog\", { staticClass: \"conflict-picker\", attrs: { \"can-close\": \"\", \"data-cy-conflict-picker\": \"\", \"close-on-click-outside\": false, \"show\": _vm.opened, \"name\": _vm.name, \"size\": \"large\" }, on: { \"closing\": _vm.onCancel }, scopedSlots: _vm._u([{ key: \"actions\", fn: function() {\n    return [_c(\"NcButton\", { attrs: { \"aria-label\": _vm.t(\"Cancel\"), \"title\": _vm.t(\"Cancel the entire operation\"), \"data-cy-conflict-picker-cancel\": \"\", \"type\": \"tertiary\" }, on: { \"click\": _vm.onCancel }, scopedSlots: _vm._u([{ key: \"icon\", fn: function() {\n      return [_c(\"Close\", { attrs: { \"size\": 20 } })];\n    }, proxy: true }]) }, [_vm._v(\" \" + _vm._s(_vm.t(\"Cancel\")) + \" \")]), _c(\"span\", { staticClass: \"dialog__actions-separator\" }), _c(\"NcButton\", { attrs: { \"aria-label\": _vm.skipButtonLabel, \"data-cy-conflict-picker-skip\": \"\" }, on: { \"click\": _vm.onSkip }, scopedSlots: _vm._u([{ key: \"icon\", fn: function() {\n      return [_c(\"Close\", { attrs: { \"size\": 20 } })];\n    }, proxy: true }]) }, [_vm._v(\" \" + _vm._s(_vm.skipButtonLabel) + \" \")]), _c(\"NcButton\", { class: { \"button-vue--disabled\": !_vm.isEnoughSelected }, attrs: { \"aria-label\": _vm.t(\"Continue\"), \"title\": _vm.isEnoughSelected ? \"\" : _vm.blockedTitle, \"data-cy-conflict-picker-submit\": \"\", \"native-type\": \"submit\", \"type\": \"primary\" }, on: { \"click\": function($event) {\n      $event.stopPropagation();\n      $event.preventDefault();\n      return _vm.onSubmit.apply(null, arguments);\n    } }, scopedSlots: _vm._u([{ key: \"icon\", fn: function() {\n      return [_c(\"ArrowRight\", { attrs: { \"size\": 20 } })];\n    }, proxy: true }]) }, [_vm._v(\" \" + _vm._s(_vm.t(\"Continue\")) + \" \")])];\n  }, proxy: true }]) }, [_c(\"div\", { staticClass: \"conflict-picker__header\" }, [_c(\"p\", { staticClass: \"conflict-picker__description\", attrs: { \"id\": \"conflict-picker-description\" } }, [_vm._v(\" \" + _vm._s(_vm.t(\"Which files do you want to keep?\"))), _c(\"br\"), _vm._v(\" \" + _vm._s(_vm.t(\"If you select both versions, the incoming file will have a number added to its name.\"))), _c(\"br\"), _vm.recursiveUpload ? [_vm._v(\" \" + _vm._s(_vm.t(\"When an incoming folder is selected, the content is written into the existing folder and a recursive conflict resolution is performed.\")) + \" \")] : [_vm._v(\" \" + _vm._s(_vm.t(\"When an incoming folder is selected, any conflicting files within it will also be overwritten.\")) + \" \")]], 2)]), _c(\"form\", { ref: \"form\", staticClass: \"conflict-picker__form\", attrs: { \"aria-labelledby\": \"conflict-picker-description\", \"data-cy-conflict-picker-form\": \"\" }, on: { \"submit\": function($event) {\n    $event.preventDefault();\n    $event.stopPropagation();\n    return _vm.onSubmit.apply(null, arguments);\n  } } }, [_c(\"fieldset\", { staticClass: \"conflict-picker__all\", attrs: { \"data-cy-conflict-picker-fieldset\": \"all\" } }, [_c(\"legend\", { staticClass: \"hidden-visually\" }, [_vm._v(\" \" + _vm._s(_vm.t(\"Select all checkboxes\")) + \" \")]), _c(\"NcCheckboxRadioSwitch\", _vm._b({ attrs: { \"data-cy-conflict-picker-input-incoming\": \"all\" }, on: { \"update:checked\": _vm.onSelectAllNew } }, \"NcCheckboxRadioSwitch\", _vm.selectAllNewBind, false), [_vm._v(\" \" + _vm._s(_vm.t(\"Select all new files\")) + \" \")]), _c(\"NcCheckboxRadioSwitch\", _vm._b({ attrs: { \"data-cy-conflict-picker-input-existing\": \"all\" }, on: { \"update:checked\": _vm.onSelectAllOld } }, \"NcCheckboxRadioSwitch\", _vm.selectAllOldBind, false), [_vm._v(\" \" + _vm._s(_vm.t(\"Select all existing files\")) + \" \")])], 1), _vm._l(_vm.files, function(node, index) {\n    return _c(\"NodesPicker\", { key: node.fileid, ref: \"nodesPicker\", refInFor: true, attrs: { \"incoming\": _vm.conflicts[index], \"existing\": _vm.files[index], \"new-selected\": _vm.newSelected, \"old-selected\": _vm.oldSelected }, on: { \"update:newSelected\": function($event) {\n      _vm.newSelected = $event;\n    }, \"update:new-selected\": function($event) {\n      _vm.newSelected = $event;\n    }, \"update:oldSelected\": function($event) {\n      _vm.oldSelected = $event;\n    }, \"update:old-selected\": function($event) {\n      _vm.oldSelected = $event;\n    } } });\n  })], 2)]);\n};\nvar _sfc_staticRenderFns = [];\nvar __component__ = /* @__PURE__ */ normalizeComponent(\n  _sfc_main,\n  _sfc_render,\n  _sfc_staticRenderFns,\n  false,\n  null,\n  \"f0c1b8b3\"\n);\nconst ConflictPicker = __component__.exports;\nexport {\n  ConflictPicker as default\n};\n"],"names":[],"sourceRoot":""}