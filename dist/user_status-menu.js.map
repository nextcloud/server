{"version":3,"file":"user_status-menu.js?v=79627d5cd63c10158499","mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACjvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACnxHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACvCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AGAA;AAGA;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACRA;AACA;AACA;AACA;AACA;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACNA;AACA;AACA;AACA;AACA;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACvFA;;;;;AEAA;AACA;AACA;AACA;AACA","sources":["webpack:///nextcloud/apps/user_status/src/menu.js","webpack:///nextcloud/apps/user_status/src/mixins/OnlineStatusMixin.js","webpack:///nextcloud/apps/user_status/src/services/clearAtService.js","webpack:///nextcloud/apps/user_status/src/services/dateService.js","webpack:///nextcloud/apps/user_status/src/services/heartbeatService.js","webpack:///nextcloud/apps/user_status/src/services/predefinedStatusService.js","webpack:///nextcloud/apps/user_status/src/services/statusService.js","webpack:///nextcloud/apps/user_status/src/store/index.js","webpack:///nextcloud/apps/user_status/src/store/predefinedStatuses.js","webpack:///nextcloud/apps/user_status/src/store/userBackupStatus.js","webpack:///nextcloud/apps/user_status/src/store/userStatus.js","webpack:///nextcloud/apps/user_status/src/UserStatus.vue?vue&type=script&lang=js","webpack:///nextcloud/apps/user_status/src/UserStatus.vue?vue&type=template&id=03512cb0&scoped=true","webpack:///nextcloud/apps/user_status/src/UserStatus.vue?vue&type=style&index=0&id=03512cb0&lang=scss&scoped=true","webpack://nextcloud/./apps/user_status/src/UserStatus.vue?c9ba","webpack:///nextcloud/apps/user_status/src/UserStatus.vue","webpack://nextcloud/./apps/user_status/src/UserStatus.vue?b482","webpack://nextcloud/./apps/user_status/src/UserStatus.vue?3f2a","webpack://nextcloud/./apps/user_status/src/UserStatus.vue?e065","webpack:///nextcloud/node_modules/@nextcloud/vue/dist/Components/NcUserStatusIcon.mjs","webpack:///nextcloud/webpack/bootstrap","webpack:///nextcloud/webpack/runtime/chunk loaded","webpack:///nextcloud/webpack/runtime/compat get default export","webpack:///nextcloud/webpack/runtime/define property getters","webpack:///nextcloud/webpack/runtime/ensure chunk","webpack:///nextcloud/webpack/runtime/get javascript chunk filename","webpack:///nextcloud/webpack/runtime/global","webpack:///nextcloud/webpack/runtime/hasOwnProperty shorthand","webpack:///nextcloud/webpack/runtime/load script","webpack:///nextcloud/webpack/runtime/make namespace object","webpack:///nextcloud/webpack/runtime/node module decorator","webpack:///nextcloud/webpack/runtime/publicPath","webpack:///nextcloud/webpack/runtime/jsonp chunk loading","webpack:///nextcloud/webpack/runtime/nonce","webpack:///nextcloud/webpack/before-startup","webpack:///nextcloud/webpack/startup","webpack:///nextcloud/webpack/after-startup"],"sourcesContent":["/**\n * SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { getCSPNonce } from '@nextcloud/auth';\nimport { subscribe } from '@nextcloud/event-bus';\nimport Vue from 'vue';\nimport UserStatus from \"./UserStatus.vue\";\nimport store from \"./store/index.js\";\n\n// eslint-disable-next-line camelcase\n__webpack_nonce__ = getCSPNonce();\nVue.prototype.t = t;\nVue.prototype.$t = t;\nconst mountPoint = document.getElementById('user_status-menu-entry');\nconst mountMenuEntry = () => {\n  const mountPoint = document.getElementById('user_status-menu-entry');\n  // eslint-disable-next-line no-new\n  new Vue({\n    el: mountPoint,\n    render: h => h(UserStatus),\n    store\n  });\n};\nif (mountPoint) {\n  mountMenuEntry();\n} else {\n  subscribe('core:user-menu:mounted', mountMenuEntry);\n}\n\n// Register dashboard status\ndocument.addEventListener('DOMContentLoaded', function () {\n  if (!OCA.Dashboard) {\n    return;\n  }\n  OCA.Dashboard.registerStatus('status', el => {\n    const Dashboard = Vue.extend(UserStatus);\n    return new Dashboard({\n      propsData: {\n        inline: true\n      },\n      store\n    }).$mount(el);\n  });\n});","/**\n * SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { mapState } from 'vuex';\nimport { showError } from '@nextcloud/dialogs';\nexport default {\n  computed: {\n    ...mapState({\n      statusType: state => state.userStatus.status,\n      statusIsUserDefined: state => state.userStatus.statusIsUserDefined,\n      customIcon: state => state.userStatus.icon,\n      customMessage: state => state.userStatus.message\n    }),\n    /**\n     * The message displayed in the top right corner\n     *\n     * @return {string}\n     */\n    visibleMessage() {\n      if (this.customIcon && this.customMessage) {\n        return `${this.customIcon} ${this.customMessage}`;\n      }\n      if (this.customMessage) {\n        return this.customMessage;\n      }\n      if (this.statusIsUserDefined) {\n        switch (this.statusType) {\n          case 'online':\n            return this.$t('user_status', 'Online');\n          case 'away':\n          case 'busy':\n            return this.$t('user_status', 'Away');\n          case 'dnd':\n            return this.$t('user_status', 'Do not disturb');\n          case 'invisible':\n            return this.$t('user_status', 'Invisible');\n          case 'offline':\n            return this.$t('user_status', 'Offline');\n        }\n      }\n      return this.$t('user_status', 'Set status');\n    }\n  },\n  methods: {\n    /**\n     * Changes the user-status\n     *\n     * @param {string} statusType (online / away / dnd / invisible)\n     */\n    async changeStatus(statusType) {\n      try {\n        await this.$store.dispatch('setStatus', {\n          statusType\n        });\n      } catch (err) {\n        showError(this.$t('user_status', 'There was an error saving the new status'));\n        console.debug(err);\n      }\n    }\n  }\n};","/**\n * SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { dateFactory } from \"./dateService.js\";\nimport moment from '@nextcloud/moment';\n\n/**\n * Calculates the actual clearAt timestamp\n *\n * @param {object | null} clearAt The clear-at config\n * @return {number | null}\n */\nconst getTimestampForClearAt = clearAt => {\n  if (clearAt === null) {\n    return null;\n  }\n  const date = dateFactory();\n  if (clearAt.type === 'period') {\n    date.setSeconds(date.getSeconds() + clearAt.time);\n    return Math.floor(date.getTime() / 1000);\n  }\n  if (clearAt.type === 'end-of') {\n    switch (clearAt.time) {\n      case 'day':\n      case 'week':\n        return Number(moment(date).endOf(clearAt.time).format('X'));\n    }\n  }\n  // This is not an officially supported type\n  // but only used internally to show the remaining time\n  // in the Set Status Modal\n  if (clearAt.type === '_time') {\n    return clearAt.time;\n  }\n  return null;\n};\nexport { getTimestampForClearAt };","/**\n * SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nconst dateFactory = () => {\n  return new Date();\n};\nexport { dateFactory };","/**\n * SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport HttpClient from '@nextcloud/axios';\nimport { generateOcsUrl } from '@nextcloud/router';\n\n/**\n * Sends a heartbeat\n *\n * @param {boolean} isAway Whether or not the user is active\n * @return {Promise<void>}\n */\nconst sendHeartbeat = async isAway => {\n  const url = generateOcsUrl('apps/user_status/api/v1/heartbeat?format=json');\n  const response = await HttpClient.put(url, {\n    status: isAway ? 'away' : 'online'\n  });\n  return response.data.ocs.data;\n};\nexport { sendHeartbeat };","/**\n * SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport HttpClient from '@nextcloud/axios';\nimport { generateOcsUrl } from '@nextcloud/router';\n\n/**\n * Fetches all predefined statuses from the server\n *\n * @return {Promise<void>}\n */\nconst fetchAllPredefinedStatuses = async () => {\n  const url = generateOcsUrl('apps/user_status/api/v1/predefined_statuses?format=json');\n  const response = await HttpClient.get(url);\n  return response.data.ocs.data;\n};\nexport { fetchAllPredefinedStatuses };","/**\n * SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport HttpClient from '@nextcloud/axios';\nimport { generateOcsUrl } from '@nextcloud/router';\n\n/**\n * Fetches the current user-status\n *\n * @return {Promise<object>}\n */\nconst fetchCurrentStatus = async () => {\n  const url = generateOcsUrl('apps/user_status/api/v1/user_status');\n  const response = await HttpClient.get(url);\n  return response.data.ocs.data;\n};\n\n/**\n * Fetches the current user-status\n *\n * @param {string} userId\n * @return {Promise<object>}\n */\nconst fetchBackupStatus = async userId => {\n  const url = generateOcsUrl('apps/user_status/api/v1/statuses/{userId}', {\n    userId: '_' + userId\n  });\n  const response = await HttpClient.get(url);\n  return response.data.ocs.data;\n};\n\n/**\n * Sets the status\n *\n * @param {string} statusType The status (online / away / dnd / invisible)\n * @return {Promise<void>}\n */\nconst setStatus = async statusType => {\n  const url = generateOcsUrl('apps/user_status/api/v1/user_status/status');\n  await HttpClient.put(url, {\n    statusType\n  });\n};\n\n/**\n * Sets a message based on our predefined statuses\n *\n * @param {string} messageId The id of the message, taken from predefined status service\n * @param {number | null} clearAt When to automatically clean the status\n * @return {Promise<void>}\n */\nconst setPredefinedMessage = async function (messageId) {\n  let clearAt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  const url = generateOcsUrl('apps/user_status/api/v1/user_status/message/predefined?format=json');\n  await HttpClient.put(url, {\n    messageId,\n    clearAt\n  });\n};\n\n/**\n * Sets a custom message\n *\n * @param {string} message The user-defined message\n * @param {string | null} statusIcon The user-defined icon\n * @param {number | null} clearAt When to automatically clean the status\n * @return {Promise<void>}\n */\nconst setCustomMessage = async function (message) {\n  let statusIcon = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  let clearAt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  const url = generateOcsUrl('apps/user_status/api/v1/user_status/message/custom?format=json');\n  await HttpClient.put(url, {\n    message,\n    statusIcon,\n    clearAt\n  });\n};\n\n/**\n * Clears the current status of the user\n *\n * @return {Promise<void>}\n */\nconst clearMessage = async () => {\n  const url = generateOcsUrl('apps/user_status/api/v1/user_status/message?format=json');\n  await HttpClient.delete(url);\n};\n\n/**\n * Revert the automated status\n *\n * @param {string} messageId\n * @return {Promise<object>}\n */\nconst revertToBackupStatus = async messageId => {\n  const url = generateOcsUrl('apps/user_status/api/v1/user_status/revert/{messageId}', {\n    messageId\n  });\n  const response = await HttpClient.delete(url);\n  return response.data.ocs.data;\n};\nexport { fetchCurrentStatus, fetchBackupStatus, setStatus, setCustomMessage, setPredefinedMessage, clearMessage, revertToBackupStatus };","/**\n * SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport Vue from 'vue';\nimport Vuex, { Store } from 'vuex';\nimport predefinedStatuses from \"./predefinedStatuses.js\";\nimport userStatus from \"./userStatus.js\";\nimport userBackupStatus from \"./userBackupStatus.js\";\nVue.use(Vuex);\nexport default new Store({\n  modules: {\n    predefinedStatuses,\n    userStatus,\n    userBackupStatus\n  },\n  strict: true\n});","/**\n * SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { fetchAllPredefinedStatuses } from \"../services/predefinedStatusService.js\";\nconst state = {\n  predefinedStatuses: []\n};\nconst mutations = {\n  /**\n   * Adds a predefined status to the state\n   *\n   * @param {object} state The Vuex state\n   * @param {object} status The status to add\n   */\n  addPredefinedStatus(state, status) {\n    state.predefinedStatuses = [...state.predefinedStatuses, status];\n  }\n};\nconst getters = {\n  statusesHaveLoaded(state) {\n    return state.predefinedStatuses.length > 0;\n  }\n};\nconst actions = {\n  /**\n   * Loads all predefined statuses from the server\n   *\n   * @param {object} vuex The Vuex components\n   * @param {Function} vuex.commit The Vuex commit function\n   * @param {object} vuex.state -\n   */\n  async loadAllPredefinedStatuses(_ref) {\n    let {\n      state,\n      commit\n    } = _ref;\n    if (state.predefinedStatuses.length > 0) {\n      return;\n    }\n    const statuses = await fetchAllPredefinedStatuses();\n    for (const status of statuses) {\n      commit('addPredefinedStatus', status);\n    }\n  }\n};\nexport default {\n  state,\n  mutations,\n  getters,\n  actions\n};","/**\n * SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { fetchBackupStatus, revertToBackupStatus } from \"../services/statusService.js\";\nimport { getCurrentUser } from '@nextcloud/auth';\nimport { emit } from '@nextcloud/event-bus';\nconst state = {\n  // Status (online / away / dnd / invisible / offline)\n  status: null,\n  // Whether the status is user-defined\n  statusIsUserDefined: null,\n  // A custom message set by the user\n  message: null,\n  // The icon selected by the user\n  icon: null,\n  // When to automatically clean the status\n  clearAt: null,\n  // Whether the message is predefined\n  // (and can automatically be translated by Nextcloud)\n  messageIsPredefined: null,\n  // The id of the message in case it's predefined\n  messageId: null\n};\nconst mutations = {\n  /**\n   * Loads the status from initial state\n   *\n   * @param {object} state The Vuex state\n   * @param {object} data The destructuring object\n   * @param {string} data.status The status type\n   * @param {boolean} data.statusIsUserDefined Whether or not this status is user-defined\n   * @param {string} data.message The message\n   * @param {string} data.icon The icon\n   * @param {number} data.clearAt When to automatically clear the status\n   * @param {boolean} data.messageIsPredefined Whether or not the message is predefined\n   * @param {string} data.messageId The id of the predefined message\n   */\n  loadBackupStatusFromServer(state, _ref) {\n    let {\n      status,\n      statusIsUserDefined,\n      message,\n      icon,\n      clearAt,\n      messageIsPredefined,\n      messageId\n    } = _ref;\n    state.status = status;\n    state.message = message;\n    state.icon = icon;\n\n    // Don't overwrite certain values if the refreshing comes in via short updates\n    // E.g. from talk participant list which only has the status, message and icon\n    if (typeof statusIsUserDefined !== 'undefined') {\n      state.statusIsUserDefined = statusIsUserDefined;\n    }\n    if (typeof clearAt !== 'undefined') {\n      state.clearAt = clearAt;\n    }\n    if (typeof messageIsPredefined !== 'undefined') {\n      state.messageIsPredefined = messageIsPredefined;\n    }\n    if (typeof messageId !== 'undefined') {\n      state.messageId = messageId;\n    }\n  }\n};\nconst getters = {};\nconst actions = {\n  /**\n   * Re-fetches the status from the server\n   *\n   * @param {object} vuex The Vuex destructuring object\n   * @param {Function} vuex.commit The Vuex commit function\n   * @return {Promise<void>}\n   */\n  async fetchBackupFromServer(_ref2) {\n    let {\n      commit\n    } = _ref2;\n    try {\n      const status = await fetchBackupStatus(getCurrentUser()?.uid);\n      commit('loadBackupStatusFromServer', status);\n    } catch (e) {\n      // Ignore missing user backup status\n    }\n  },\n  async revertBackupFromServer(_ref3, _ref4) {\n    let {\n      commit\n    } = _ref3;\n    let {\n      messageId\n    } = _ref4;\n    const status = await revertToBackupStatus(messageId);\n    if (status) {\n      commit('loadBackupStatusFromServer', {});\n      commit('loadStatusFromServer', status);\n      emit('user_status:status.updated', {\n        status: status.status,\n        message: status.message,\n        icon: status.icon,\n        clearAt: status.clearAt,\n        userId: getCurrentUser()?.uid\n      });\n    }\n  }\n};\nexport default {\n  state,\n  mutations,\n  getters,\n  actions\n};","/**\n * SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { fetchCurrentStatus, setStatus, setPredefinedMessage, setCustomMessage, clearMessage } from \"../services/statusService.js\";\nimport { loadState } from '@nextcloud/initial-state';\nimport { getCurrentUser } from '@nextcloud/auth';\nimport { getTimestampForClearAt } from \"../services/clearAtService.js\";\nimport { emit } from '@nextcloud/event-bus';\nconst state = {\n  // Status (online / away / dnd / invisible / offline)\n  status: null,\n  // Whether the status is user-defined\n  statusIsUserDefined: null,\n  // A custom message set by the user\n  message: null,\n  // The icon selected by the user\n  icon: null,\n  // When to automatically clean the status\n  clearAt: null,\n  // Whether the message is predefined\n  // (and can automatically be translated by Nextcloud)\n  messageIsPredefined: null,\n  // The id of the message in case it's predefined\n  messageId: null\n};\nconst mutations = {\n  /**\n   * Sets a new status\n   *\n   * @param {object} state The Vuex state\n   * @param {object} data The destructuring object\n   * @param {string} data.statusType The new status type\n   */\n  setStatus(state, _ref) {\n    let {\n      statusType\n    } = _ref;\n    state.status = statusType;\n    state.statusIsUserDefined = true;\n  },\n  /**\n   * Sets a message using a predefined message\n   *\n   * @param {object} state The Vuex state\n   * @param {object} data The destructuring object\n   * @param {string} data.messageId The messageId\n   * @param {number | null} data.clearAt When to automatically clear the status\n   * @param {string} data.message The message\n   * @param {string} data.icon The icon\n   */\n  setPredefinedMessage(state, _ref2) {\n    let {\n      messageId,\n      clearAt,\n      message,\n      icon\n    } = _ref2;\n    state.messageId = messageId;\n    state.messageIsPredefined = true;\n    state.message = message;\n    state.icon = icon;\n    state.clearAt = clearAt;\n  },\n  /**\n   * Sets a custom message\n   *\n   * @param {object} state The Vuex state\n   * @param {object} data The destructuring object\n   * @param {string} data.message The message\n   * @param {string} data.icon The icon\n   * @param {number} data.clearAt When to automatically clear the status\n   */\n  setCustomMessage(state, _ref3) {\n    let {\n      message,\n      icon,\n      clearAt\n    } = _ref3;\n    state.messageId = null;\n    state.messageIsPredefined = false;\n    state.message = message;\n    state.icon = icon;\n    state.clearAt = clearAt;\n  },\n  /**\n   * Clears the status\n   *\n   * @param {object} state The Vuex state\n   */\n  clearMessage(state) {\n    state.messageId = null;\n    state.messageIsPredefined = false;\n    state.message = null;\n    state.icon = null;\n    state.clearAt = null;\n  },\n  /**\n   * Loads the status from initial state\n   *\n   * @param {object} state The Vuex state\n   * @param {object} data The destructuring object\n   * @param {string} data.status The status type\n   * @param {boolean} data.statusIsUserDefined Whether or not this status is user-defined\n   * @param {string} data.message The message\n   * @param {string} data.icon The icon\n   * @param {number} data.clearAt When to automatically clear the status\n   * @param {boolean} data.messageIsPredefined Whether or not the message is predefined\n   * @param {string} data.messageId The id of the predefined message\n   */\n  loadStatusFromServer(state, _ref4) {\n    let {\n      status,\n      statusIsUserDefined,\n      message,\n      icon,\n      clearAt,\n      messageIsPredefined,\n      messageId\n    } = _ref4;\n    state.status = status;\n    state.message = message;\n    state.icon = icon;\n\n    // Don't overwrite certain values if the refreshing comes in via short updates\n    // E.g. from talk participant list which only has the status, message and icon\n    if (typeof statusIsUserDefined !== 'undefined') {\n      state.statusIsUserDefined = statusIsUserDefined;\n    }\n    if (typeof clearAt !== 'undefined') {\n      state.clearAt = clearAt;\n    }\n    if (typeof messageIsPredefined !== 'undefined') {\n      state.messageIsPredefined = messageIsPredefined;\n    }\n    if (typeof messageId !== 'undefined') {\n      state.messageId = messageId;\n    }\n  }\n};\nconst getters = {};\nconst actions = {\n  /**\n   * Sets a new status\n   *\n   * @param {object} vuex The Vuex destructuring object\n   * @param {Function} vuex.commit The Vuex commit function\n   * @param {object} vuex.state The Vuex state object\n   * @param {object} data The data destructuring object\n   * @param {string} data.statusType The new status type\n   * @return {Promise<void>}\n   */\n  async setStatus(_ref5, _ref6) {\n    let {\n      commit,\n      state\n    } = _ref5;\n    let {\n      statusType\n    } = _ref6;\n    await setStatus(statusType);\n    commit('setStatus', {\n      statusType\n    });\n    emit('user_status:status.updated', {\n      status: state.status,\n      message: state.message,\n      icon: state.icon,\n      clearAt: state.clearAt,\n      userId: getCurrentUser()?.uid\n    });\n  },\n  /**\n   * Update status from 'user_status:status.updated' update.\n   * This doesn't trigger another 'user_status:status.updated'\n   * event.\n   *\n   * @param {object} vuex The Vuex destructuring object\n   * @param {Function} vuex.commit The Vuex commit function\n   * @param {object} vuex.state The Vuex state object\n   * @param {string} status The new status\n   * @return {Promise<void>}\n   */\n  async setStatusFromObject(_ref7, status) {\n    let {\n      commit,\n      state\n    } = _ref7;\n    commit('loadStatusFromServer', status);\n  },\n  /**\n   * Sets a message using a predefined message\n   *\n   * @param {object} vuex The Vuex destructuring object\n   * @param {Function} vuex.commit The Vuex commit function\n   * @param {object} vuex.state The Vuex state object\n   * @param {object} vuex.rootState The Vuex root state\n   * @param {object} data The data destructuring object\n   * @param {string} data.messageId The messageId\n   * @param {object | null} data.clearAt When to automatically clear the status\n   * @return {Promise<void>}\n   */\n  async setPredefinedMessage(_ref8, _ref9) {\n    let {\n      commit,\n      rootState,\n      state\n    } = _ref8;\n    let {\n      messageId,\n      clearAt\n    } = _ref9;\n    const resolvedClearAt = getTimestampForClearAt(clearAt);\n    await setPredefinedMessage(messageId, resolvedClearAt);\n    const status = rootState.predefinedStatuses.predefinedStatuses.find(status => status.id === messageId);\n    const {\n      message,\n      icon\n    } = status;\n    commit('setPredefinedMessage', {\n      messageId,\n      clearAt: resolvedClearAt,\n      message,\n      icon\n    });\n    emit('user_status:status.updated', {\n      status: state.status,\n      message: state.message,\n      icon: state.icon,\n      clearAt: state.clearAt,\n      userId: getCurrentUser()?.uid\n    });\n  },\n  /**\n   * Sets a custom message\n   *\n   * @param {object} vuex The Vuex destructuring object\n   * @param {Function} vuex.commit The Vuex commit function\n   * @param {object} vuex.state The Vuex state object\n   * @param {object} data The data destructuring object\n   * @param {string} data.message The message\n   * @param {string} data.icon The icon\n   * @param {object | null} data.clearAt When to automatically clear the status\n   * @return {Promise<void>}\n   */\n  async setCustomMessage(_ref10, _ref11) {\n    let {\n      commit,\n      state\n    } = _ref10;\n    let {\n      message,\n      icon,\n      clearAt\n    } = _ref11;\n    const resolvedClearAt = getTimestampForClearAt(clearAt);\n    await setCustomMessage(message, icon, resolvedClearAt);\n    commit('setCustomMessage', {\n      message,\n      icon,\n      clearAt: resolvedClearAt\n    });\n    emit('user_status:status.updated', {\n      status: state.status,\n      message: state.message,\n      icon: state.icon,\n      clearAt: state.clearAt,\n      userId: getCurrentUser()?.uid\n    });\n  },\n  /**\n   * Clears the status\n   *\n   * @param {object} vuex The Vuex destructuring object\n   * @param {Function} vuex.commit The Vuex commit function\n   * @param {object} vuex.state The Vuex state object\n   * @return {Promise<void>}\n   */\n  async clearMessage(_ref12) {\n    let {\n      commit,\n      state\n    } = _ref12;\n    await clearMessage();\n    commit('clearMessage');\n    emit('user_status:status.updated', {\n      status: state.status,\n      message: state.message,\n      icon: state.icon,\n      clearAt: state.clearAt,\n      userId: getCurrentUser()?.uid\n    });\n  },\n  /**\n   * Re-fetches the status from the server\n   *\n   * @param {object} vuex The Vuex destructuring object\n   * @param {Function} vuex.commit The Vuex commit function\n   * @return {Promise<void>}\n   */\n  async reFetchStatusFromServer(_ref13) {\n    let {\n      commit\n    } = _ref13;\n    const status = await fetchCurrentStatus();\n    commit('loadStatusFromServer', status);\n  },\n  /**\n   * Stores the status we got in the reply of the heartbeat\n   *\n   * @param {object} vuex The Vuex destructuring object\n   * @param {Function} vuex.commit The Vuex commit function\n   * @param {object} status The data destructuring object\n   * @param {string} status.status The status type\n   * @param {boolean} status.statusIsUserDefined Whether or not this status is user-defined\n   * @param {string} status.message The message\n   * @param {string} status.icon The icon\n   * @param {number} status.clearAt When to automatically clear the status\n   * @param {boolean} status.messageIsPredefined Whether or not the message is predefined\n   * @param {string} status.messageId The id of the predefined message\n   * @return {Promise<void>}\n   */\n  async setStatusFromHeartbeat(_ref14, status) {\n    let {\n      commit\n    } = _ref14;\n    commit('loadStatusFromServer', status);\n  },\n  /**\n   * Loads the server from the initial state\n   *\n   * @param {object} vuex The Vuex destructuring object\n   * @param {Function} vuex.commit The Vuex commit function\n   */\n  loadStatusFromInitialState(_ref15) {\n    let {\n      commit\n    } = _ref15;\n    const status = loadState('user_status', 'status');\n    commit('loadStatusFromServer', status);\n  }\n};\nexport default {\n  state,\n  mutations,\n  getters,\n  actions\n};","import { subscribe, unsubscribe } from '@nextcloud/event-bus';\nimport { Fragment } from 'vue-frag';\nimport NcButton from '@nextcloud/vue/dist/Components/NcButton.js';\nimport NcListItem from '@nextcloud/vue/dist/Components/NcListItem.js';\nimport NcUserStatusIcon from '@nextcloud/vue/dist/Components/NcUserStatusIcon.js';\nimport debounce from 'debounce';\nimport { sendHeartbeat } from \"./services/heartbeatService.js\";\nimport OnlineStatusMixin from \"./mixins/OnlineStatusMixin.js\";\nexport default {\n  name: 'UserStatus',\n  components: {\n    Fragment,\n    NcButton,\n    NcListItem,\n    NcUserStatusIcon,\n    SetStatusModal: () => import(/* webpackChunkName: 'user-status-modal' */\"./components/SetStatusModal.vue\")\n  },\n  mixins: [OnlineStatusMixin],\n  props: {\n    /**\n     * Whether the component should be rendered as a Dashboard Status or a User Menu Entries\n     * true = Dashboard Status\n     * false = User Menu Entries\n     */\n    inline: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      heartbeatInterval: null,\n      isAway: false,\n      isModalOpen: false,\n      mouseMoveListener: null,\n      setAwayTimeout: null\n    };\n  },\n  /**\n   * Loads the current user's status from initial state\n   * and stores it in Vuex\n   */\n  mounted() {\n    this.$store.dispatch('loadStatusFromInitialState');\n    if (OC.config.session_keepalive) {\n      // Send the latest status to the server every 5 minutes\n      this.heartbeatInterval = setInterval(this._backgroundHeartbeat.bind(this), 1000 * 60 * 5);\n      this.setAwayTimeout = () => {\n        this.isAway = true;\n      };\n      // Catch mouse movements, but debounce to once every 30 seconds\n      this.mouseMoveListener = debounce(() => {\n        const wasAway = this.isAway;\n        this.isAway = false;\n        // Reset the two minute counter\n        clearTimeout(this.setAwayTimeout);\n        // If the user did not move the mouse within two minutes,\n        // mark them as away\n        setTimeout(this.setAwayTimeout, 1000 * 60 * 2);\n        if (wasAway) {\n          this._backgroundHeartbeat();\n        }\n      }, 1000 * 2, true);\n      window.addEventListener('mousemove', this.mouseMoveListener, {\n        capture: true,\n        passive: true\n      });\n      this._backgroundHeartbeat();\n    }\n    subscribe('user_status:status.updated', this.handleUserStatusUpdated);\n  },\n  /**\n   * Some housekeeping before destroying the component\n   */\n  beforeDestroy() {\n    window.removeEventListener('mouseMove', this.mouseMoveListener);\n    clearInterval(this.heartbeatInterval);\n    unsubscribe('user_status:status.updated', this.handleUserStatusUpdated);\n  },\n  methods: {\n    /**\n     * Opens the modal to set a custom status\n     */\n    openModal() {\n      this.isModalOpen = true;\n    },\n    /**\n     * Closes the modal\n     */\n    closeModal() {\n      this.isModalOpen = false;\n    },\n    /**\n     * Sends the status heartbeat to the server\n     *\n     * @return {Promise<void>}\n     * @private\n     */\n    async _backgroundHeartbeat() {\n      try {\n        const status = await sendHeartbeat(this.isAway);\n        if (status?.userId) {\n          this.$store.dispatch('setStatusFromHeartbeat', status);\n        } else {\n          await this.$store.dispatch('reFetchStatusFromServer');\n        }\n      } catch (error) {\n        console.debug('Failed sending heartbeat, got: ' + error.response?.status);\n      }\n    },\n    handleUserStatusUpdated(state) {\n      if (OC.getCurrentUser().uid === state.userId) {\n        this.$store.dispatch('setStatusFromObject', {\n          status: state.status,\n          icon: state.icon,\n          message: state.message\n        });\n      }\n    }\n  }\n};","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"Fragment\", [!_vm.inline ? _c(\"NcListItem\", {\n    staticClass: \"user-status-menu-item\",\n    attrs: {\n      compact: \"\",\n      name: _vm.visibleMessage\n    },\n    on: {\n      click: function ($event) {\n        $event.stopPropagation();\n        return _vm.openModal.apply(null, arguments);\n      }\n    },\n    scopedSlots: _vm._u([{\n      key: \"icon\",\n      fn: function () {\n        return [_c(\"NcUserStatusIcon\", {\n          staticClass: \"user-status-icon\",\n          attrs: {\n            status: _vm.statusType,\n            \"aria-hidden\": \"true\"\n          }\n        })];\n      },\n      proxy: true\n    }], null, false, 2300440294)\n  }) : _c(\"div\", [_c(\"NcButton\", {\n    on: {\n      click: function ($event) {\n        $event.stopPropagation();\n        return _vm.openModal.apply(null, arguments);\n      }\n    },\n    scopedSlots: _vm._u([{\n      key: \"icon\",\n      fn: function () {\n        return [_c(\"NcUserStatusIcon\", {\n          staticClass: \"user-status-icon\",\n          attrs: {\n            status: _vm.statusType,\n            \"aria-hidden\": \"true\"\n          }\n        })];\n      },\n      proxy: true\n    }])\n  }, [_vm._v(\"\\n\\t\\t\\t\" + _vm._s(_vm.visibleMessage) + \"\\n\\t\\t\")])], 1), _vm._v(\" \"), _vm.isModalOpen ? _c(\"SetStatusModal\", {\n    attrs: {\n      inline: _vm.inline\n    },\n    on: {\n      close: _vm.closeModal\n    }\n  }) : _vm._e()], 1);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\nexport { render, staticRenderFns };","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.user-status-icon[data-v-03512cb0] {\n  width: 20px;\n  height: 20px;\n  margin: calc((var(--default-clickable-area) - 20px) / 2);\n  opacity: 1 !important;\n  background-size: 20px;\n  vertical-align: middle !important;\n}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/sass-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserStatus.vue?vue&type=style&index=0&id=03512cb0&lang=scss&scoped=true\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/sass-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserStatus.vue?vue&type=style&index=0&id=03512cb0&lang=scss&scoped=true\";\n       export default content && content.locals ? content.locals : undefined;\n","import { render, staticRenderFns } from \"./UserStatus.vue?vue&type=template&id=03512cb0&scoped=true\"\nimport script from \"./UserStatus.vue?vue&type=script&lang=js\"\nexport * from \"./UserStatus.vue?vue&type=script&lang=js\"\nimport style0 from \"./UserStatus.vue?vue&type=style&index=0&id=03512cb0&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"03512cb0\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/var/www/nextcloud/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('03512cb0')) {\n      api.createRecord('03512cb0', component.options)\n    } else {\n      api.reload('03512cb0', component.options)\n    }\n    module.hot.accept(\"./UserStatus.vue?vue&type=template&id=03512cb0&scoped=true\", function () {\n      api.rerender('03512cb0', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"apps/user_status/src/UserStatus.vue\"\nexport default component.exports","import mod from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserStatus.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserStatus.vue?vue&type=script&lang=js\"","export * from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserStatus.vue?vue&type=template&id=03512cb0&scoped=true\"","export * from \"-!../../../node_modules/style-loader/dist/cjs.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/sass-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserStatus.vue?vue&type=style&index=0&id=03512cb0&lang=scss&scoped=true\"","import { N } from \"../chunks/NcUserStatusIcon-CCCrTIIn.mjs\";\nexport {\n  N as default\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \"-\" + chunkId + \".js?v=\" + {\"node_modules_nextcloud_dialogs_dist_chunks_index-CWnkpNim_mjs\":\"4b496e25fdc85bcc8255\",\"user-status-modal\":\"74fe38b1c4adb3af05b3\",\"data_image_svg_xml_3c_21--_20-_20SPDX-FileCopyrightText_202020_20Google_20Inc_20-_20SPDX-Lice-019035\":\"f005f04e196c41e04984\"}[chunkId] + \"\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"nextcloud:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"user_status-menu\": 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunknextcloud\"] = self[\"webpackChunknextcloud\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"core-common\"], () => (__webpack_require__(\"./apps/user_status/src/menu.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}