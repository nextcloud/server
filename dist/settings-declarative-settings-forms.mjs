/*! third party licenses: dist/vendor.LICENSE.txt */
import{ai as d,cb as p,af as c,G as n,bR as u,b$ as f,b_ as m,aV as r,bS as v,c5 as h}from"./core-common.mjs";import"./chunks/index-PaKKd09k.mjs";import{z as _}from"./chunks/_plugin-vue2_normalizer-VrK6B12S-BQkexw0P.mjs";import{d as F}from"./chunks/index-DCgLaXhm.mjs";import{n as b}from"./chunks/icons-TElqpmA8.mjs";const D={name:"DeclarativeSection",components:{NcSettingsSection:d,NcInputField:p,NcSelect:c,NcCheckboxRadioSwitch:n},props:{form:{type:Object,required:!0}},data(){return{formFieldsData:{}}},beforeMount(){this.initFormFieldsData()},computed:{formApp(){return this.form.app||""},formFields(){return this.form.fields||[]}},methods:{initFormFieldsData(){this.form.fields.forEach(e=>{e.type==="checkbox"&&this.$set(e,"value",+e.value),e.type==="multi-checkbox"&&(e.value===""?(this.$set(e,"value",{}),e.options.forEach(l=>{this.$set(e.value,l.value,!1)})):(this.$set(e,"value",JSON.parse(e.value)),e.options.forEach(l=>{e.value.hasOwnProperty(l.value)||this.$set(e.value,l.value,!1)}),Object.keys(e.value).forEach(l=>{e.options.find(i=>i.value===l)||delete e.value[l]}))),e.type==="multi-select"&&(e.value===""?this.$set(e,"value",[]):this.$set(e,"value",JSON.parse(e.value))),this.$set(this.formFieldsData,e.id,{value:e.value})})},updateFormFieldDataValue(e,l,i=!1){this.formFieldsData[l.id].value=e,i&&this.updateDeclarativeSettingsValue(l)},updateDeclarativeSettingsValue(e,l=null){try{return u.post(f("settings/api/declarative/value"),{app:this.formApp,formId:this.form.id.replace(this.formApp+"_",""),fieldId:e.id,value:l===null?this.formFieldsData[e.id].value:l})}catch(i){console.debug(i),_(t("settings","Failed to save setting"))}},onChangeDebounced:F(function(e){this.updateDeclarativeSettingsValue(e)},1e3),isTextFormField(e){return["text","password","email","tel","url","number"].includes(e.type)}}};var y=function(){var e=this,l=e._self._c;return l("NcSettingsSection",{staticClass:"declarative-settings-section",attrs:{name:e.t(e.formApp,e.form.title),description:e.t(e.formApp,e.form.description),"doc-url":e.form.doc_url||""}},e._l(e.formFields,function(i){return l("div",{key:i.id,staticClass:"declarative-form-field",class:{"declarative-form-field-text":e.isTextFormField(i),"declarative-form-field-select":i.type==="select","declarative-form-field-multi-select":i.type==="multi-select","declarative-form-field-checkbox":i.type==="checkbox","declarative-form-field-multi_checkbox":i.type==="multi-checkbox","declarative-form-field-radio":i.type==="radio"},attrs:{"aria-label":e.t("settings","{app}'s declarative setting field: {name}",{app:e.formApp,name:e.t(e.formApp,i.title)})}},[e.isTextFormField(i)?[l("div",{staticClass:"input-wrapper"},[l("NcInputField",{attrs:{type:i.type,label:e.t(e.formApp,i.title),value:e.formFieldsData[i.id].value,placeholder:e.t(e.formApp,i.placeholder)},on:{"update:value":[function(a){return e.$set(e.formFieldsData[i.id],"value",a)},function(a){return e.onChangeDebounced(i)}],submit:function(a){return e.updateDeclarativeSettingsValue(i)}}})],1),l("span",{staticClass:"hint"},[e._v(e._s(e.t(e.formApp,i.description)))])]:e._e(),i.type==="select"?[l("label",{attrs:{for:i.id+"_field"}},[e._v(e._s(e.t(e.formApp,i.title)))]),l("div",{staticClass:"input-wrapper"},[l("NcSelect",{attrs:{id:i.id+"_field",options:i.options,placeholder:e.t(e.formApp,i.placeholder),"label-outside":!0,value:e.formFieldsData[i.id].value},on:{input:a=>e.updateFormFieldDataValue(a,i,!0)}})],1),l("span",{staticClass:"hint"},[e._v(e._s(e.t(e.formApp,i.description)))])]:e._e(),i.type==="multi-select"?[l("label",{attrs:{for:i.id+"_field"}},[e._v(e._s(e.t(e.formApp,i.title)))]),l("div",{staticClass:"input-wrapper"},[l("NcSelect",{attrs:{id:i.id+"_field",options:i.options,placeholder:e.t(e.formApp,i.placeholder),multiple:!0,"label-outside":!0,value:e.formFieldsData[i.id].value},on:{input:a=>{e.formFieldsData[i.id].value=a,e.updateDeclarativeSettingsValue(i,JSON.stringify(e.formFieldsData[i.id].value))}}})],1),l("span",{staticClass:"hint"},[e._v(e._s(e.t(e.formApp,i.description)))])]:e._e(),i.type==="checkbox"?[l("label",{attrs:{for:i.id+"_field"}},[e._v(e._s(e.t(e.formApp,i.title)))]),l("NcCheckboxRadioSwitch",{attrs:{id:i.id+"_field",checked:!!e.formFieldsData[i.id].value},on:{"update:checked":a=>{i.value=a,e.updateFormFieldDataValue(+a,i,!0)}}},[e._v(" "+e._s(e.t(e.formApp,i.label))+" ")]),l("span",{staticClass:"hint"},[e._v(e._s(e.t(e.formApp,i.description)))])]:e._e(),i.type==="multi-checkbox"?[l("label",{attrs:{for:i.id+"_field"}},[e._v(e._s(e.t(e.formApp,i.title)))]),e._l(i.options,function(a){return l("NcCheckboxRadioSwitch",{key:a.value,attrs:{id:i.id+"_field_"+a.value,checked:e.formFieldsData[i.id].value[a.value]},on:{"update:checked":o=>{e.formFieldsData[i.id].value[a.value]=o,e.updateDeclarativeSettingsValue(i,JSON.stringify(e.formFieldsData[i.id].value))}}},[e._v(" "+e._s(e.t(e.formApp,a.name))+" ")])}),l("span",{staticClass:"hint"},[e._v(e._s(e.t(e.formApp,i.description)))])]:e._e(),i.type==="radio"?[l("label",{attrs:{for:i.id+"_field"}},[e._v(e._s(e.t(e.formApp,i.title)))]),e._l(i.options,function(a){return l("NcCheckboxRadioSwitch",{key:a.value,attrs:{value:a.value,type:"radio",checked:e.formFieldsData[i.id].value},on:{"update:checked":o=>e.updateFormFieldDataValue(o,i,!0)}},[e._v(" "+e._s(e.t(e.formApp,a.name))+" ")])}),l("span",{staticClass:"hint"},[e._v(e._s(e.t(e.formApp,i.description)))])]:e._e()],2)}),0)},A=[],S=b(D,y,A,!1,null,"c33ce912");const g=S.exports,s=m("settings","declarative-settings-forms",[]);console.debug("Loaded declarative forms:",s);function k(e){r.mixin({methods:{t:v,n:h}});const l=r.extend(g);for(const i of e){const a="#".concat(i.app,"_").concat(i.id);new l({el:a,propsData:{form:i}})}}document.addEventListener("DOMContentLoaded",()=>{k(s)});
