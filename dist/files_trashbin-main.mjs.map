{"version":3,"file":"files_trashbin-main.mjs","sources":["../apps/files_trashbin/src/services/client.ts","../apps/files_trashbin/src/services/trashbin.ts","../apps/files_trashbin/src/columns.ts","../apps/files_trashbin/src/actions/restoreAction.ts","../apps/files_trashbin/src/main.ts"],"sourcesContent":["/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { createClient } from 'webdav'\nimport { generateRemoteUrl } from '@nextcloud/router'\nimport { getCurrentUser, getRequestToken, onRequestTokenUpdate } from '@nextcloud/auth'\n\n// init webdav client\nexport const rootPath = `/trashbin/${getCurrentUser()?.uid}/trash`\nexport const rootUrl = generateRemoteUrl('dav' + rootPath)\nconst client = createClient(rootUrl)\n\n// set CSRF token header\nconst setHeaders = (token: string | null) => {\n  client.setHeaders({\n    // Add this so the server knows it is an request from the browser\n    'X-Requested-With': 'XMLHttpRequest',\n    // Inject user auth\n    requesttoken: token ?? '',\n  })\n}\n\n// refresh headers when request token changes\nonRequestTokenUpdate(setHeaders)\nsetHeaders(getRequestToken())\n\nexport default client\n","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport type { FileStat, ResponseDataDetailed } from 'webdav'\nimport type { ContentsWithRoot } from '@nextcloud/files'\n\nimport { File, Folder, davParsePermissions, getDavNameSpaces, getDavProperties } from '@nextcloud/files'\nimport { generateRemoteUrl, generateUrl } from '@nextcloud/router'\nimport { getCurrentUser } from '@nextcloud/auth'\n\nimport client, { rootPath } from './client'\n\nconst data = `<?xml version=\"1.0\"?>\n<d:propfind ${getDavNameSpaces()}>\n\t<d:prop>\n\t\t<nc:trashbin-filename />\n\t\t<nc:trashbin-deletion-time />\n\t\t<nc:trashbin-original-location />\n\t\t<nc:trashbin-title />\n\t\t<nc:trashbin-deleted-by-id />\n\t\t<nc:trashbin-deleted-by-display-name />\n\t\t${getDavProperties()}\n\t</d:prop>\n</d:propfind>`\n\nconst resultToNode = function(node: FileStat): File | Folder {\n\tconst permissions = davParsePermissions(node.props?.permissions)\n\tconst owner = getCurrentUser()?.uid as string\n\tconst previewUrl = generateUrl('/apps/files_trashbin/preview?fileId={fileid}&x=32&y=32', node.props)\n\n\tconst nodeData = {\n\t\tid: node.props?.fileid as number || 0,\n\t\tsource: generateRemoteUrl('dav' + rootPath + node.filename),\n\t\t// do not show the mtime column\n\t\t// mtime: new Date(node.lastmod),\n\t\tmime: node.mime as string,\n\t\tsize: node.props?.size as number || 0,\n\t\tpermissions,\n\t\towner,\n\t\troot: rootPath,\n\t\tattributes: {\n\t\t\t...node,\n\t\t\t...node.props,\n\t\t\t// Override displayed name on the list\n\t\t\tdisplayName: node.props?.['trashbin-filename'],\n\t\t\tpreviewUrl,\n\t\t},\n\t}\n\n\tdelete nodeData.attributes.props\n\n\treturn node.type === 'file'\n\t\t? new File(nodeData)\n\t\t: new Folder(nodeData)\n}\n\nexport const getContents = async (path = '/'): Promise<ContentsWithRoot> => {\n\t// TODO: use only one request when webdav-client supports it\n\t// @see https://github.com/perry-mitchell/webdav-client/pull/334\n\tconst rootResponse = await client.stat(path, {\n\t\tdetails: true,\n\t\tdata,\n\t}) as ResponseDataDetailed<FileStat>\n\n\tconst contentsResponse = await client.getDirectoryContents(path, {\n\t\tdetails: true,\n\t\tdata,\n\t}) as ResponseDataDetailed<FileStat[]>\n\n\treturn {\n\t\tfolder: resultToNode(rootResponse.data) as Folder,\n\t\tcontents: contentsResponse.data.map(resultToNode),\n\t}\n}\n","/**\n * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport moment from '@nextcloud/moment'\nimport { Column, Node } from '@nextcloud/files'\nimport { getCurrentUser } from '@nextcloud/auth'\nimport { dirname } from '@nextcloud/paths'\nimport { translate as t } from '@nextcloud/l10n'\n\nimport Vue from 'vue'\nimport NcUserBubble from '@nextcloud/vue/dist/Components/NcUserBubble.js'\n\nconst parseOriginalLocation = (node: Node): string => {\n\tconst path = node.attributes?.['trashbin-original-location'] !== undefined ? String(node.attributes?.['trashbin-original-location']) : null\n\tif (!path) {\n\t\treturn t('files_trashbin', 'Unknown')\n\t}\n\tconst dir = dirname(path)\n\tif (dir === path) { // Node is in root folder\n\t\treturn t('files_trashbin', 'All files')\n\t}\n\treturn dir.replace(/^\\//, '')\n}\n\ninterface DeletedBy {\n\tuserId: null | string\n\tdisplayName: null | string\n\tlabel: null | string\n}\n\nconst generateLabel = (userId: null | string, displayName: null | string) => {\n\tconst currentUserId = getCurrentUser()?.uid\n\tif (userId === currentUserId) {\n\t\treturn t('files_trashbin', 'You')\n\t}\n\tif (!userId && !displayName) {\n\t\treturn t('files_trashbin', 'Unknown')\n\t}\n\treturn null\n}\n\nconst parseDeletedBy = (node: Node): DeletedBy => {\n\tconst userId = node.attributes?.['trashbin-deleted-by-id'] !== undefined ? String(node.attributes?.['trashbin-deleted-by-id']) : null\n\tconst displayName = node.attributes?.['trashbin-deleted-by-display-name'] !== undefined ? String(node.attributes?.['trashbin-deleted-by-display-name']) : null\n\tconst label = generateLabel(userId, displayName)\n\treturn {\n\t\tuserId,\n\t\tdisplayName,\n\t\tlabel,\n\t}\n}\n\nconst originalLocation = new Column({\n\tid: 'original-location',\n\ttitle: t('files_trashbin', 'Original location'),\n\trender(node) {\n\t\tconst originalLocation = parseOriginalLocation(node)\n\t\tconst span = document.createElement('span')\n\t\tspan.title = originalLocation\n\t\tspan.textContent = originalLocation\n\t\treturn span\n\t},\n\tsort(nodeA, nodeB) {\n\t\tconst locationA = parseOriginalLocation(nodeA)\n\t\tconst locationB = parseOriginalLocation(nodeB)\n\t\treturn locationA.localeCompare(locationB)\n\t},\n})\n\nconst deletedBy = new Column({\n\tid: 'deleted-by',\n\ttitle: t('files_trashbin', 'Deleted by'),\n\trender(node) {\n\t\tconst { userId, displayName, label } = parseDeletedBy(node)\n\t\tif (label) {\n\t\t\tconst span = document.createElement('span')\n\t\t\tspan.textContent = label\n\t\t\treturn span\n\t\t}\n\n\t\tconst UserBubble = Vue.extend(NcUserBubble)\n\t\tconst propsData = {\n\t\t\tsize: 32,\n\t\t\tuser: userId ?? undefined,\n\t\t\tdisplayName: displayName ?? t('files_trashbin', 'Unknown'),\n\t\t}\n\t\tconst userBubble = new UserBubble({ propsData }).$mount().$el\n\t\treturn userBubble as HTMLElement\n\t},\n\tsort(nodeA, nodeB) {\n\t\tconst deletedByA = parseDeletedBy(nodeA).label ?? parseDeletedBy(nodeA).displayName ?? t('files_trashbin', 'Unknown')\n\t\tconst deletedByB = parseDeletedBy(nodeB).label ?? parseDeletedBy(nodeB).displayName ?? t('files_trashbin', 'Unknown')\n\t\treturn deletedByA.localeCompare(deletedByB)\n\t},\n})\n\nconst deleted = new Column({\n\tid: 'deleted',\n\ttitle: t('files_trashbin', 'Deleted'),\n\trender(node) {\n\t\tconst deletionTime = node.attributes?.['trashbin-deletion-time']\n\t\tconst span = document.createElement('span')\n\t\tif (deletionTime) {\n\t\t\tspan.title = moment.unix(deletionTime).format('LLL')\n\t\t\tspan.textContent = moment.unix(deletionTime).fromNow()\n\t\t\treturn span\n\t\t}\n\n\t\t// Unknown deletion time\n\t\tspan.textContent = t('files_trashbin', 'A long time ago')\n\t\treturn span\n\t},\n\tsort(nodeA, nodeB) {\n\t\tconst deletionTimeA = nodeA.attributes?.['trashbin-deletion-time'] || nodeA?.mtime || 0\n\t\tconst deletionTimeB = nodeB.attributes?.['trashbin-deletion-time'] || nodeB?.mtime || 0\n\t\treturn deletionTimeB - deletionTimeA\n\t},\n})\n\nexport const columns = [\n\toriginalLocation,\n\tdeletedBy,\n\tdeleted,\n]\n","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { emit } from '@nextcloud/event-bus'\nimport { generateRemoteUrl } from '@nextcloud/router'\nimport { getCurrentUser } from '@nextcloud/auth'\nimport { Permission, Node, View, registerFileAction, FileAction } from '@nextcloud/files'\nimport { translate as t } from '@nextcloud/l10n'\nimport axios from '@nextcloud/axios'\nimport History from '@mdi/svg/svg/history.svg?raw'\n\nimport logger from '../../../files/src/logger.js'\nimport { encodePath } from '@nextcloud/paths'\n\nregisterFileAction(new FileAction({\n\tid: 'restore',\n\tdisplayName() {\n\t\treturn t('files_trashbin', 'Restore')\n\t},\n\ticonSvgInline: () => History,\n\n\tenabled(nodes: Node[], view) {\n\t\t// Only available in the trashbin view\n\t\tif (view.id !== 'trashbin') {\n\t\t\treturn false\n\t\t}\n\n\t\t// Only available if all nodes have read permission\n\t\treturn nodes.length > 0 && nodes\n\t\t\t.map(node => node.permissions)\n\t\t\t.every(permission => (permission & Permission.READ) !== 0)\n\t},\n\n\tasync exec(node: Node) {\n\t\ttry {\n\t\t\tconst destination = generateRemoteUrl(encodePath(`dav/trashbin/${getCurrentUser()?.uid}/restore/${node.basename}`))\n\t\t\tawait axios({\n\t\t\t\tmethod: 'MOVE',\n\t\t\t\turl: node.encodedSource,\n\t\t\t\theaders: {\n\t\t\t\t\tdestination,\n\t\t\t\t},\n\t\t\t})\n\n\t\t\t// Let's pretend the file is deleted since\n\t\t\t// we don't know the restored location\n\t\t\temit('files:node:deleted', node)\n\t\t\treturn true\n\t\t} catch (error) {\n\t\t\tlogger.error(error)\n\t\t\treturn false\n\t\t}\n\t},\n\tasync execBatch(nodes: Node[], view: View, dir: string) {\n\t\treturn Promise.all(nodes.map(node => this.exec(node, view, dir)))\n\t},\n\n\torder: 1,\n\tinline: () => true,\n}))\n","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport './trashbin.scss'\n\nimport { translate as t } from '@nextcloud/l10n'\nimport DeleteSvg from '@mdi/svg/svg/delete.svg?raw'\n\nimport { getContents } from './services/trashbin'\nimport { columns } from './columns.ts'\n\n// Register restore action\nimport './actions/restoreAction'\nimport { View, getNavigation } from '@nextcloud/files'\n\nconst Navigation = getNavigation()\nNavigation.register(new View({\n\tid: 'trashbin',\n\tname: t('files_trashbin', 'Deleted files'),\n\tcaption: t('files_trashbin', 'List of files that have been deleted.'),\n\n\temptyTitle: t('files_trashbin', 'No deleted files'),\n\temptyCaption: t('files_trashbin', 'Files and folders you have deleted will show up here'),\n\n\ticon: DeleteSvg,\n\torder: 50,\n\tsticky: true,\n\n\tdefaultSortKey: 'deleted',\n\n\tcolumns,\n\n\tgetContents,\n}))\n"],"names":["_a","rootPath","getCurrentUser","rootUrl","generateRemoteUrl","client","createClient","setHeaders","token","onRequestTokenUpdate","getRequestToken","data","getDavNameSpaces","resultToNode","node","_b","_c","_d","_e","permissions","davParsePermissions","owner","previewUrl","generateUrl","nodeData","File","Folder","getContents","path","rootResponse","contentsResponse","parseOriginalLocation","t","dir","dirname","generateLabel","userId","displayName","currentUserId","parseDeletedBy","label","originalLocation","Column","span","nodeA","nodeB","locationA","locationB","deletedBy","UserBubble","Vue","NcUserBubble","propsData","deletedByA","deletedByB","deleted","deletionTime","moment","deletionTimeA","columns","registerFileAction","FileAction","History","nodes","view","permission","Permission","destination","encodePath","axios","emit","error","logger","Navigation","getNavigation","View","DeleteSvg"],"mappings":"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"}