{"version":3,"file":"RedirectUnsupportedBrowsers-BjoWmJp7.mjs","sources":["../../node_modules/caniuse-lite/data/browsers.js","../../node_modules/caniuse-lite/dist/unpacker/browsers.js","../../node_modules/caniuse-lite/data/browserVersions.js","../../node_modules/caniuse-lite/dist/unpacker/browserVersions.js","../../node_modules/caniuse-lite/data/agents.js","../../node_modules/caniuse-lite/dist/unpacker/agents.js","../../node_modules/electron-to-chromium/versions.js","../../node_modules/browserslist/error.js","../../node_modules/browserslist/parse.js","../../node_modules/browserslist/browser.js","../../node_modules/browserslist/index.js","../../node_modules/regexp-tree/dist/compat-transpiler/transforms/compat-dotall-s-transform.js","../../node_modules/regexp-tree/dist/compat-transpiler/transforms/compat-named-capturing-groups-transform.js","../../node_modules/regexp-tree/dist/compat-transpiler/transforms/compat-x-flag-transform.js","../../node_modules/regexp-tree/dist/compat-transpiler/transforms/index.js","../../node_modules/regexp-tree/dist/generator/index.js","../../node_modules/regexp-tree/dist/parser/unicode/parser-unicode-properties.js","../../node_modules/regexp-tree/dist/parser/generated/regexp-tree.js","../../node_modules/regexp-tree/dist/parser/index.js","../../node_modules/regexp-tree/dist/traverse/node-path.js","../../node_modules/regexp-tree/dist/traverse/index.js","../../node_modules/regexp-tree/dist/transform/index.js","../../node_modules/regexp-tree/dist/compat-transpiler/index.js","../../node_modules/regexp-tree/dist/utils/clone.js","../../node_modules/regexp-tree/dist/optimizer/transforms/char-surrogate-pair-to-single-unicode-transform.js","../../node_modules/regexp-tree/dist/optimizer/transforms/char-code-to-simple-char-transform.js","../../node_modules/regexp-tree/dist/optimizer/transforms/char-case-insensitive-lowercase-transform.js","../../node_modules/regexp-tree/dist/optimizer/transforms/char-class-remove-duplicates-transform.js","../../node_modules/regexp-tree/dist/transform/utils.js","../../node_modules/regexp-tree/dist/optimizer/transforms/quantifiers-merge-transform.js","../../node_modules/regexp-tree/dist/optimizer/transforms/quantifier-range-to-symbol-transform.js","../../node_modules/regexp-tree/dist/optimizer/transforms/char-class-classranges-to-chars-transform.js","../../node_modules/regexp-tree/dist/optimizer/transforms/char-class-to-meta-transform.js","../../node_modules/regexp-tree/dist/optimizer/transforms/char-class-to-single-char-transform.js","../../node_modules/regexp-tree/dist/optimizer/transforms/char-escape-unescape-transform.js","../../node_modules/regexp-tree/dist/optimizer/transforms/char-class-classranges-merge-transform.js","../../node_modules/regexp-tree/dist/optimizer/transforms/disjunction-remove-duplicates-transform.js","../../node_modules/regexp-tree/dist/optimizer/transforms/group-single-chars-to-char-class.js","../../node_modules/regexp-tree/dist/optimizer/transforms/remove-empty-group-transform.js","../../node_modules/regexp-tree/dist/optimizer/transforms/ungroup-transform.js","../../node_modules/regexp-tree/dist/optimizer/transforms/combine-repeating-patterns-transform.js","../../node_modules/regexp-tree/dist/optimizer/transforms/index.js","../../node_modules/regexp-tree/dist/optimizer/index.js","../../node_modules/regexp-tree/dist/interpreter/finite-automaton/special-symbols.js","../../node_modules/regexp-tree/dist/interpreter/finite-automaton/nfa/nfa.js","../../node_modules/regexp-tree/dist/interpreter/finite-automaton/dfa/dfa-minimizer.js","../../node_modules/regexp-tree/dist/interpreter/finite-automaton/dfa/dfa.js","../../node_modules/regexp-tree/dist/interpreter/finite-automaton/state.js","../../node_modules/regexp-tree/dist/interpreter/finite-automaton/nfa/nfa-state.js","../../node_modules/regexp-tree/dist/interpreter/finite-automaton/nfa/builders.js","../../node_modules/regexp-tree/dist/interpreter/finite-automaton/nfa/nfa-from-regexp.js","../../node_modules/regexp-tree/dist/interpreter/finite-automaton/index.js","../../node_modules/regexp-tree/dist/compat-transpiler/runtime/index.js","../../node_modules/regexp-tree/dist/regexp-tree.js","../../node_modules/regexp-tree/index.js","../../node_modules/ua-regexes-lite/index.js","../../node_modules/browserslist-useragent-regexp/dist/index.js","../../node_modules/@nextcloud/browserslist-config/browserlist.config.js","../../core/src/services/BrowsersListService.js","../../core/src/services/BrowserStorageService.js","../../core/src/utils/RedirectUnsupportedBrowsers.js"],"sourcesContent":["module.exports={A:\"ie\",B:\"edge\",C:\"firefox\",D:\"chrome\",E:\"safari\",F:\"opera\",G:\"ios_saf\",H:\"op_mini\",I:\"android\",J:\"bb\",K:\"op_mob\",L:\"and_chr\",M:\"and_ff\",N:\"ie_mob\",O:\"and_uc\",P:\"samsung\",Q:\"and_qq\",R:\"baidu\",S:\"kaios\"};\n","module.exports.browsers = require('../../data/browsers')\n","module.exports={\"0\":\"112\",\"1\":\"113\",\"2\":\"114\",\"3\":\"115\",\"4\":\"116\",\"5\":\"117\",\"6\":\"118\",\"7\":\"119\",\"8\":\"120\",\"9\":\"5\",A:\"10\",B:\"11\",C:\"12\",D:\"7\",E:\"8\",F:\"9\",G:\"15\",H:\"121\",I:\"4\",J:\"6\",K:\"13\",L:\"14\",M:\"16\",N:\"17\",O:\"18\",P:\"79\",Q:\"80\",R:\"81\",S:\"83\",T:\"84\",U:\"85\",V:\"86\",W:\"87\",X:\"88\",Y:\"89\",Z:\"90\",a:\"91\",b:\"92\",c:\"93\",d:\"94\",e:\"95\",f:\"96\",g:\"97\",h:\"98\",i:\"99\",j:\"100\",k:\"101\",l:\"102\",m:\"103\",n:\"104\",o:\"105\",p:\"106\",q:\"20\",r:\"21\",s:\"22\",t:\"23\",u:\"73\",v:\"107\",w:\"108\",x:\"109\",y:\"110\",z:\"111\",AB:\"19\",BB:\"24\",CB:\"25\",DB:\"26\",EB:\"27\",FB:\"28\",GB:\"29\",HB:\"30\",IB:\"31\",JB:\"32\",KB:\"33\",LB:\"34\",MB:\"35\",NB:\"36\",OB:\"37\",PB:\"38\",QB:\"39\",RB:\"40\",SB:\"41\",TB:\"42\",UB:\"43\",VB:\"44\",WB:\"45\",XB:\"46\",YB:\"47\",ZB:\"48\",aB:\"49\",bB:\"50\",cB:\"51\",dB:\"52\",eB:\"53\",fB:\"54\",gB:\"55\",hB:\"56\",iB:\"57\",jB:\"58\",kB:\"60\",lB:\"62\",mB:\"63\",nB:\"64\",oB:\"65\",pB:\"66\",qB:\"67\",rB:\"68\",sB:\"69\",tB:\"70\",uB:\"71\",vB:\"72\",wB:\"74\",xB:\"75\",yB:\"76\",zB:\"77\",\"0B\":\"78\",\"1B\":\"122\",\"2B\":\"11.1\",\"3B\":\"12.1\",\"4B\":\"15.5\",\"5B\":\"16.0\",\"6B\":\"17.0\",\"7B\":\"3\",\"8B\":\"59\",\"9B\":\"61\",AC:\"82\",BC:\"123\",CC:\"124\",DC:\"125\",EC:\"3.2\",FC:\"10.1\",GC:\"13.1\",HC:\"15.2-15.3\",IC:\"15.4\",JC:\"16.1\",KC:\"16.2\",LC:\"16.3\",MC:\"16.4\",NC:\"16.5\",OC:\"17.1\",PC:\"17.2\",QC:\"17.3\",RC:\"11.5\",SC:\"4.2-4.3\",TC:\"5.5\",UC:\"2\",VC:\"126\",WC:\"3.5\",XC:\"3.6\",YC:\"3.1\",ZC:\"5.1\",aC:\"6.1\",bC:\"7.1\",cC:\"9.1\",dC:\"14.1\",eC:\"15.1\",fC:\"15.6\",gC:\"16.6\",hC:\"17.4\",iC:\"TP\",jC:\"9.5-9.6\",kC:\"10.0-10.1\",lC:\"10.5\",mC:\"10.6\",nC:\"11.6\",oC:\"4.0-4.1\",pC:\"5.0-5.1\",qC:\"6.0-6.1\",rC:\"7.0-7.1\",sC:\"8.1-8.4\",tC:\"9.0-9.2\",uC:\"9.3\",vC:\"10.0-10.2\",wC:\"10.3\",xC:\"11.0-11.2\",yC:\"11.3-11.4\",zC:\"12.0-12.1\",\"0C\":\"12.2-12.5\",\"1C\":\"13.0-13.1\",\"2C\":\"13.2\",\"3C\":\"13.3\",\"4C\":\"13.4-13.7\",\"5C\":\"14.0-14.4\",\"6C\":\"14.5-14.8\",\"7C\":\"15.0-15.1\",\"8C\":\"15.6-15.8\",\"9C\":\"16.6-16.7\",AD:\"all\",BD:\"2.1\",CD:\"2.2\",DD:\"2.3\",ED:\"4.1\",FD:\"4.4\",GD:\"4.4.3-4.4.4\",HD:\"5.0-5.4\",ID:\"6.2-6.4\",JD:\"7.2-7.4\",KD:\"8.2\",LD:\"9.2\",MD:\"11.1-11.2\",ND:\"12.0\",OD:\"13.0\",PD:\"14.0\",QD:\"15.0\",RD:\"18.0\",SD:\"19.0\",TD:\"13.18\",UD:\"2.5\",VD:\"3.0-3.1\"};\n","module.exports.browserVersions = require('../../data/browserVersions')\n","module.exports={A:{A:{J:0,D:0,E:0.0130265,F:0.0390796,A:0,B:0.442902,TC:0},B:\"ms{TC:962323200,J:998870400,D:1161129600,E:1237420800,F:1300060800,A:1346716800,B:1381968000}},B:{A:{\"0\":0.007984,\"1\":0.015968,\"2\":0.015968,\"3\":0.011976,\"4\":0.015968,\"5\":0.015968,\"6\":0.035928,\"7\":0.267464,\"8\":3.72853,C:0,K:0,L:0,G:0.003992,M:0,N:0.003992,O:0.011976,P:0,Q:0,R:0,S:0,T:0,U:0,V:0,W:0.35928,X:0,Y:0,Z:0,a:0,b:0.011976,c:0,d:0,e:0,f:0,g:0,h:0,i:0.015968,j:0,k:0,l:0,m:0,n:0,o:0,p:0.003992,v:0.007984,w:0.011976,x:0.067864,y:0.007984,z:0.007984,H:0.522952},B:\"webkit\",C:[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"C\",\"K\",\"L\",\"G\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"v\",\"w\",\"x\",\"y\",\"z\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"H\",\"\",\"\",\"\"],E:\"Edge\",F:{\"0\":1680825600,\"1\":1683158400,\"2\":1685664000,\"3\":1689897600,\"4\":1692576000,\"5\":1694649600,\"6\":1697155200,\"7\":1698969600,\"8\":1701993600,C:1438128000,K:1447286400,L:1470096000,G:1491868800,M:1508198400,N:1525046400,O:1542067200,P:1579046400,Q:1581033600,R:1586736000,S:1590019200,T:1594857600,U:1598486400,V:1602201600,W:1605830400,X:1611360000,Y:1614816000,Z:1618358400,a:1622073600,b:1626912000,c:1630627200,d:1632441600,e:1634774400,f:1637539200,g:1641427200,h:1643932800,i:1646265600,j:1649635200,k:1651190400,l:1653955200,m:1655942400,n:1659657600,o:1661990400,p:1664755200,v:1666915200,w:1670198400,x:1673481600,y:1675900800,z:1678665600,H:1706227200},D:{C:\"ms\",K:\"ms\",L:\"ms\",G:\"ms\",M:\"ms\",N:\"ms\",O:\"ms\"}},C:{A:{\"0\":0.003992,\"1\":0.007984,\"2\":0.011976,\"3\":0.467064,\"4\":0.003992,\"5\":0.007984,\"6\":0.087824,\"7\":0.227544,\"8\":0.231536,\"9\":0,UC:0,\"7B\":0,I:0.003992,J:0,D:0,E:0,F:0,A:0,B:0.027944,C:0.03992,K:0,L:0,G:0,M:0,N:0,O:0,AB:0,q:0,r:0,s:0,t:0,BB:0,CB:0,DB:0,EB:0,FB:0,GB:0,HB:0,IB:0,JB:0,KB:0,LB:0,MB:0,NB:0,OB:0,PB:0,QB:0,RB:0,SB:0,TB:0,UB:0.007984,VB:0.007984,WB:0.003992,XB:0,YB:0,ZB:0,aB:0,bB:0.003992,cB:0,dB:0.055888,eB:0.007984,fB:0.007984,gB:0.007984,hB:0.01996,iB:0,jB:0,\"8B\":0.003992,kB:0,\"9B\":0,lB:0,mB:0,nB:0,oB:0,pB:0,qB:0,rB:0,sB:0,tB:0,uB:0,vB:0.003992,u:0,wB:0,xB:0,yB:0,zB:0,\"0B\":0.015968,P:0,Q:0,R:0,AC:0,S:0,T:0,U:0,V:0,W:0,X:0.007984,Y:0,Z:0,a:0.011976,b:0,c:0,d:0.007984,e:0,f:0,g:0,h:0,i:0,j:0,k:0.011976,l:0.027944,m:0.031936,n:0.003992,o:0.003992,p:0,v:0.003992,w:0.007984,x:0.007984,y:0.003992,z:0.003992,H:1.2455,\"1B\":0.275448,BC:0,CC:0,DC:0,VC:0,WC:0,XC:0},B:\"moz\",C:[\"UC\",\"7B\",\"WC\",\"XC\",\"I\",\"9\",\"J\",\"D\",\"E\",\"F\",\"A\",\"B\",\"C\",\"K\",\"L\",\"G\",\"M\",\"N\",\"O\",\"AB\",\"q\",\"r\",\"s\",\"t\",\"BB\",\"CB\",\"DB\",\"EB\",\"FB\",\"GB\",\"HB\",\"IB\",\"JB\",\"KB\",\"LB\",\"MB\",\"NB\",\"OB\",\"PB\",\"QB\",\"RB\",\"SB\",\"TB\",\"UB\",\"VB\",\"WB\",\"XB\",\"YB\",\"ZB\",\"aB\",\"bB\",\"cB\",\"dB\",\"eB\",\"fB\",\"gB\",\"hB\",\"iB\",\"jB\",\"8B\",\"kB\",\"9B\",\"lB\",\"mB\",\"nB\",\"oB\",\"pB\",\"qB\",\"rB\",\"sB\",\"tB\",\"uB\",\"vB\",\"u\",\"wB\",\"xB\",\"yB\",\"zB\",\"0B\",\"P\",\"Q\",\"R\",\"AC\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"v\",\"w\",\"x\",\"y\",\"z\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"H\",\"1B\",\"BC\",\"CC\",\"DC\",\"VC\"],E:\"Firefox\",F:{\"0\":1681171200,\"1\":1683590400,\"2\":1686009600,\"3\":1688428800,\"4\":1690848000,\"5\":1693267200,\"6\":1695686400,\"7\":1698105600,\"8\":1700524800,\"9\":1308614400,UC:1161648000,\"7B\":1213660800,WC:1246320000,XC:1264032000,I:1300752000,J:1313452800,D:1317081600,E:1317081600,F:1320710400,A:1324339200,B:1327968000,C:1331596800,K:1335225600,L:1338854400,G:1342483200,M:1346112000,N:1349740800,O:1353628800,AB:1357603200,q:1361232000,r:1364860800,s:1368489600,t:1372118400,BB:1375747200,CB:1379376000,DB:1386633600,EB:1391472000,FB:1395100800,GB:1398729600,HB:1402358400,IB:1405987200,JB:1409616000,KB:1413244800,LB:1417392000,MB:1421107200,NB:1424736000,OB:1428278400,PB:1431475200,QB:1435881600,RB:1439251200,SB:1442880000,TB:1446508800,UB:1450137600,VB:1453852800,WB:1457395200,XB:1461628800,YB:1465257600,ZB:1470096000,aB:1474329600,bB:1479168000,cB:1485216000,dB:1488844800,eB:1492560000,fB:1497312000,gB:1502150400,hB:1506556800,iB:1510617600,jB:1516665600,\"8B\":1520985600,kB:1525824000,\"9B\":1529971200,lB:1536105600,mB:1540252800,nB:1544486400,oB:1548720000,pB:1552953600,qB:1558396800,rB:1562630400,sB:1567468800,tB:1571788800,uB:1575331200,vB:1578355200,u:1581379200,wB:1583798400,xB:1586304000,yB:1588636800,zB:1591056000,\"0B\":1593475200,P:1595894400,Q:1598313600,R:1600732800,AC:1603152000,S:1605571200,T:1607990400,U:1611619200,V:1614038400,W:1616457600,X:1618790400,Y:1622505600,Z:1626134400,a:1628553600,b:1630972800,c:1633392000,d:1635811200,e:1638835200,f:1641859200,g:1644364800,h:1646697600,i:1649116800,j:1651536000,k:1653955200,l:1656374400,m:1658793600,n:1661212800,o:1663632000,p:1666051200,v:1668470400,w:1670889600,x:1673913600,y:1676332800,z:1678752000,H:1702944000,\"1B\":1705968000,BC:1708387200,CC:null,DC:null,VC:null}},D:{A:{\"0\":0.075848,\"1\":0.15968,\"2\":0.115768,\"3\":0.07984,\"4\":0.263472,\"5\":0.195608,\"6\":0.467064,\"7\":2.4471,\"8\":15.8562,\"9\":0,I:0,J:0,D:0,E:0,F:0,A:0,B:0,C:0,K:0,L:0,G:0,M:0,N:0,O:0,AB:0,q:0,r:0,s:0,t:0,BB:0,CB:0,DB:0,EB:0,FB:0,GB:0,HB:0,IB:0,JB:0,KB:0,LB:0.003992,MB:0,NB:0,OB:0,PB:0.015968,QB:0,RB:0,SB:0,TB:0,UB:0,VB:0,WB:0.007984,XB:0,YB:0.003992,ZB:0.031936,aB:0.027944,bB:0.007984,cB:0,dB:0,eB:0.007984,fB:0.007984,gB:0.007984,hB:0.015968,iB:0.007984,jB:0,\"8B\":0,kB:0.015968,\"9B\":0.003992,lB:0,mB:0.003992,nB:0,oB:0.003992,pB:0.027944,qB:0.007984,rB:0,sB:0.035928,tB:0.023952,uB:0.007984,vB:0.003992,u:0.011976,wB:0.007984,xB:0.007984,yB:0.007984,zB:0.011976,\"0B\":0.015968,P:0.11976,Q:0.015968,R:0.031936,S:0.043912,T:0.007984,U:0.023952,V:0.03992,W:0.083832,X:0.01996,Y:0.015968,Z:0.01996,a:0.05988,b:0.027944,c:0.051896,d:0.047904,e:0.011976,f:0.015968,g:0.015968,h:0.067864,i:0.035928,j:0.031936,k:0.043912,l:0.031936,m:0.143712,n:0.063872,o:0.03992,p:0.051896,v:0.043912,w:0.075848,x:1.6447,y:0.055888,z:0.071856,H:1.11776,\"1B\":0.015968,BC:0,CC:0,DC:0},B:\"webkit\",C:[\"\",\"\",\"\",\"\",\"\",\"\",\"I\",\"9\",\"J\",\"D\",\"E\",\"F\",\"A\",\"B\",\"C\",\"K\",\"L\",\"G\",\"M\",\"N\",\"O\",\"AB\",\"q\",\"r\",\"s\",\"t\",\"BB\",\"CB\",\"DB\",\"EB\",\"FB\",\"GB\",\"HB\",\"IB\",\"JB\",\"KB\",\"LB\",\"MB\",\"NB\",\"OB\",\"PB\",\"QB\",\"RB\",\"SB\",\"TB\",\"UB\",\"VB\",\"WB\",\"XB\",\"YB\",\"ZB\",\"aB\",\"bB\",\"cB\",\"dB\",\"eB\",\"fB\",\"gB\",\"hB\",\"iB\",\"jB\",\"8B\",\"kB\",\"9B\",\"lB\",\"mB\",\"nB\",\"oB\",\"pB\",\"qB\",\"rB\",\"sB\",\"tB\",\"uB\",\"vB\",\"u\",\"wB\",\"xB\",\"yB\",\"zB\",\"0B\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"v\",\"w\",\"x\",\"y\",\"z\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"H\",\"1B\",\"BC\",\"CC\",\"DC\"],E:\"Chrome\",F:{\"0\":1680566400,\"1\":1682985600,\"2\":1685404800,\"3\":1689724800,\"4\":1692057600,\"5\":1694476800,\"6\":1696896000,\"7\":1698710400,\"8\":1701993600,\"9\":1274745600,I:1264377600,J:1283385600,D:1287619200,E:1291248000,F:1296777600,A:1299542400,B:1303862400,C:1307404800,K:1312243200,L:1316131200,G:1316131200,M:1319500800,N:1323734400,O:1328659200,AB:1332892800,q:1337040000,r:1340668800,s:1343692800,t:1348531200,BB:1352246400,CB:1357862400,DB:1361404800,EB:1364428800,FB:1369094400,GB:1374105600,HB:1376956800,IB:1384214400,JB:1389657600,KB:1392940800,LB:1397001600,MB:1400544000,NB:1405468800,OB:1409011200,PB:1412640000,QB:1416268800,RB:1421798400,SB:1425513600,TB:1429401600,UB:1432080000,VB:1437523200,WB:1441152000,XB:1444780800,YB:1449014400,ZB:1453248000,aB:1456963200,bB:1460592000,cB:1464134400,dB:1469059200,eB:1472601600,fB:1476230400,gB:1480550400,hB:1485302400,iB:1489017600,jB:1492560000,\"8B\":1496707200,kB:1500940800,\"9B\":1504569600,lB:1508198400,mB:1512518400,nB:1516752000,oB:1520294400,pB:1523923200,qB:1527552000,rB:1532390400,sB:1536019200,tB:1539648000,uB:1543968000,vB:1548720000,u:1552348800,wB:1555977600,xB:1559606400,yB:1564444800,zB:1568073600,\"0B\":1571702400,P:1575936000,Q:1580860800,R:1586304000,S:1589846400,T:1594684800,U:1598313600,V:1601942400,W:1605571200,X:1611014400,Y:1614556800,Z:1618272000,a:1621987200,b:1626739200,c:1630368000,d:1632268800,e:1634601600,f:1637020800,g:1641340800,h:1643673600,i:1646092800,j:1648512000,k:1650931200,l:1653350400,m:1655769600,n:1659398400,o:1661817600,p:1664236800,v:1666656000,w:1669680000,x:1673308800,y:1675728000,z:1678147200,H:1705968000,\"1B\":1708387200,BC:null,CC:null,DC:null}},E:{A:{\"9\":0,I:0,J:0,D:0,E:0,F:0.003992,A:0,B:0,C:0,K:0.007984,L:0.03992,G:0.007984,YC:0,EC:0,ZC:0.003992,aC:0,bC:0,cC:0.011976,FC:0,\"2B\":0.015968,\"3B\":0.015968,GC:0.071856,dC:0.111776,eC:0.031936,HC:0.011976,IC:0.031936,\"4B\":0.043912,fC:0.2994,\"5B\":0.031936,JC:0.071856,KC:0.05988,LC:0.143712,MC:0.063872,NC:0.103792,gC:0.526944,\"6B\":0.11976,OC:0.694608,PC:0.850296,QC:0.055888,hC:0,iC:0},B:\"webkit\",C:[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"YC\",\"EC\",\"I\",\"9\",\"ZC\",\"J\",\"aC\",\"D\",\"bC\",\"E\",\"F\",\"cC\",\"A\",\"FC\",\"B\",\"2B\",\"C\",\"3B\",\"K\",\"GC\",\"L\",\"dC\",\"G\",\"eC\",\"HC\",\"IC\",\"4B\",\"fC\",\"5B\",\"JC\",\"KC\",\"LC\",\"MC\",\"NC\",\"gC\",\"6B\",\"OC\",\"PC\",\"QC\",\"hC\",\"iC\",\"\"],E:\"Safari\",F:{\"9\":1275868800,YC:1205798400,EC:1226534400,I:1244419200,ZC:1311120000,J:1343174400,aC:1382400000,D:1382400000,bC:1410998400,E:1413417600,F:1443657600,cC:1458518400,A:1474329600,FC:1490572800,B:1505779200,\"2B\":1522281600,C:1537142400,\"3B\":1553472000,K:1568851200,GC:1585008000,L:1600214400,dC:1619395200,G:1632096000,eC:1635292800,HC:1639353600,IC:1647216000,\"4B\":1652745600,fC:1658275200,\"5B\":1662940800,JC:1666569600,KC:1670889600,LC:1674432000,MC:1679875200,NC:1684368000,gC:1690156800,\"6B\":1695686400,OC:1698192000,PC:1702252800,QC:1705881600,hC:null,iC:null}},F:{A:{F:0,B:0,C:0,G:0,M:0,N:0,O:0,AB:0,q:0,r:0,s:0,t:0,BB:0,CB:0,DB:0,EB:0,FB:0.003992,GB:0,HB:0,IB:0,JB:0,KB:0,LB:0,MB:0,NB:0,OB:0,PB:0,QB:0,RB:0.003992,SB:0,TB:0,UB:0,VB:0,WB:0,XB:0.015968,YB:0,ZB:0,aB:0,bB:0,cB:0,dB:0,eB:0,fB:0,gB:0,hB:0,iB:0,jB:0,kB:0,lB:0,mB:0,nB:0,oB:0,pB:0,qB:0,rB:0,sB:0,tB:0,uB:0,vB:0,u:0,wB:0,xB:0,yB:0,zB:0,\"0B\":0,P:0,Q:0,R:0,AC:0,S:0,T:0,U:0,V:0,W:0,X:0,Y:0.003992,Z:0,a:0,b:0,c:0,d:0,e:0.043912,f:0,g:0,h:0,i:0,j:0,k:0,l:0.047904,m:0,n:0.007984,o:0.570856,p:0.483032,jC:0,kC:0,lC:0,mC:0,\"2B\":0,RC:0,nC:0,\"3B\":0},B:\"webkit\",C:[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"F\",\"jC\",\"kC\",\"lC\",\"mC\",\"B\",\"2B\",\"RC\",\"nC\",\"C\",\"3B\",\"G\",\"M\",\"N\",\"O\",\"AB\",\"q\",\"r\",\"s\",\"t\",\"BB\",\"CB\",\"DB\",\"EB\",\"FB\",\"GB\",\"HB\",\"IB\",\"JB\",\"KB\",\"LB\",\"MB\",\"NB\",\"OB\",\"PB\",\"QB\",\"RB\",\"SB\",\"TB\",\"UB\",\"VB\",\"WB\",\"XB\",\"YB\",\"ZB\",\"aB\",\"bB\",\"cB\",\"dB\",\"eB\",\"fB\",\"gB\",\"hB\",\"iB\",\"jB\",\"kB\",\"lB\",\"mB\",\"nB\",\"oB\",\"pB\",\"qB\",\"rB\",\"sB\",\"tB\",\"uB\",\"vB\",\"u\",\"wB\",\"xB\",\"yB\",\"zB\",\"0B\",\"P\",\"Q\",\"R\",\"AC\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"\",\"\",\"\"],E:\"Opera\",F:{F:1150761600,jC:1223424000,kC:1251763200,lC:1267488000,mC:1277942400,B:1292457600,\"2B\":1302566400,RC:1309219200,nC:1323129600,C:1323129600,\"3B\":1352073600,G:1372723200,M:1377561600,N:1381104000,O:1386288000,AB:1390867200,q:1393891200,r:1399334400,s:1401753600,t:1405987200,BB:1409616000,CB:1413331200,DB:1417132800,EB:1422316800,FB:1425945600,GB:1430179200,HB:1433808000,IB:1438646400,JB:1442448000,KB:1445904000,LB:1449100800,MB:1454371200,NB:1457308800,OB:1462320000,PB:1465344000,QB:1470096000,RB:1474329600,SB:1477267200,TB:1481587200,UB:1486425600,VB:1490054400,WB:1494374400,XB:1498003200,YB:1502236800,ZB:1506470400,aB:1510099200,bB:1515024000,cB:1517961600,dB:1521676800,eB:1525910400,fB:1530144000,gB:1534982400,hB:1537833600,iB:1543363200,jB:1548201600,kB:1554768000,lB:1561593600,mB:1566259200,nB:1570406400,oB:1573689600,pB:1578441600,qB:1583971200,rB:1587513600,sB:1592956800,tB:1595894400,uB:1600128000,vB:1603238400,u:1613520000,wB:1612224000,xB:1616544000,yB:1619568000,zB:1623715200,\"0B\":1627948800,P:1631577600,Q:1633392000,R:1635984000,AC:1638403200,S:1642550400,T:1644969600,U:1647993600,V:1650412800,W:1652745600,X:1654646400,Y:1657152000,Z:1660780800,a:1663113600,b:1668816000,c:1668643200,d:1671062400,e:1675209600,f:1677024000,g:1679529600,h:1681948800,i:1684195200,j:1687219200,k:1690329600,l:1692748800,m:1696204800,n:1699920000,o:1699920000,p:1702944000},D:{F:\"o\",B:\"o\",C:\"o\",jC:\"o\",kC:\"o\",lC:\"o\",mC:\"o\",\"2B\":\"o\",RC:\"o\",nC:\"o\",\"3B\":\"o\"}},G:{A:{E:0,EC:0,oC:0,SC:0.00300931,pC:0.00451396,qC:0.00752327,rC:0.0105326,sC:0.00150465,tC:0.00902792,uC:0.034607,vC:0.00300931,wC:0.0541675,xC:0.0210652,yC:0.0240745,zC:0.0135419,\"0C\":0.267828,\"1C\":0.00451396,\"2C\":0.0496536,\"3C\":0.0135419,\"4C\":0.0601861,\"5C\":0.105326,\"6C\":0.160998,\"7C\":0.0692141,HC:0.0797466,IC:0.0932885,\"4B\":0.123382,\"8C\":0.961474,\"5B\":0.288893,JC:0.615403,KC:0.279866,LC:0.52061,MC:0.115858,NC:0.246763,\"9C\":2.01925,\"6B\":0.335538,OC:3.46221,PC:4.67947,QC:0.300931},B:\"webkit\",C:[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"EC\",\"oC\",\"SC\",\"pC\",\"qC\",\"rC\",\"E\",\"sC\",\"tC\",\"uC\",\"vC\",\"wC\",\"xC\",\"yC\",\"zC\",\"0C\",\"1C\",\"2C\",\"3C\",\"4C\",\"5C\",\"6C\",\"7C\",\"HC\",\"IC\",\"4B\",\"8C\",\"5B\",\"JC\",\"KC\",\"LC\",\"MC\",\"NC\",\"9C\",\"6B\",\"OC\",\"PC\",\"QC\",\"\",\"\",\"\"],E:\"Safari on iOS\",F:{EC:1270252800,oC:1283904000,SC:1299628800,pC:1331078400,qC:1359331200,rC:1394409600,E:1410912000,sC:1413763200,tC:1442361600,uC:1458518400,vC:1473724800,wC:1490572800,xC:1505779200,yC:1522281600,zC:1537142400,\"0C\":1553472000,\"1C\":1568851200,\"2C\":1572220800,\"3C\":1580169600,\"4C\":1585008000,\"5C\":1600214400,\"6C\":1619395200,\"7C\":1632096000,HC:1639353600,IC:1647216000,\"4B\":1652659200,\"8C\":1658275200,\"5B\":1662940800,JC:1666569600,KC:1670889600,LC:1674432000,MC:1679875200,NC:1684368000,\"9C\":1690156800,\"6B\":1694995200,OC:1698192000,PC:1702252800,QC:1705881600}},H:{A:{AD:0.08},B:\"opera Mini\",F:{AD:1426464000}},I:{A:{\"7B\":0,I:0.0000588882,H:0.293145,BD:0,CD:0.0000294441,DD:0,ED:0.0000588882,SC:0.000206109,FD:0,GD:0.000765547},B:\"webkitndroid Browser\",F:{BD:1256515200,CD:1274313600,DD:1291593600,\"7B\":1298332800,I:1318896000,ED:1341792000,SC:1374624000,FD:1386547200,GD:1401667200,H:1705968000}},J:{A:{D:0,A:0},B:\"webkitlackberry Browser\",F:{D:1325376000,A:1359504000}},K:{A:{A:0,B:0,C:0,u:1.19391,\"2B\":0,RC:0,\"3B\":0},B:\"ou\",\"\",\"\",\"\"],E:\"Opera Mobile\",F:{A:1287100800,B:1300752000,\"2B\":1314835200,RC:1318291200,C:1330300800,\"3B\":1349740800,u:1673827200},D:{u:\"webkit\"}},L:{A:{H:40.5268},B:\"webkithrome for Android\",F:{H:1705968000}},M:{A:{\"1B\":0.30045},B:\"moz\",C:[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"1B\",\"\",\"\",\"\"],E:\"Firefox for Android\",F:{\"1B\":1705968000}},N:{A:{A:0,B:0},B:\"msobile\",F:{A:1340150400,B:1353456000}},O:{A:{\"4B\":0.811215},B:\"webkitrowser for Android\",F:{\"4B\":1687132800},D:{\"4B\":\"webkit\"}},P:{A:{I:0.139654,q:0.0322279,r:0.0751983,s:0.0966836,t:2.10555,HD:0.0107426,ID:0,JD:0.0537131,KD:0,LD:0,FC:0,MD:0.0107426,ND:0,OD:0.0107426,PD:0,QD:0,\"5B\":0.0107426,\"6B\":0.0322279,RD:0.0214852,SD:0.0322279},B:\"webkitq\",\"r\",\"s\",\"t\",\"\",\"\",\"\"],E:\"Samsung Internet\",F:{I:1461024000,HD:1481846400,ID:1509408000,JD:1528329600,KD:1546128000,LD:1554163200,FC:1567900800,MD:1582588800,ND:1593475200,OD:1605657600,PD:1618531200,QD:1629072000,\"5B\":1640736000,\"6B\":1651708800,RD:1659657600,SD:1667260800,q:1677369600,r:1684454400,s:1689292800,t:1697587200}},Q:{A:{GC:0.204306},B:\"webkitrowser\",F:{GC:1663718400}},R:{A:{TD:0},B:\"webkitaidu Browser\",F:{TD:1663027200}},S:{A:{UD:0.090135,VD:0},B:\"mozaiOS Browser\",F:{UD:1527811200,VD:1631664000}}};\n","'use strict'\n\nconst browsers = require('./browsers').browsers\nconst versions = require('./browserVersions').browserVersions\nconst agentsData = require('../../data/agents')\n\nfunction unpackBrowserVersions(versionsData) {\n  return Object.keys(versionsData).reduce((usage, version) => {\n    usage[versions[version]] = versionsData[version]\n    return usage\n  }, {})\n}\n\nmodule.exports.agents = Object.keys(agentsData).reduce((map, key) => {\n  let versionsData = agentsData[key]\n  map[browsers[key]] = Object.keys(versionsData).reduce((data, entry) => {\n    if (entry === 'A') {\n      data.usage_global = unpackBrowserVersions(versionsData[entry])\n    } else if (entry === 'C') {\n      data.versions = versionsData[entry].reduce((list, version) => {\n        if (version === '') {\n          list.push(null)\n        } else {\n          list.push(versions[version])\n        }\n        return list\n      }, [])\n    } else if (entry === 'D') {\n      data.prefix_exceptions = unpackBrowserVersions(versionsData[entry])\n    } else if (entry === 'E') {\n      data.browser = versionsData[entry]\n    } else if (entry === 'F') {\n      data.release_date = Object.keys(versionsData[entry]).reduce(\n        (map2, key2) => {\n          map2[versions[key2]] = versionsData[entry][key2]\n          return map2\n        },\n        {}\n      )\n    } else {\n      // entry is B\n      data.prefix = versionsData[entry]\n    }\n    return data\n  }, {})\n  return map\n}, {})\n","module.exports = {\n\t\"0.20\": \"39\",\n\t\"0.21\": \"41\",\n\t\"0.22\": \"41\",\n\t\"0.23\": \"41\",\n\t\"0.24\": \"41\",\n\t\"0.25\": \"42\",\n\t\"0.26\": \"42\",\n\t\"0.27\": \"43\",\n\t\"0.28\": \"43\",\n\t\"0.29\": \"43\",\n\t\"0.30\": \"44\",\n\t\"0.31\": \"45\",\n\t\"0.32\": \"45\",\n\t\"0.33\": \"45\",\n\t\"0.34\": \"45\",\n\t\"0.35\": \"45\",\n\t\"0.36\": \"47\",\n\t\"0.37\": \"49\",\n\t\"1.0\": \"49\",\n\t\"1.1\": \"50\",\n\t\"1.2\": \"51\",\n\t\"1.3\": \"52\",\n\t\"1.4\": \"53\",\n\t\"1.5\": \"54\",\n\t\"1.6\": \"56\",\n\t\"1.7\": \"58\",\n\t\"1.8\": \"59\",\n\t\"2.0\": \"61\",\n\t\"2.1\": \"61\",\n\t\"3.0\": \"66\",\n\t\"3.1\": \"66\",\n\t\"4.0\": \"69\",\n\t\"4.1\": \"69\",\n\t\"4.2\": \"69\",\n\t\"5.0\": \"73\",\n\t\"6.0\": \"76\",\n\t\"6.1\": \"76\",\n\t\"7.0\": \"78\",\n\t\"7.1\": \"78\",\n\t\"7.2\": \"78\",\n\t\"7.3\": \"78\",\n\t\"8.0\": \"80\",\n\t\"8.1\": \"80\",\n\t\"8.2\": \"80\",\n\t\"8.3\": \"80\",\n\t\"8.4\": \"80\",\n\t\"8.5\": \"80\",\n\t\"9.0\": \"83\",\n\t\"9.1\": \"83\",\n\t\"9.2\": \"83\",\n\t\"9.3\": \"83\",\n\t\"9.4\": \"83\",\n\t\"10.0\": \"85\",\n\t\"10.1\": \"85\",\n\t\"10.2\": \"85\",\n\t\"10.3\": \"85\",\n\t\"10.4\": \"85\",\n\t\"11.0\": \"87\",\n\t\"11.1\": \"87\",\n\t\"11.2\": \"87\",\n\t\"11.3\": \"87\",\n\t\"11.4\": \"87\",\n\t\"11.5\": \"87\",\n\t\"12.0\": \"89\",\n\t\"12.1\": \"89\",\n\t\"12.2\": \"89\",\n\t\"13.0\": \"91\",\n\t\"13.1\": \"91\",\n\t\"13.2\": \"91\",\n\t\"13.3\": \"91\",\n\t\"13.4\": \"91\",\n\t\"13.5\": \"91\",\n\t\"13.6\": \"91\",\n\t\"14.0\": \"93\",\n\t\"14.1\": \"93\",\n\t\"14.2\": \"93\",\n\t\"15.0\": \"94\",\n\t\"15.1\": \"94\",\n\t\"15.2\": \"94\",\n\t\"15.3\": \"94\",\n\t\"15.4\": \"94\",\n\t\"15.5\": \"94\",\n\t\"16.0\": \"96\",\n\t\"16.1\": \"96\",\n\t\"16.2\": \"96\",\n\t\"17.0\": \"98\",\n\t\"17.1\": \"98\",\n\t\"17.2\": \"98\",\n\t\"17.3\": \"98\",\n\t\"17.4\": \"98\",\n\t\"18.0\": \"100\",\n\t\"18.1\": \"100\",\n\t\"18.2\": \"100\",\n\t\"18.3\": \"100\",\n\t\"19.0\": \"102\",\n\t\"19.1\": \"102\",\n\t\"20.0\": \"104\",\n\t\"20.1\": \"104\",\n\t\"20.2\": \"104\",\n\t\"20.3\": \"104\",\n\t\"21.0\": \"106\",\n\t\"21.1\": \"106\",\n\t\"21.2\": \"106\",\n\t\"21.3\": \"106\",\n\t\"21.4\": \"106\",\n\t\"22.0\": \"108\",\n\t\"22.1\": \"108\",\n\t\"22.2\": \"108\",\n\t\"22.3\": \"108\",\n\t\"23.0\": \"110\",\n\t\"23.1\": \"110\",\n\t\"23.2\": \"110\",\n\t\"23.3\": \"110\",\n\t\"24.0\": \"112\",\n\t\"24.1\": \"112\",\n\t\"24.2\": \"112\",\n\t\"24.3\": \"112\",\n\t\"24.4\": \"112\",\n\t\"24.5\": \"112\",\n\t\"24.6\": \"112\",\n\t\"24.7\": \"112\",\n\t\"24.8\": \"112\",\n\t\"25.0\": \"114\",\n\t\"25.1\": \"114\",\n\t\"25.2\": \"114\",\n\t\"25.3\": \"114\",\n\t\"25.4\": \"114\",\n\t\"25.5\": \"114\",\n\t\"25.6\": \"114\",\n\t\"25.7\": \"114\",\n\t\"25.8\": \"114\",\n\t\"25.9\": \"114\",\n\t\"26.0\": \"116\",\n\t\"26.1\": \"116\",\n\t\"26.2\": \"116\",\n\t\"26.3\": \"116\",\n\t\"26.4\": \"116\",\n\t\"26.5\": \"116\",\n\t\"26.6\": \"116\",\n\t\"27.0\": \"118\",\n\t\"27.1\": \"118\",\n\t\"27.2\": \"118\",\n\t\"27.3\": \"118\",\n\t\"28.0\": \"120\",\n\t\"28.1\": \"120\",\n\t\"28.2\": \"120\",\n\t\"29.0\": \"122\",\n\t\"30.0\": \"123\"\n};","function BrowserslistError(message) {\n  this.name = 'BrowserslistError'\n  this.message = message\n  this.browserslist = true\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, BrowserslistError)\n  }\n}\n\nBrowserslistError.prototype = Error.prototype\n\nmodule.exports = BrowserslistError\n","var AND_REGEXP = /^\\s+and\\s+(.*)/i\nvar OR_REGEXP = /^(?:,\\s*|\\s+or\\s+)(.*)/i\n\nfunction flatten(array) {\n  if (!Array.isArray(array)) return [array]\n  return array.reduce(function (a, b) {\n    return a.concat(flatten(b))\n  }, [])\n}\n\nfunction find(string, predicate) {\n  for (var n = 1, max = string.length; n <= max; n++) {\n    var parsed = string.substr(-n, n)\n    if (predicate(parsed, n, max)) {\n      return string.slice(0, -n)\n    }\n  }\n  return ''\n}\n\nfunction matchQuery(all, query) {\n  var node = { query: query }\n  if (query.indexOf('not ') === 0) {\n    node.not = true\n    query = query.slice(4)\n  }\n\n  for (var name in all) {\n    var type = all[name]\n    var match = query.match(type.regexp)\n    if (match) {\n      node.type = name\n      for (var i = 0; i < type.matches.length; i++) {\n        node[type.matches[i]] = match[i + 1]\n      }\n      return node\n    }\n  }\n\n  node.type = 'unknown'\n  return node\n}\n\nfunction matchBlock(all, string, qs) {\n  var node\n  return find(string, function (parsed, n, max) {\n    if (AND_REGEXP.test(parsed)) {\n      node = matchQuery(all, parsed.match(AND_REGEXP)[1])\n      node.compose = 'and'\n      qs.unshift(node)\n      return true\n    } else if (OR_REGEXP.test(parsed)) {\n      node = matchQuery(all, parsed.match(OR_REGEXP)[1])\n      node.compose = 'or'\n      qs.unshift(node)\n      return true\n    } else if (n === max) {\n      node = matchQuery(all, parsed.trim())\n      node.compose = 'or'\n      qs.unshift(node)\n      return true\n    }\n    return false\n  })\n}\n\nmodule.exports = function parse(all, queries) {\n  if (!Array.isArray(queries)) queries = [queries]\n  return flatten(\n    queries.map(function (block) {\n      var qs = []\n      do {\n        block = matchBlock(all, block, qs)\n      } while (block)\n      return qs\n    })\n  )\n}\n","var BrowserslistError = require('./error')\n\nfunction noop() {}\n\nmodule.exports = {\n  loadQueries: function loadQueries() {\n    throw new BrowserslistError(\n      'Sharable configs are not supported in client-side build of Browserslist'\n    )\n  },\n\n  getStat: function getStat(opts) {\n    return opts.stats\n  },\n\n  loadConfig: function loadConfig(opts) {\n    if (opts.config) {\n      throw new BrowserslistError(\n        'Browserslist config are not supported in client-side build'\n      )\n    }\n  },\n\n  loadCountry: function loadCountry() {\n    throw new BrowserslistError(\n      'Country statistics are not supported ' +\n        'in client-side build of Browserslist'\n    )\n  },\n\n  loadFeature: function loadFeature() {\n    throw new BrowserslistError(\n      'Supports queries are not available in client-side build of Browserslist'\n    )\n  },\n\n  currentNode: function currentNode(resolve, context) {\n    return resolve(['maintained node versions'], context)[0]\n  },\n\n  parseConfig: noop,\n\n  readConfig: noop,\n\n  findConfig: noop,\n\n  clearCaches: noop,\n\n  oldDataWarning: noop,\n\n  env: {}\n}\n","var jsReleases = require('node-releases/data/processed/envs.json')\nvar agents = require('caniuse-lite/dist/unpacker/agents').agents\nvar jsEOL = require('node-releases/data/release-schedule/release-schedule.json')\nvar path = require('path')\nvar e2c = require('electron-to-chromium/versions')\n\nvar BrowserslistError = require('./error')\nvar parse = require('./parse')\nvar env = require('./node') // Will load browser.js in webpack\n\nvar YEAR = 365.259641 * 24 * 60 * 60 * 1000\nvar ANDROID_EVERGREEN_FIRST = '37'\nvar OP_MOB_BLINK_FIRST = 14\n\n// Helpers\n\nfunction isVersionsMatch(versionA, versionB) {\n  return (versionA + '.').indexOf(versionB + '.') === 0\n}\n\nfunction isEolReleased(name) {\n  var version = name.slice(1)\n  return browserslist.nodeVersions.some(function (i) {\n    return isVersionsMatch(i, version)\n  })\n}\n\nfunction normalize(versions) {\n  return versions.filter(function (version) {\n    return typeof version === 'string'\n  })\n}\n\nfunction normalizeElectron(version) {\n  var versionToUse = version\n  if (version.split('.').length === 3) {\n    versionToUse = version.split('.').slice(0, -1).join('.')\n  }\n  return versionToUse\n}\n\nfunction nameMapper(name) {\n  return function mapName(version) {\n    return name + ' ' + version\n  }\n}\n\nfunction getMajor(version) {\n  return parseInt(version.split('.')[0])\n}\n\nfunction getMajorVersions(released, number) {\n  if (released.length === 0) return []\n  var majorVersions = uniq(released.map(getMajor))\n  var minimum = majorVersions[majorVersions.length - number]\n  if (!minimum) {\n    return released\n  }\n  var selected = []\n  for (var i = released.length - 1; i >= 0; i--) {\n    if (minimum > getMajor(released[i])) break\n    selected.unshift(released[i])\n  }\n  return selected\n}\n\nfunction uniq(array) {\n  var filtered = []\n  for (var i = 0; i < array.length; i++) {\n    if (filtered.indexOf(array[i]) === -1) filtered.push(array[i])\n  }\n  return filtered\n}\n\nfunction fillUsage(result, name, data) {\n  for (var i in data) {\n    result[name + ' ' + i] = data[i]\n  }\n}\n\nfunction generateFilter(sign, version) {\n  version = parseFloat(version)\n  if (sign === '>') {\n    return function (v) {\n      return parseFloat(v) > version\n    }\n  } else if (sign === '>=') {\n    return function (v) {\n      return parseFloat(v) >= version\n    }\n  } else if (sign === '<') {\n    return function (v) {\n      return parseFloat(v) < version\n    }\n  } else {\n    return function (v) {\n      return parseFloat(v) <= version\n    }\n  }\n}\n\nfunction generateSemverFilter(sign, version) {\n  version = version.split('.').map(parseSimpleInt)\n  version[1] = version[1] || 0\n  version[2] = version[2] || 0\n  if (sign === '>') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(v, version) > 0\n    }\n  } else if (sign === '>=') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(v, version) >= 0\n    }\n  } else if (sign === '<') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(version, v) > 0\n    }\n  } else {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(version, v) >= 0\n    }\n  }\n}\n\nfunction parseSimpleInt(x) {\n  return parseInt(x)\n}\n\nfunction compare(a, b) {\n  if (a < b) return -1\n  if (a > b) return +1\n  return 0\n}\n\nfunction compareSemver(a, b) {\n  return (\n    compare(parseInt(a[0]), parseInt(b[0])) ||\n    compare(parseInt(a[1] || '0'), parseInt(b[1] || '0')) ||\n    compare(parseInt(a[2] || '0'), parseInt(b[2] || '0'))\n  )\n}\n\n// this follows the npm-like semver behavior\nfunction semverFilterLoose(operator, range) {\n  range = range.split('.').map(parseSimpleInt)\n  if (typeof range[1] === 'undefined') {\n    range[1] = 'x'\n  }\n  // ignore any patch version because we only return minor versions\n  // range[2] = 'x'\n  switch (operator) {\n    case '<=':\n      return function (version) {\n        version = version.split('.').map(parseSimpleInt)\n        return compareSemverLoose(version, range) <= 0\n      }\n    case '>=':\n    default:\n      return function (version) {\n        version = version.split('.').map(parseSimpleInt)\n        return compareSemverLoose(version, range) >= 0\n      }\n  }\n}\n\n// this follows the npm-like semver behavior\nfunction compareSemverLoose(version, range) {\n  if (version[0] !== range[0]) {\n    return version[0] < range[0] ? -1 : +1\n  }\n  if (range[1] === 'x') {\n    return 0\n  }\n  if (version[1] !== range[1]) {\n    return version[1] < range[1] ? -1 : +1\n  }\n  return 0\n}\n\nfunction resolveVersion(data, version) {\n  if (data.versions.indexOf(version) !== -1) {\n    return version\n  } else if (browserslist.versionAliases[data.name][version]) {\n    return browserslist.versionAliases[data.name][version]\n  } else {\n    return false\n  }\n}\n\nfunction normalizeVersion(data, version) {\n  var resolved = resolveVersion(data, version)\n  if (resolved) {\n    return resolved\n  } else if (data.versions.length === 1) {\n    return data.versions[0]\n  } else {\n    return false\n  }\n}\n\nfunction filterByYear(since, context) {\n  since = since / 1000\n  return Object.keys(agents).reduce(function (selected, name) {\n    var data = byName(name, context)\n    if (!data) return selected\n    var versions = Object.keys(data.releaseDate).filter(function (v) {\n      var date = data.releaseDate[v]\n      return date !== null && date >= since\n    })\n    return selected.concat(versions.map(nameMapper(data.name)))\n  }, [])\n}\n\nfunction cloneData(data) {\n  return {\n    name: data.name,\n    versions: data.versions,\n    released: data.released,\n    releaseDate: data.releaseDate\n  }\n}\n\nfunction byName(name, context) {\n  name = name.toLowerCase()\n  name = browserslist.aliases[name] || name\n  if (context.mobileToDesktop && browserslist.desktopNames[name]) {\n    var desktop = browserslist.data[browserslist.desktopNames[name]]\n    if (name === 'android') {\n      return normalizeAndroidData(cloneData(browserslist.data[name]), desktop)\n    } else {\n      var cloned = cloneData(desktop)\n      cloned.name = name\n      return cloned\n    }\n  }\n  return browserslist.data[name]\n}\n\nfunction normalizeAndroidVersions(androidVersions, chromeVersions) {\n  var iFirstEvergreen = chromeVersions.indexOf(ANDROID_EVERGREEN_FIRST)\n  return androidVersions\n    .filter(function (version) {\n      return /^(?:[2-4]\\.|[34]$)/.test(version)\n    })\n    .concat(chromeVersions.slice(iFirstEvergreen))\n}\n\nfunction copyObject(obj) {\n  var copy = {}\n  for (var key in obj) {\n    copy[key] = obj[key]\n  }\n  return copy\n}\n\nfunction normalizeAndroidData(android, chrome) {\n  android.released = normalizeAndroidVersions(android.released, chrome.released)\n  android.versions = normalizeAndroidVersions(android.versions, chrome.versions)\n  android.releaseDate = copyObject(android.releaseDate)\n  android.released.forEach(function (v) {\n    if (android.releaseDate[v] === undefined) {\n      android.releaseDate[v] = chrome.releaseDate[v]\n    }\n  })\n  return android\n}\n\nfunction checkName(name, context) {\n  var data = byName(name, context)\n  if (!data) throw new BrowserslistError('Unknown browser ' + name)\n  return data\n}\n\nfunction unknownQuery(query) {\n  return new BrowserslistError(\n    'Unknown browser query `' +\n      query +\n      '`. ' +\n      'Maybe you are using old Browserslist or made typo in query.'\n  )\n}\n\n// Adjusts last X versions queries for some mobile browsers,\n// where caniuse data jumps from a legacy version to the latest\nfunction filterJumps(list, name, nVersions, context) {\n  var jump = 1\n  switch (name) {\n    case 'android':\n      if (context.mobileToDesktop) return list\n      var released = browserslist.data.chrome.released\n      jump = released.length - released.indexOf(ANDROID_EVERGREEN_FIRST)\n      break\n    case 'op_mob':\n      var latest = browserslist.data.op_mob.released.slice(-1)[0]\n      jump = getMajor(latest) - OP_MOB_BLINK_FIRST + 1\n      break\n    default:\n      return list\n  }\n  if (nVersions <= jump) {\n    return list.slice(-1)\n  }\n  return list.slice(jump - 1 - nVersions)\n}\n\nfunction isSupported(flags, withPartial) {\n  return (\n    typeof flags === 'string' &&\n    (flags.indexOf('y') >= 0 || (withPartial && flags.indexOf('a') >= 0))\n  )\n}\n\nfunction resolve(queries, context) {\n  return parse(QUERIES, queries).reduce(function (result, node, index) {\n    if (node.not && index === 0) {\n      throw new BrowserslistError(\n        'Write any browsers query (for instance, `defaults`) ' +\n          'before `' +\n          node.query +\n          '`'\n      )\n    }\n    var type = QUERIES[node.type]\n    var array = type.select.call(browserslist, context, node).map(function (j) {\n      var parts = j.split(' ')\n      if (parts[1] === '0') {\n        return parts[0] + ' ' + byName(parts[0], context).versions[0]\n      } else {\n        return j\n      }\n    })\n\n    if (node.compose === 'and') {\n      if (node.not) {\n        return result.filter(function (j) {\n          return array.indexOf(j) === -1\n        })\n      } else {\n        return result.filter(function (j) {\n          return array.indexOf(j) !== -1\n        })\n      }\n    } else {\n      if (node.not) {\n        var filter = {}\n        array.forEach(function (j) {\n          filter[j] = true\n        })\n        return result.filter(function (j) {\n          return !filter[j]\n        })\n      }\n      return result.concat(array)\n    }\n  }, [])\n}\n\nfunction prepareOpts(opts) {\n  if (typeof opts === 'undefined') opts = {}\n\n  if (typeof opts.path === 'undefined') {\n    opts.path = path.resolve ? path.resolve('.') : '.'\n  }\n\n  return opts\n}\n\nfunction prepareQueries(queries, opts) {\n  if (typeof queries === 'undefined' || queries === null) {\n    var config = browserslist.loadConfig(opts)\n    if (config) {\n      queries = config\n    } else {\n      queries = browserslist.defaults\n    }\n  }\n\n  return queries\n}\n\nfunction checkQueries(queries) {\n  if (!(typeof queries === 'string' || Array.isArray(queries))) {\n    throw new BrowserslistError(\n      'Browser queries must be an array or string. Got ' + typeof queries + '.'\n    )\n  }\n}\n\nvar cache = {}\n\nfunction browserslist(queries, opts) {\n  opts = prepareOpts(opts)\n  queries = prepareQueries(queries, opts)\n  checkQueries(queries)\n\n  var context = {\n    ignoreUnknownVersions: opts.ignoreUnknownVersions,\n    dangerousExtend: opts.dangerousExtend,\n    mobileToDesktop: opts.mobileToDesktop,\n    path: opts.path,\n    env: opts.env\n  }\n\n  env.oldDataWarning(browserslist.data)\n  var stats = env.getStat(opts, browserslist.data)\n  if (stats) {\n    context.customUsage = {}\n    for (var browser in stats) {\n      fillUsage(context.customUsage, browser, stats[browser])\n    }\n  }\n\n  var cacheKey = JSON.stringify([queries, context])\n  if (cache[cacheKey]) return cache[cacheKey]\n\n  var result = uniq(resolve(queries, context)).sort(function (name1, name2) {\n    name1 = name1.split(' ')\n    name2 = name2.split(' ')\n    if (name1[0] === name2[0]) {\n      // assumptions on caniuse data\n      // 1) version ranges never overlaps\n      // 2) if version is not a range, it never contains `-`\n      var version1 = name1[1].split('-')[0]\n      var version2 = name2[1].split('-')[0]\n      return compareSemver(version2.split('.'), version1.split('.'))\n    } else {\n      return compare(name1[0], name2[0])\n    }\n  })\n  if (!env.env.BROWSERSLIST_DISABLE_CACHE) {\n    cache[cacheKey] = result\n  }\n  return result\n}\n\nbrowserslist.parse = function (queries, opts) {\n  opts = prepareOpts(opts)\n  queries = prepareQueries(queries, opts)\n  checkQueries(queries)\n  return parse(QUERIES, queries)\n}\n\n// Will be filled by Can I Use data below\nbrowserslist.cache = {}\nbrowserslist.data = {}\nbrowserslist.usage = {\n  global: {},\n  custom: null\n}\n\n// Default browsers query\nbrowserslist.defaults = ['> 0.5%', 'last 2 versions', 'Firefox ESR', 'not dead']\n\n// Browser names aliases\nbrowserslist.aliases = {\n  fx: 'firefox',\n  ff: 'firefox',\n  ios: 'ios_saf',\n  explorer: 'ie',\n  blackberry: 'bb',\n  explorermobile: 'ie_mob',\n  operamini: 'op_mini',\n  operamobile: 'op_mob',\n  chromeandroid: 'and_chr',\n  firefoxandroid: 'and_ff',\n  ucandroid: 'and_uc',\n  qqandroid: 'and_qq'\n}\n\n// Can I Use only provides a few versions for some browsers (e.g. and_chr).\n// Fallback to a similar browser for unknown versions\n// Note op_mob is not included as its chromium versions are not in sync with Opera desktop\nbrowserslist.desktopNames = {\n  and_chr: 'chrome',\n  and_ff: 'firefox',\n  ie_mob: 'ie',\n  android: 'chrome' // has extra processing logic\n}\n\n// Aliases to work with joined versions like `ios_saf 7.0-7.1`\nbrowserslist.versionAliases = {}\n\nbrowserslist.clearCaches = env.clearCaches\nbrowserslist.parseConfig = env.parseConfig\nbrowserslist.readConfig = env.readConfig\nbrowserslist.findConfig = env.findConfig\nbrowserslist.loadConfig = env.loadConfig\n\nbrowserslist.coverage = function (browsers, stats) {\n  var data\n  if (typeof stats === 'undefined') {\n    data = browserslist.usage.global\n  } else if (stats === 'my stats') {\n    var opts = {}\n    opts.path = path.resolve ? path.resolve('.') : '.'\n    var customStats = env.getStat(opts)\n    if (!customStats) {\n      throw new BrowserslistError('Custom usage statistics was not provided')\n    }\n    data = {}\n    for (var browser in customStats) {\n      fillUsage(data, browser, customStats[browser])\n    }\n  } else if (typeof stats === 'string') {\n    if (stats.length > 2) {\n      stats = stats.toLowerCase()\n    } else {\n      stats = stats.toUpperCase()\n    }\n    env.loadCountry(browserslist.usage, stats, browserslist.data)\n    data = browserslist.usage[stats]\n  } else {\n    if ('dataByBrowser' in stats) {\n      stats = stats.dataByBrowser\n    }\n    data = {}\n    for (var name in stats) {\n      for (var version in stats[name]) {\n        data[name + ' ' + version] = stats[name][version]\n      }\n    }\n  }\n\n  return browsers.reduce(function (all, i) {\n    var usage = data[i]\n    if (usage === undefined) {\n      usage = data[i.replace(/ \\S+$/, ' 0')]\n    }\n    return all + (usage || 0)\n  }, 0)\n}\n\nfunction nodeQuery(context, node) {\n  var matched = browserslist.nodeVersions.filter(function (i) {\n    return isVersionsMatch(i, node.version)\n  })\n  if (matched.length === 0) {\n    if (context.ignoreUnknownVersions) {\n      return []\n    } else {\n      throw new BrowserslistError(\n        'Unknown version ' + node.version + ' of Node.js'\n      )\n    }\n  }\n  return ['node ' + matched[matched.length - 1]]\n}\n\nfunction sinceQuery(context, node) {\n  var year = parseInt(node.year)\n  var month = parseInt(node.month || '01') - 1\n  var day = parseInt(node.day || '01')\n  return filterByYear(Date.UTC(year, month, day, 0, 0, 0), context)\n}\n\nfunction coverQuery(context, node) {\n  var coverage = parseFloat(node.coverage)\n  var usage = browserslist.usage.global\n  if (node.place) {\n    if (node.place.match(/^my\\s+stats$/i)) {\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided')\n      }\n      usage = context.customUsage\n    } else {\n      var place\n      if (node.place.length === 2) {\n        place = node.place.toUpperCase()\n      } else {\n        place = node.place.toLowerCase()\n      }\n      env.loadCountry(browserslist.usage, place, browserslist.data)\n      usage = browserslist.usage[place]\n    }\n  }\n  var versions = Object.keys(usage).sort(function (a, b) {\n    return usage[b] - usage[a]\n  })\n  var coveraged = 0\n  var result = []\n  var version\n  for (var i = 0; i < versions.length; i++) {\n    version = versions[i]\n    if (usage[version] === 0) break\n    coveraged += usage[version]\n    result.push(version)\n    if (coveraged >= coverage) break\n  }\n  return result\n}\n\nvar QUERIES = {\n  last_major_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context)\n        if (!data) return selected\n        var list = getMajorVersions(data.released, node.versions)\n        list = list.map(nameMapper(data.name))\n        list = filterJumps(list, data.name, node.versions, context)\n        return selected.concat(list)\n      }, [])\n    }\n  },\n  last_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+versions?$/i,\n    select: function (context, node) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context)\n        if (!data) return selected\n        var list = data.released.slice(-node.versions)\n        list = list.map(nameMapper(data.name))\n        list = filterJumps(list, data.name, node.versions, context)\n        return selected.concat(list)\n      }, [])\n    }\n  },\n  last_electron_major_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+electron\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      var validVersions = getMajorVersions(Object.keys(e2c), node.versions)\n      return validVersions.map(function (i) {\n        return 'chrome ' + e2c[i]\n      })\n    }\n  },\n  last_node_major_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+node\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      return getMajorVersions(browserslist.nodeVersions, node.versions).map(\n        function (version) {\n          return 'node ' + version\n        }\n      )\n    }\n  },\n  last_browser_major_versions: {\n    matches: ['versions', 'browser'],\n    regexp: /^last\\s+(\\d+)\\s+(\\w+)\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      var validVersions = getMajorVersions(data.released, node.versions)\n      var list = validVersions.map(nameMapper(data.name))\n      list = filterJumps(list, data.name, node.versions, context)\n      return list\n    }\n  },\n  last_electron_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+electron\\s+versions?$/i,\n    select: function (context, node) {\n      return Object.keys(e2c)\n        .slice(-node.versions)\n        .map(function (i) {\n          return 'chrome ' + e2c[i]\n        })\n    }\n  },\n  last_node_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+node\\s+versions?$/i,\n    select: function (context, node) {\n      return browserslist.nodeVersions\n        .slice(-node.versions)\n        .map(function (version) {\n          return 'node ' + version\n        })\n    }\n  },\n  last_browser_versions: {\n    matches: ['versions', 'browser'],\n    regexp: /^last\\s+(\\d+)\\s+(\\w+)\\s+versions?$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      var list = data.released.slice(-node.versions).map(nameMapper(data.name))\n      list = filterJumps(list, data.name, node.versions, context)\n      return list\n    }\n  },\n  unreleased_versions: {\n    matches: [],\n    regexp: /^unreleased\\s+versions$/i,\n    select: function (context) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context)\n        if (!data) return selected\n        var list = data.versions.filter(function (v) {\n          return data.released.indexOf(v) === -1\n        })\n        list = list.map(nameMapper(data.name))\n        return selected.concat(list)\n      }, [])\n    }\n  },\n  unreleased_electron_versions: {\n    matches: [],\n    regexp: /^unreleased\\s+electron\\s+versions?$/i,\n    select: function () {\n      return []\n    }\n  },\n  unreleased_browser_versions: {\n    matches: ['browser'],\n    regexp: /^unreleased\\s+(\\w+)\\s+versions?$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      return data.versions\n        .filter(function (v) {\n          return data.released.indexOf(v) === -1\n        })\n        .map(nameMapper(data.name))\n    }\n  },\n  last_years: {\n    matches: ['years'],\n    regexp: /^last\\s+(\\d*.?\\d+)\\s+years?$/i,\n    select: function (context, node) {\n      return filterByYear(Date.now() - YEAR * node.years, context)\n    }\n  },\n  since_y: {\n    matches: ['year'],\n    regexp: /^since (\\d+)$/i,\n    select: sinceQuery\n  },\n  since_y_m: {\n    matches: ['year', 'month'],\n    regexp: /^since (\\d+)-(\\d+)$/i,\n    select: sinceQuery\n  },\n  since_y_m_d: {\n    matches: ['year', 'month', 'day'],\n    regexp: /^since (\\d+)-(\\d+)-(\\d+)$/i,\n    select: sinceQuery\n  },\n  popularity: {\n    matches: ['sign', 'popularity'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      var usage = browserslist.usage.global\n      return Object.keys(usage).reduce(function (result, version) {\n        if (node.sign === '>') {\n          if (usage[version] > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (usage[version] < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (usage[version] <= popularity) {\n            result.push(version)\n          }\n        } else if (usage[version] >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  popularity_in_my_stats: {\n    matches: ['sign', 'popularity'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+my\\s+stats$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided')\n      }\n      var usage = context.customUsage\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version]\n        if (percentage == null) {\n          return result\n        }\n\n        if (node.sign === '>') {\n          if (percentage > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (percentage < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version)\n          }\n        } else if (percentage >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  popularity_in_config_stats: {\n    matches: ['sign', 'popularity', 'config'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+(\\S+)\\s+stats$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      var stats = env.loadStat(context, node.config, browserslist.data)\n      if (stats) {\n        context.customUsage = {}\n        for (var browser in stats) {\n          fillUsage(context.customUsage, browser, stats[browser])\n        }\n      }\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided')\n      }\n      var usage = context.customUsage\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version]\n        if (percentage == null) {\n          return result\n        }\n\n        if (node.sign === '>') {\n          if (percentage > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (percentage < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version)\n          }\n        } else if (percentage >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  popularity_in_place: {\n    matches: ['sign', 'popularity', 'place'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+((alt-)?\\w\\w)$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      var place = node.place\n      if (place.length === 2) {\n        place = place.toUpperCase()\n      } else {\n        place = place.toLowerCase()\n      }\n      env.loadCountry(browserslist.usage, place, browserslist.data)\n      var usage = browserslist.usage[place]\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version]\n        if (percentage == null) {\n          return result\n        }\n\n        if (node.sign === '>') {\n          if (percentage > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (percentage < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version)\n          }\n        } else if (percentage >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  cover: {\n    matches: ['coverage'],\n    regexp: /^cover\\s+(\\d+|\\d+\\.\\d+|\\.\\d+)%$/i,\n    select: coverQuery\n  },\n  cover_in: {\n    matches: ['coverage', 'place'],\n    regexp: /^cover\\s+(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+(my\\s+stats|(alt-)?\\w\\w)$/i,\n    select: coverQuery\n  },\n  supports: {\n    matches: ['supportType', 'feature'],\n    regexp: /^(?:(fully|partially)\\s+)?supports\\s+([\\w-]+)$/,\n    select: function (context, node) {\n      env.loadFeature(browserslist.cache, node.feature)\n      var withPartial = node.supportType !== 'fully'\n      var features = browserslist.cache[node.feature]\n      var result = []\n      for (var name in features) {\n        var data = byName(name, context)\n        // Only check desktop when latest released mobile has support\n        var checkDesktop =\n          context.mobileToDesktop &&\n          name in browserslist.desktopNames &&\n          isSupported(features[name][data.released.slice(-1)[0]], withPartial)\n        data.versions.forEach(function (version) {\n          var flags = features[name][version]\n          if (flags === undefined && checkDesktop) {\n            flags = features[browserslist.desktopNames[name]][version]\n          }\n          if (isSupported(flags, withPartial)) {\n            result.push(name + ' ' + version)\n          }\n        })\n      }\n      return result\n    }\n  },\n  electron_range: {\n    matches: ['from', 'to'],\n    regexp: /^electron\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      var fromToUse = normalizeElectron(node.from)\n      var toToUse = normalizeElectron(node.to)\n      var from = parseFloat(node.from)\n      var to = parseFloat(node.to)\n      if (!e2c[fromToUse]) {\n        throw new BrowserslistError('Unknown version ' + from + ' of electron')\n      }\n      if (!e2c[toToUse]) {\n        throw new BrowserslistError('Unknown version ' + to + ' of electron')\n      }\n      return Object.keys(e2c)\n        .filter(function (i) {\n          var parsed = parseFloat(i)\n          return parsed >= from && parsed <= to\n        })\n        .map(function (i) {\n          return 'chrome ' + e2c[i]\n        })\n    }\n  },\n  node_range: {\n    matches: ['from', 'to'],\n    regexp: /^node\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      return browserslist.nodeVersions\n        .filter(semverFilterLoose('>=', node.from))\n        .filter(semverFilterLoose('<=', node.to))\n        .map(function (v) {\n          return 'node ' + v\n        })\n    }\n  },\n  browser_range: {\n    matches: ['browser', 'from', 'to'],\n    regexp: /^(\\w+)\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      var from = parseFloat(normalizeVersion(data, node.from) || node.from)\n      var to = parseFloat(normalizeVersion(data, node.to) || node.to)\n      function filter(v) {\n        var parsed = parseFloat(v)\n        return parsed >= from && parsed <= to\n      }\n      return data.released.filter(filter).map(nameMapper(data.name))\n    }\n  },\n  electron_ray: {\n    matches: ['sign', 'version'],\n    regexp: /^electron\\s*(>=?|<=?)\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      var versionToUse = normalizeElectron(node.version)\n      return Object.keys(e2c)\n        .filter(generateFilter(node.sign, versionToUse))\n        .map(function (i) {\n          return 'chrome ' + e2c[i]\n        })\n    }\n  },\n  node_ray: {\n    matches: ['sign', 'version'],\n    regexp: /^node\\s*(>=?|<=?)\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      return browserslist.nodeVersions\n        .filter(generateSemverFilter(node.sign, node.version))\n        .map(function (v) {\n          return 'node ' + v\n        })\n    }\n  },\n  browser_ray: {\n    matches: ['browser', 'sign', 'version'],\n    regexp: /^(\\w+)\\s*(>=?|<=?)\\s*([\\d.]+)$/,\n    select: function (context, node) {\n      var version = node.version\n      var data = checkName(node.browser, context)\n      var alias = browserslist.versionAliases[data.name][version]\n      if (alias) version = alias\n      return data.released\n        .filter(generateFilter(node.sign, version))\n        .map(function (v) {\n          return data.name + ' ' + v\n        })\n    }\n  },\n  firefox_esr: {\n    matches: [],\n    regexp: /^(firefox|ff|fx)\\s+esr$/i,\n    select: function () {\n      return ['firefox 115']\n    }\n  },\n  opera_mini_all: {\n    matches: [],\n    regexp: /(operamini|op_mini)\\s+all/i,\n    select: function () {\n      return ['op_mini all']\n    }\n  },\n  electron_version: {\n    matches: ['version'],\n    regexp: /^electron\\s+([\\d.]+)$/i,\n    select: function (context, node) {\n      var versionToUse = normalizeElectron(node.version)\n      var chrome = e2c[versionToUse]\n      if (!chrome) {\n        throw new BrowserslistError(\n          'Unknown version ' + node.version + ' of electron'\n        )\n      }\n      return ['chrome ' + chrome]\n    }\n  },\n  node_major_version: {\n    matches: ['version'],\n    regexp: /^node\\s+(\\d+)$/i,\n    select: nodeQuery\n  },\n  node_minor_version: {\n    matches: ['version'],\n    regexp: /^node\\s+(\\d+\\.\\d+)$/i,\n    select: nodeQuery\n  },\n  node_patch_version: {\n    matches: ['version'],\n    regexp: /^node\\s+(\\d+\\.\\d+\\.\\d+)$/i,\n    select: nodeQuery\n  },\n  current_node: {\n    matches: [],\n    regexp: /^current\\s+node$/i,\n    select: function (context) {\n      return [env.currentNode(resolve, context)]\n    }\n  },\n  maintained_node: {\n    matches: [],\n    regexp: /^maintained\\s+node\\s+versions$/i,\n    select: function (context) {\n      var now = Date.now()\n      var queries = Object.keys(jsEOL)\n        .filter(function (key) {\n          return (\n            now < Date.parse(jsEOL[key].end) &&\n            now > Date.parse(jsEOL[key].start) &&\n            isEolReleased(key)\n          )\n        })\n        .map(function (key) {\n          return 'node ' + key.slice(1)\n        })\n      return resolve(queries, context)\n    }\n  },\n  phantomjs_1_9: {\n    matches: [],\n    regexp: /^phantomjs\\s+1.9$/i,\n    select: function () {\n      return ['safari 5']\n    }\n  },\n  phantomjs_2_1: {\n    matches: [],\n    regexp: /^phantomjs\\s+2.1$/i,\n    select: function () {\n      return ['safari 6']\n    }\n  },\n  browser_version: {\n    matches: ['browser', 'version'],\n    regexp: /^(\\w+)\\s+(tp|[\\d.]+)$/i,\n    select: function (context, node) {\n      var version = node.version\n      if (/^tp$/i.test(version)) version = 'TP'\n      var data = checkName(node.browser, context)\n      var alias = normalizeVersion(data, version)\n      if (alias) {\n        version = alias\n      } else {\n        if (version.indexOf('.') === -1) {\n          alias = version + '.0'\n        } else {\n          alias = version.replace(/\\.0$/, '')\n        }\n        alias = normalizeVersion(data, alias)\n        if (alias) {\n          version = alias\n        } else if (context.ignoreUnknownVersions) {\n          return []\n        } else {\n          throw new BrowserslistError(\n            'Unknown version ' + version + ' of ' + node.browser\n          )\n        }\n      }\n      return [data.name + ' ' + version]\n    }\n  },\n  browserslist_config: {\n    matches: [],\n    regexp: /^browserslist config$/i,\n    select: function (context) {\n      return browserslist(undefined, context)\n    }\n  },\n  extends: {\n    matches: ['config'],\n    regexp: /^extends (.+)$/i,\n    select: function (context, node) {\n      return resolve(env.loadQueries(context, node.config), context)\n    }\n  },\n  defaults: {\n    matches: [],\n    regexp: /^defaults$/i,\n    select: function (context) {\n      return resolve(browserslist.defaults, context)\n    }\n  },\n  dead: {\n    matches: [],\n    regexp: /^dead$/i,\n    select: function (context) {\n      var dead = [\n        'Baidu >= 0',\n        'ie <= 11',\n        'ie_mob <= 11',\n        'bb <= 10',\n        'op_mob <= 12.1',\n        'samsung 4'\n      ]\n      return resolve(dead, context)\n    }\n  },\n  unknown: {\n    matches: [],\n    regexp: /^(\\w+)$/i,\n    select: function (context, node) {\n      if (byName(node.query, context)) {\n        throw new BrowserslistError(\n          'Specify versions in Browserslist query for browser ' + node.query\n        )\n      } else {\n        throw unknownQuery(node.query)\n      }\n    }\n  }\n}\n\n// Get and convert Can I Use data\n\n;(function () {\n  for (var name in agents) {\n    var browser = agents[name]\n    browserslist.data[name] = {\n      name: name,\n      versions: normalize(agents[name].versions),\n      released: normalize(agents[name].versions.slice(0, -3)),\n      releaseDate: agents[name].release_date\n    }\n    fillUsage(browserslist.usage.global, name, browser.usage_global)\n\n    browserslist.versionAliases[name] = {}\n    for (var i = 0; i < browser.versions.length; i++) {\n      var full = browser.versions[i]\n      if (!full) continue\n\n      if (full.indexOf('-') !== -1) {\n        var interval = full.split('-')\n        for (var j = 0; j < interval.length; j++) {\n          browserslist.versionAliases[name][interval[j]] = full\n        }\n      }\n    }\n  }\n\n  browserslist.nodeVersions = jsReleases.map(function (release) {\n    return release.version\n  })\n})()\n\nmodule.exports = browserslist\n","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to translate `/./s` to `/[\\0-\\uFFFF]/`.\n */\n\nmodule.exports = {\n\n  // Whether `u` flag present. In which case we transform to\n  // \\u{10FFFF} instead of \\uFFFF.\n  _hasUFlag: false,\n\n  // Only run this plugin if we have `s` flag.\n  shouldRun: function shouldRun(ast) {\n    var shouldRun = ast.flags.includes('s');\n\n    if (!shouldRun) {\n      return false;\n    }\n\n    // Strip the `s` flag.\n    ast.flags = ast.flags.replace('s', '');\n\n    // Whether we have also `u`.\n    this._hasUFlag = ast.flags.includes('u');\n\n    return true;\n  },\n  Char: function Char(path) {\n    var node = path.node;\n\n\n    if (node.kind !== 'meta' || node.value !== '.') {\n      return;\n    }\n\n    var toValue = '\\\\uFFFF';\n    var toSymbol = '\\uFFFF';\n\n    if (this._hasUFlag) {\n      toValue = '\\\\u{10FFFF}';\n      toSymbol = '\\uDBFF\\uDFFF';\n    }\n\n    path.replace({\n      type: 'CharacterClass',\n      expressions: [{\n        type: 'ClassRange',\n        from: {\n          type: 'Char',\n          value: '\\\\0',\n          kind: 'decimal',\n          symbol: '\\0'\n        },\n        to: {\n          type: 'Char',\n          value: toValue,\n          kind: 'unicode',\n          symbol: toSymbol\n        }\n      }]\n    });\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to translate `/(?<name>a)\\k<name>/` to `/(a)\\1/`.\n */\n\nmodule.exports = {\n  // To track the names of the groups, and return them\n  // in the transform result state.\n  //\n  // A map from name to number: {foo: 2, bar: 4}\n  _groupNames: {},\n\n  /**\n   * Initialises the trasnform.\n   */\n  init: function init() {\n    this._groupNames = {};\n  },\n\n\n  /**\n   * Returns extra state, which eventually is returned to\n   */\n  getExtra: function getExtra() {\n    return this._groupNames;\n  },\n  Group: function Group(path) {\n    var node = path.node;\n\n\n    if (!node.name) {\n      return;\n    }\n\n    // Record group name.\n    this._groupNames[node.name] = node.number;\n\n    delete node.name;\n    delete node.nameRaw;\n  },\n  Backreference: function Backreference(path) {\n    var node = path.node;\n\n\n    if (node.kind !== 'name') {\n      return;\n    }\n\n    node.kind = 'number';\n    node.reference = node.number;\n    delete node.referenceRaw;\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to remove `x` flag `/foo/x` to `/foo/`.\n *\n * Note: other features of `x` flags (whitespace, comments) are\n * already removed at parsing stage.\n */\n\nmodule.exports = {\n  RegExp: function RegExp(_ref) {\n    var node = _ref.node;\n\n    if (node.flags.includes('x')) {\n      node.flags = node.flags.replace('x', '');\n    }\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nmodule.exports = {\n  // \"dotAll\" `s` flag\n  dotAll: require('./compat-dotall-s-transform'),\n\n  // Named capturing groups.\n  namedCapturingGroups: require('./compat-named-capturing-groups-transform'),\n\n  // `x` flag\n  xFlag: require('./compat-x-flag-transform')\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * Helper `gen` function calls node type handler.\n */\n\nfunction gen(node) {\n  return node ? generator[node.type](node) : '';\n}\n\n/**\n * AST handler.\n */\nvar generator = {\n  RegExp: function RegExp(node) {\n    return '/' + gen(node.body) + '/' + node.flags;\n  },\n  Alternative: function Alternative(node) {\n    return (node.expressions || []).map(gen).join('');\n  },\n  Disjunction: function Disjunction(node) {\n    return gen(node.left) + '|' + gen(node.right);\n  },\n  Group: function Group(node) {\n    var expression = gen(node.expression);\n\n    if (node.capturing) {\n      // A named group.\n      if (node.name) {\n        return '(?<' + (node.nameRaw || node.name) + '>' + expression + ')';\n      }\n\n      return '(' + expression + ')';\n    }\n\n    return '(?:' + expression + ')';\n  },\n  Backreference: function Backreference(node) {\n    switch (node.kind) {\n      case 'number':\n        return '\\\\' + node.reference;\n      case 'name':\n        return '\\\\k<' + (node.referenceRaw || node.reference) + '>';\n      default:\n        throw new TypeError('Unknown Backreference kind: ' + node.kind);\n    }\n  },\n  Assertion: function Assertion(node) {\n    switch (node.kind) {\n      case '^':\n      case '$':\n      case '\\\\b':\n      case '\\\\B':\n        return node.kind;\n\n      case 'Lookahead':\n        {\n          var assertion = gen(node.assertion);\n\n          if (node.negative) {\n            return '(?!' + assertion + ')';\n          }\n\n          return '(?=' + assertion + ')';\n        }\n\n      case 'Lookbehind':\n        {\n          var _assertion = gen(node.assertion);\n\n          if (node.negative) {\n            return '(?<!' + _assertion + ')';\n          }\n\n          return '(?<=' + _assertion + ')';\n        }\n\n      default:\n        throw new TypeError('Unknown Assertion kind: ' + node.kind);\n    }\n  },\n  CharacterClass: function CharacterClass(node) {\n    var expressions = node.expressions.map(gen).join('');\n\n    if (node.negative) {\n      return '[^' + expressions + ']';\n    }\n\n    return '[' + expressions + ']';\n  },\n  ClassRange: function ClassRange(node) {\n    return gen(node.from) + '-' + gen(node.to);\n  },\n  Repetition: function Repetition(node) {\n    return '' + gen(node.expression) + gen(node.quantifier);\n  },\n  Quantifier: function Quantifier(node) {\n    var quantifier = void 0;\n    var greedy = node.greedy ? '' : '?';\n\n    switch (node.kind) {\n      case '+':\n      case '?':\n      case '*':\n        quantifier = node.kind;\n        break;\n      case 'Range':\n        // Exact: {1}\n        if (node.from === node.to) {\n          quantifier = '{' + node.from + '}';\n        }\n        // Open: {1,}\n        else if (!node.to) {\n            quantifier = '{' + node.from + ',}';\n          }\n          // Closed: {1,3}\n          else {\n              quantifier = '{' + node.from + ',' + node.to + '}';\n            }\n        break;\n      default:\n        throw new TypeError('Unknown Quantifier kind: ' + node.kind);\n    }\n\n    return '' + quantifier + greedy;\n  },\n  Char: function Char(node) {\n    var value = node.value;\n\n    switch (node.kind) {\n      case 'simple':\n        {\n          if (node.escaped) {\n            return '\\\\' + value;\n          }\n          return value;\n        }\n\n      case 'hex':\n      case 'unicode':\n      case 'oct':\n      case 'decimal':\n      case 'control':\n      case 'meta':\n        return value;\n\n      default:\n        throw new TypeError('Unknown Char kind: ' + node.kind);\n    }\n  },\n  UnicodeProperty: function UnicodeProperty(node) {\n    var escapeChar = node.negative ? 'P' : 'p';\n    var namePart = void 0;\n\n    if (!node.shorthand && !node.binary) {\n      namePart = node.name + '=';\n    } else {\n      namePart = '';\n    }\n\n    return '\\\\' + escapeChar + '{' + namePart + node.value + '}';\n  }\n};\n\nmodule.exports = {\n  /**\n   * Generates a regexp string from an AST.\n   *\n   * @param Object ast - an AST node\n   */\n  generate: gen\n};","'use strict';\n\n/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\nvar NON_BINARY_PROP_NAMES_TO_ALIASES = {\n  General_Category: 'gc',\n  Script: 'sc',\n  Script_Extensions: 'scx'\n};\n\nvar NON_BINARY_ALIASES_TO_PROP_NAMES = inverseMap(NON_BINARY_PROP_NAMES_TO_ALIASES);\n\nvar BINARY_PROP_NAMES_TO_ALIASES = {\n  ASCII: 'ASCII',\n  ASCII_Hex_Digit: 'AHex',\n  Alphabetic: 'Alpha',\n  Any: 'Any',\n  Assigned: 'Assigned',\n  Bidi_Control: 'Bidi_C',\n  Bidi_Mirrored: 'Bidi_M',\n  Case_Ignorable: 'CI',\n  Cased: 'Cased',\n  Changes_When_Casefolded: 'CWCF',\n  Changes_When_Casemapped: 'CWCM',\n  Changes_When_Lowercased: 'CWL',\n  Changes_When_NFKC_Casefolded: 'CWKCF',\n  Changes_When_Titlecased: 'CWT',\n  Changes_When_Uppercased: 'CWU',\n  Dash: 'Dash',\n  Default_Ignorable_Code_Point: 'DI',\n  Deprecated: 'Dep',\n  Diacritic: 'Dia',\n  Emoji: 'Emoji',\n  Emoji_Component: 'Emoji_Component',\n  Emoji_Modifier: 'Emoji_Modifier',\n  Emoji_Modifier_Base: 'Emoji_Modifier_Base',\n  Emoji_Presentation: 'Emoji_Presentation',\n  Extended_Pictographic: 'Extended_Pictographic',\n  Extender: 'Ext',\n  Grapheme_Base: 'Gr_Base',\n  Grapheme_Extend: 'Gr_Ext',\n  Hex_Digit: 'Hex',\n  IDS_Binary_Operator: 'IDSB',\n  IDS_Trinary_Operator: 'IDST',\n  ID_Continue: 'IDC',\n  ID_Start: 'IDS',\n  Ideographic: 'Ideo',\n  Join_Control: 'Join_C',\n  Logical_Order_Exception: 'LOE',\n  Lowercase: 'Lower',\n  Math: 'Math',\n  Noncharacter_Code_Point: 'NChar',\n  Pattern_Syntax: 'Pat_Syn',\n  Pattern_White_Space: 'Pat_WS',\n  Quotation_Mark: 'QMark',\n  Radical: 'Radical',\n  Regional_Indicator: 'RI',\n  Sentence_Terminal: 'STerm',\n  Soft_Dotted: 'SD',\n  Terminal_Punctuation: 'Term',\n  Unified_Ideograph: 'UIdeo',\n  Uppercase: 'Upper',\n  Variation_Selector: 'VS',\n  White_Space: 'space',\n  XID_Continue: 'XIDC',\n  XID_Start: 'XIDS'\n};\n\nvar BINARY_ALIASES_TO_PROP_NAMES = inverseMap(BINARY_PROP_NAMES_TO_ALIASES);\n\nvar GENERAL_CATEGORY_VALUE_TO_ALIASES = {\n  Cased_Letter: 'LC',\n  Close_Punctuation: 'Pe',\n  Connector_Punctuation: 'Pc',\n  Control: ['Cc', 'cntrl'],\n  Currency_Symbol: 'Sc',\n  Dash_Punctuation: 'Pd',\n  Decimal_Number: ['Nd', 'digit'],\n  Enclosing_Mark: 'Me',\n  Final_Punctuation: 'Pf',\n  Format: 'Cf',\n  Initial_Punctuation: 'Pi',\n  Letter: 'L',\n  Letter_Number: 'Nl',\n  Line_Separator: 'Zl',\n  Lowercase_Letter: 'Ll',\n  Mark: ['M', 'Combining_Mark'],\n  Math_Symbol: 'Sm',\n  Modifier_Letter: 'Lm',\n  Modifier_Symbol: 'Sk',\n  Nonspacing_Mark: 'Mn',\n  Number: 'N',\n  Open_Punctuation: 'Ps',\n  Other: 'C',\n  Other_Letter: 'Lo',\n  Other_Number: 'No',\n  Other_Punctuation: 'Po',\n  Other_Symbol: 'So',\n  Paragraph_Separator: 'Zp',\n  Private_Use: 'Co',\n  Punctuation: ['P', 'punct'],\n  Separator: 'Z',\n  Space_Separator: 'Zs',\n  Spacing_Mark: 'Mc',\n  Surrogate: 'Cs',\n  Symbol: 'S',\n  Titlecase_Letter: 'Lt',\n  Unassigned: 'Cn',\n  Uppercase_Letter: 'Lu'\n};\n\nvar GENERAL_CATEGORY_VALUE_ALIASES_TO_VALUES = inverseMap(GENERAL_CATEGORY_VALUE_TO_ALIASES);\n\nvar SCRIPT_VALUE_TO_ALIASES = {\n  Adlam: 'Adlm',\n  Ahom: 'Ahom',\n  Anatolian_Hieroglyphs: 'Hluw',\n  Arabic: 'Arab',\n  Armenian: 'Armn',\n  Avestan: 'Avst',\n  Balinese: 'Bali',\n  Bamum: 'Bamu',\n  Bassa_Vah: 'Bass',\n  Batak: 'Batk',\n  Bengali: 'Beng',\n  Bhaiksuki: 'Bhks',\n  Bopomofo: 'Bopo',\n  Brahmi: 'Brah',\n  Braille: 'Brai',\n  Buginese: 'Bugi',\n  Buhid: 'Buhd',\n  Canadian_Aboriginal: 'Cans',\n  Carian: 'Cari',\n  Caucasian_Albanian: 'Aghb',\n  Chakma: 'Cakm',\n  Cham: 'Cham',\n  Cherokee: 'Cher',\n  Common: 'Zyyy',\n  Coptic: ['Copt', 'Qaac'],\n  Cuneiform: 'Xsux',\n  Cypriot: 'Cprt',\n  Cyrillic: 'Cyrl',\n  Deseret: 'Dsrt',\n  Devanagari: 'Deva',\n  Dogra: 'Dogr',\n  Duployan: 'Dupl',\n  Egyptian_Hieroglyphs: 'Egyp',\n  Elbasan: 'Elba',\n  Ethiopic: 'Ethi',\n  Georgian: 'Geor',\n  Glagolitic: 'Glag',\n  Gothic: 'Goth',\n  Grantha: 'Gran',\n  Greek: 'Grek',\n  Gujarati: 'Gujr',\n  Gunjala_Gondi: 'Gong',\n  Gurmukhi: 'Guru',\n  Han: 'Hani',\n  Hangul: 'Hang',\n  Hanifi_Rohingya: 'Rohg',\n  Hanunoo: 'Hano',\n  Hatran: 'Hatr',\n  Hebrew: 'Hebr',\n  Hiragana: 'Hira',\n  Imperial_Aramaic: 'Armi',\n  Inherited: ['Zinh', 'Qaai'],\n  Inscriptional_Pahlavi: 'Phli',\n  Inscriptional_Parthian: 'Prti',\n  Javanese: 'Java',\n  Kaithi: 'Kthi',\n  Kannada: 'Knda',\n  Katakana: 'Kana',\n  Kayah_Li: 'Kali',\n  Kharoshthi: 'Khar',\n  Khmer: 'Khmr',\n  Khojki: 'Khoj',\n  Khudawadi: 'Sind',\n  Lao: 'Laoo',\n  Latin: 'Latn',\n  Lepcha: 'Lepc',\n  Limbu: 'Limb',\n  Linear_A: 'Lina',\n  Linear_B: 'Linb',\n  Lisu: 'Lisu',\n  Lycian: 'Lyci',\n  Lydian: 'Lydi',\n  Mahajani: 'Mahj',\n  Makasar: 'Maka',\n  Malayalam: 'Mlym',\n  Mandaic: 'Mand',\n  Manichaean: 'Mani',\n  Marchen: 'Marc',\n  Medefaidrin: 'Medf',\n  Masaram_Gondi: 'Gonm',\n  Meetei_Mayek: 'Mtei',\n  Mende_Kikakui: 'Mend',\n  Meroitic_Cursive: 'Merc',\n  Meroitic_Hieroglyphs: 'Mero',\n  Miao: 'Plrd',\n  Modi: 'Modi',\n  Mongolian: 'Mong',\n  Mro: 'Mroo',\n  Multani: 'Mult',\n  Myanmar: 'Mymr',\n  Nabataean: 'Nbat',\n  New_Tai_Lue: 'Talu',\n  Newa: 'Newa',\n  Nko: 'Nkoo',\n  Nushu: 'Nshu',\n  Ogham: 'Ogam',\n  Ol_Chiki: 'Olck',\n  Old_Hungarian: 'Hung',\n  Old_Italic: 'Ital',\n  Old_North_Arabian: 'Narb',\n  Old_Permic: 'Perm',\n  Old_Persian: 'Xpeo',\n  Old_Sogdian: 'Sogo',\n  Old_South_Arabian: 'Sarb',\n  Old_Turkic: 'Orkh',\n  Oriya: 'Orya',\n  Osage: 'Osge',\n  Osmanya: 'Osma',\n  Pahawh_Hmong: 'Hmng',\n  Palmyrene: 'Palm',\n  Pau_Cin_Hau: 'Pauc',\n  Phags_Pa: 'Phag',\n  Phoenician: 'Phnx',\n  Psalter_Pahlavi: 'Phlp',\n  Rejang: 'Rjng',\n  Runic: 'Runr',\n  Samaritan: 'Samr',\n  Saurashtra: 'Saur',\n  Sharada: 'Shrd',\n  Shavian: 'Shaw',\n  Siddham: 'Sidd',\n  SignWriting: 'Sgnw',\n  Sinhala: 'Sinh',\n  Sogdian: 'Sogd',\n  Sora_Sompeng: 'Sora',\n  Soyombo: 'Soyo',\n  Sundanese: 'Sund',\n  Syloti_Nagri: 'Sylo',\n  Syriac: 'Syrc',\n  Tagalog: 'Tglg',\n  Tagbanwa: 'Tagb',\n  Tai_Le: 'Tale',\n  Tai_Tham: 'Lana',\n  Tai_Viet: 'Tavt',\n  Takri: 'Takr',\n  Tamil: 'Taml',\n  Tangut: 'Tang',\n  Telugu: 'Telu',\n  Thaana: 'Thaa',\n  Thai: 'Thai',\n  Tibetan: 'Tibt',\n  Tifinagh: 'Tfng',\n  Tirhuta: 'Tirh',\n  Ugaritic: 'Ugar',\n  Vai: 'Vaii',\n  Warang_Citi: 'Wara',\n  Yi: 'Yiii',\n  Zanabazar_Square: 'Zanb'\n};\n\nvar SCRIPT_VALUE_ALIASES_TO_VALUE = inverseMap(SCRIPT_VALUE_TO_ALIASES);\n\nfunction inverseMap(data) {\n  var inverse = {};\n\n  for (var name in data) {\n    if (!data.hasOwnProperty(name)) {\n      continue;\n    }\n    var value = data[name];\n    if (Array.isArray(value)) {\n      for (var i = 0; i < value.length; i++) {\n        inverse[value[i]] = name;\n      }\n    } else {\n      inverse[value] = name;\n    }\n  }\n\n  return inverse;\n}\n\nfunction isValidName(name) {\n  return NON_BINARY_PROP_NAMES_TO_ALIASES.hasOwnProperty(name) || NON_BINARY_ALIASES_TO_PROP_NAMES.hasOwnProperty(name) || BINARY_PROP_NAMES_TO_ALIASES.hasOwnProperty(name) || BINARY_ALIASES_TO_PROP_NAMES.hasOwnProperty(name);\n}\n\nfunction isValidValue(name, value) {\n  if (isGeneralCategoryName(name)) {\n    return isGeneralCategoryValue(value);\n  }\n\n  if (isScriptCategoryName(name)) {\n    return isScriptCategoryValue(value);\n  }\n\n  return false;\n}\n\nfunction isAlias(name) {\n  return NON_BINARY_ALIASES_TO_PROP_NAMES.hasOwnProperty(name) || BINARY_ALIASES_TO_PROP_NAMES.hasOwnProperty(name);\n}\n\nfunction isGeneralCategoryName(name) {\n  return name === 'General_Category' || name == 'gc';\n}\n\nfunction isScriptCategoryName(name) {\n  return name === 'Script' || name === 'Script_Extensions' || name === 'sc' || name === 'scx';\n}\n\nfunction isGeneralCategoryValue(value) {\n  return GENERAL_CATEGORY_VALUE_TO_ALIASES.hasOwnProperty(value) || GENERAL_CATEGORY_VALUE_ALIASES_TO_VALUES.hasOwnProperty(value);\n}\n\nfunction isScriptCategoryValue(value) {\n  return SCRIPT_VALUE_TO_ALIASES.hasOwnProperty(value) || SCRIPT_VALUE_ALIASES_TO_VALUE.hasOwnProperty(value);\n}\n\nfunction isBinaryPropertyName(name) {\n  return BINARY_PROP_NAMES_TO_ALIASES.hasOwnProperty(name) || BINARY_ALIASES_TO_PROP_NAMES.hasOwnProperty(name);\n}\n\nfunction getCanonicalName(name) {\n  if (NON_BINARY_ALIASES_TO_PROP_NAMES.hasOwnProperty(name)) {\n    return NON_BINARY_ALIASES_TO_PROP_NAMES[name];\n  }\n\n  if (BINARY_ALIASES_TO_PROP_NAMES.hasOwnProperty(name)) {\n    return BINARY_ALIASES_TO_PROP_NAMES[name];\n  }\n\n  return null;\n}\n\nfunction getCanonicalValue(value) {\n  if (GENERAL_CATEGORY_VALUE_ALIASES_TO_VALUES.hasOwnProperty(value)) {\n    return GENERAL_CATEGORY_VALUE_ALIASES_TO_VALUES[value];\n  }\n\n  if (SCRIPT_VALUE_ALIASES_TO_VALUE.hasOwnProperty(value)) {\n    return SCRIPT_VALUE_ALIASES_TO_VALUE[value];\n  }\n\n  if (BINARY_ALIASES_TO_PROP_NAMES.hasOwnProperty(value)) {\n    return BINARY_ALIASES_TO_PROP_NAMES[value];\n  }\n\n  return null;\n}\n\nmodule.exports = {\n  isAlias: isAlias,\n  isValidName: isValidName,\n  isValidValue: isValidValue,\n  isGeneralCategoryValue: isGeneralCategoryValue,\n  isScriptCategoryValue: isScriptCategoryValue,\n  isBinaryPropertyName: isBinaryPropertyName,\n  getCanonicalName: getCanonicalName,\n  getCanonicalValue: getCanonicalValue,\n\n  NON_BINARY_PROP_NAMES_TO_ALIASES: NON_BINARY_PROP_NAMES_TO_ALIASES,\n  NON_BINARY_ALIASES_TO_PROP_NAMES: NON_BINARY_ALIASES_TO_PROP_NAMES,\n\n  BINARY_PROP_NAMES_TO_ALIASES: BINARY_PROP_NAMES_TO_ALIASES,\n  BINARY_ALIASES_TO_PROP_NAMES: BINARY_ALIASES_TO_PROP_NAMES,\n\n  GENERAL_CATEGORY_VALUE_TO_ALIASES: GENERAL_CATEGORY_VALUE_TO_ALIASES,\n  GENERAL_CATEGORY_VALUE_ALIASES_TO_VALUES: GENERAL_CATEGORY_VALUE_ALIASES_TO_VALUES,\n\n  SCRIPT_VALUE_TO_ALIASES: SCRIPT_VALUE_TO_ALIASES,\n  SCRIPT_VALUE_ALIASES_TO_VALUE: SCRIPT_VALUE_ALIASES_TO_VALUE\n};","/**\n * LR parser generated by the Syntax tool.\n *\n * https://www.npmjs.com/package/syntax-cli\n *\n *   npm install -g syntax-cli\n *\n *   syntax-cli --help\n *\n * To regenerate run:\n *\n *   syntax-cli \\\n *     --grammar ~/path-to-grammar-file \\\n *     --mode <parsing-mode> \\\n *     --output ~/path-to-output-parser-file.js\n */\n\n'use strict';\n\n/**\n * Matched token text.\n */\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar yytext = void 0;\n\n/**\n * Length of the matched token text.\n */\nvar yyleng = void 0;\n\n/**\n * Storage object.\n */\nvar yy = {};\n\n/**\n * Result of semantic action.\n */\nvar __ = void 0;\n\n/**\n * Result location object.\n */\nvar __loc = void 0;\n\nfunction yyloc(start, end) {\n  if (!yy.options.captureLocations) {\n    return null;\n  }\n\n  // Epsilon doesn't produce location.\n  if (!start || !end) {\n    return start || end;\n  }\n\n  return {\n    startOffset: start.startOffset,\n    endOffset: end.endOffset,\n    startLine: start.startLine,\n    endLine: end.endLine,\n    startColumn: start.startColumn,\n    endColumn: end.endColumn\n  };\n}\n\nvar EOF = '$';\n\n/**\n * List of productions (generated by Syntax tool).\n */\nvar productions = [[-1, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [0, 4, function (_1, _2, _3, _4, _1loc, _2loc, _3loc, _4loc) {\n  __loc = yyloc(_1loc, _4loc);\n  __ = Node({\n    type: 'RegExp',\n    body: _2,\n    flags: checkFlags(_4)\n  }, loc(_1loc, _4loc || _3loc));\n}], [1, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [1, 0, function () {\n  __loc = null;__ = '';\n}], [2, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [2, 2, function (_1, _2, _1loc, _2loc) {\n  __loc = yyloc(_1loc, _2loc);__ = _1 + _2;\n}], [3, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [4, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [4, 3, function (_1, _2, _3, _1loc, _2loc, _3loc) {\n  __loc = yyloc(_1loc, _3loc);\n  // Location for empty disjunction: /|/\n  var _loc = null;\n\n  if (_2loc) {\n    _loc = loc(_1loc || _2loc, _3loc || _2loc);\n  };\n\n  __ = Node({\n    type: 'Disjunction',\n    left: _1,\n    right: _3\n  }, _loc);\n}], [5, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);\n  if (_1.length === 0) {\n    __ = null;\n    return;\n  }\n\n  if (_1.length === 1) {\n    __ = Node(_1[0], __loc);\n  } else {\n    __ = Node({\n      type: 'Alternative',\n      expressions: _1\n    }, __loc);\n  }\n}], [6, 0, function () {\n  __loc = null;__ = [];\n}], [6, 2, function (_1, _2, _1loc, _2loc) {\n  __loc = yyloc(_1loc, _2loc);__ = _1.concat(_2);\n}], [7, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Node(Object.assign({ type: 'Assertion' }, _1), __loc);\n}], [7, 2, function (_1, _2, _1loc, _2loc) {\n  __loc = yyloc(_1loc, _2loc);\n  __ = _1;\n\n  if (_2) {\n    __ = Node({\n      type: 'Repetition',\n      expression: _1,\n      quantifier: _2\n    }, __loc);\n  }\n}], [8, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = { kind: '^' };\n}], [8, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = { kind: '$' };\n}], [8, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = { kind: '\\\\b' };\n}], [8, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = { kind: '\\\\B' };\n}], [8, 3, function (_1, _2, _3, _1loc, _2loc, _3loc) {\n  __loc = yyloc(_1loc, _3loc);\n  __ = {\n    kind: 'Lookahead',\n    assertion: _2\n  };\n}], [8, 3, function (_1, _2, _3, _1loc, _2loc, _3loc) {\n  __loc = yyloc(_1loc, _3loc);\n  __ = {\n    kind: 'Lookahead',\n    negative: true,\n    assertion: _2\n  };\n}], [8, 3, function (_1, _2, _3, _1loc, _2loc, _3loc) {\n  __loc = yyloc(_1loc, _3loc);\n  __ = {\n    kind: 'Lookbehind',\n    assertion: _2\n  };\n}], [8, 3, function (_1, _2, _3, _1loc, _2loc, _3loc) {\n  __loc = yyloc(_1loc, _3loc);\n  __ = {\n    kind: 'Lookbehind',\n    negative: true,\n    assertion: _2\n  };\n}], [9, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [9, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [9, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1, 'simple', __loc);\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1.slice(1), 'simple', __loc);__.escaped = true;\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1, 'unicode', __loc);__.isSurrogatePair = true;\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1, 'unicode', __loc);\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = UnicodeProperty(_1, __loc);\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1, 'control', __loc);\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1, 'hex', __loc);\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1, 'oct', __loc);\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = GroupRefOrDecChar(_1, __loc);\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1, 'meta', __loc);\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1, 'meta', __loc);\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = NamedGroupRefOrChars(_1, _1loc);\n}], [11, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [11, 0], [12, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [12, 2, function (_1, _2, _1loc, _2loc) {\n  __loc = yyloc(_1loc, _2loc);\n  _1.greedy = false;\n  __ = _1;\n}], [13, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);\n  __ = Node({\n    type: 'Quantifier',\n    kind: _1,\n    greedy: true\n  }, __loc);\n}], [13, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);\n  __ = Node({\n    type: 'Quantifier',\n    kind: _1,\n    greedy: true\n  }, __loc);\n}], [13, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);\n  __ = Node({\n    type: 'Quantifier',\n    kind: _1,\n    greedy: true\n  }, __loc);\n}], [13, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);\n  var range = getRange(_1);\n  __ = Node({\n    type: 'Quantifier',\n    kind: 'Range',\n    from: range[0],\n    to: range[0],\n    greedy: true\n  }, __loc);\n}], [13, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);\n  __ = Node({\n    type: 'Quantifier',\n    kind: 'Range',\n    from: getRange(_1)[0],\n    greedy: true\n  }, __loc);\n}], [13, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);\n  var range = getRange(_1);\n  __ = Node({\n    type: 'Quantifier',\n    kind: 'Range',\n    from: range[0],\n    to: range[1],\n    greedy: true\n  }, __loc);\n}], [14, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [14, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [15, 3, function (_1, _2, _3, _1loc, _2loc, _3loc) {\n  __loc = yyloc(_1loc, _3loc);\n  var nameRaw = String(_1);\n  var name = decodeUnicodeGroupName(nameRaw);\n  if (!yy.options.allowGroupNameDuplicates && namedGroups.hasOwnProperty(name)) {\n    throw new SyntaxError('Duplicate of the named group \"' + name + '\".');\n  }\n\n  namedGroups[name] = _1.groupNumber;\n\n  __ = Node({\n    type: 'Group',\n    capturing: true,\n    name: name,\n    nameRaw: nameRaw,\n    number: _1.groupNumber,\n    expression: _2\n  }, __loc);\n}], [15, 3, function (_1, _2, _3, _1loc, _2loc, _3loc) {\n  __loc = yyloc(_1loc, _3loc);\n  __ = Node({\n    type: 'Group',\n    capturing: true,\n    number: _1.groupNumber,\n    expression: _2\n  }, __loc);\n}], [16, 3, function (_1, _2, _3, _1loc, _2loc, _3loc) {\n  __loc = yyloc(_1loc, _3loc);\n  __ = Node({\n    type: 'Group',\n    capturing: false,\n    expression: _2\n  }, __loc);\n}], [17, 3, function (_1, _2, _3, _1loc, _2loc, _3loc) {\n  __loc = yyloc(_1loc, _3loc);\n  __ = Node({\n    type: 'CharacterClass',\n    negative: true,\n    expressions: _2\n  }, __loc);\n}], [17, 3, function (_1, _2, _3, _1loc, _2loc, _3loc) {\n  __loc = yyloc(_1loc, _3loc);\n  __ = Node({\n    type: 'CharacterClass',\n    expressions: _2\n  }, __loc);\n}], [18, 0, function () {\n  __loc = null;__ = [];\n}], [18, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [19, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = [_1];\n}], [19, 2, function (_1, _2, _1loc, _2loc) {\n  __loc = yyloc(_1loc, _2loc);__ = [_1].concat(_2);\n}], [19, 4, function (_1, _2, _3, _4, _1loc, _2loc, _3loc, _4loc) {\n  __loc = yyloc(_1loc, _4loc);\n  checkClassRange(_1, _3);\n\n  __ = [Node({\n    type: 'ClassRange',\n    from: _1,\n    to: _3\n  }, loc(_1loc, _3loc))];\n\n  if (_4) {\n    __ = __.concat(_4);\n  }\n}], [20, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [20, 2, function (_1, _2, _1loc, _2loc) {\n  __loc = yyloc(_1loc, _2loc);__ = [_1].concat(_2);\n}], [20, 4, function (_1, _2, _3, _4, _1loc, _2loc, _3loc, _4loc) {\n  __loc = yyloc(_1loc, _4loc);\n  checkClassRange(_1, _3);\n\n  __ = [Node({\n    type: 'ClassRange',\n    from: _1,\n    to: _3\n  }, loc(_1loc, _3loc))];\n\n  if (_4) {\n    __ = __.concat(_4);\n  }\n}], [21, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1, 'simple', __loc);\n}], [21, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [22, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [22, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1, 'meta', __loc);\n}]];\n\n/**\n * Encoded tokens map.\n */\nvar tokens = { \"SLASH\": \"23\", \"CHAR\": \"24\", \"BAR\": \"25\", \"BOS\": \"26\", \"EOS\": \"27\", \"ESC_b\": \"28\", \"ESC_B\": \"29\", \"POS_LA_ASSERT\": \"30\", \"R_PAREN\": \"31\", \"NEG_LA_ASSERT\": \"32\", \"POS_LB_ASSERT\": \"33\", \"NEG_LB_ASSERT\": \"34\", \"ESC_CHAR\": \"35\", \"U_CODE_SURROGATE\": \"36\", \"U_CODE\": \"37\", \"U_PROP_VALUE_EXP\": \"38\", \"CTRL_CH\": \"39\", \"HEX_CODE\": \"40\", \"OCT_CODE\": \"41\", \"DEC_CODE\": \"42\", \"META_CHAR\": \"43\", \"ANY\": \"44\", \"NAMED_GROUP_REF\": \"45\", \"Q_MARK\": \"46\", \"STAR\": \"47\", \"PLUS\": \"48\", \"RANGE_EXACT\": \"49\", \"RANGE_OPEN\": \"50\", \"RANGE_CLOSED\": \"51\", \"NAMED_CAPTURE_GROUP\": \"52\", \"L_PAREN\": \"53\", \"NON_CAPTURE_GROUP\": \"54\", \"NEG_CLASS\": \"55\", \"R_BRACKET\": \"56\", \"L_BRACKET\": \"57\", \"DASH\": \"58\", \"$\": \"59\" };\n\n/**\n * Parsing table (generated by Syntax tool).\n */\nvar table = [{ \"0\": 1, \"23\": \"s2\" }, { \"59\": \"acc\" }, { \"3\": 3, \"4\": 4, \"5\": 5, \"6\": 6, \"23\": \"r10\", \"24\": \"r10\", \"25\": \"r10\", \"26\": \"r10\", \"27\": \"r10\", \"28\": \"r10\", \"29\": \"r10\", \"30\": \"r10\", \"32\": \"r10\", \"33\": \"r10\", \"34\": \"r10\", \"35\": \"r10\", \"36\": \"r10\", \"37\": \"r10\", \"38\": \"r10\", \"39\": \"r10\", \"40\": \"r10\", \"41\": \"r10\", \"42\": \"r10\", \"43\": \"r10\", \"44\": \"r10\", \"45\": \"r10\", \"52\": \"r10\", \"53\": \"r10\", \"54\": \"r10\", \"55\": \"r10\", \"57\": \"r10\" }, { \"23\": \"s7\" }, { \"23\": \"r6\", \"25\": \"s12\" }, { \"23\": \"r7\", \"25\": \"r7\", \"31\": \"r7\" }, { \"7\": 14, \"8\": 15, \"9\": 16, \"10\": 25, \"14\": 27, \"15\": 42, \"16\": 43, \"17\": 26, \"23\": \"r9\", \"24\": \"s28\", \"25\": \"r9\", \"26\": \"s17\", \"27\": \"s18\", \"28\": \"s19\", \"29\": \"s20\", \"30\": \"s21\", \"31\": \"r9\", \"32\": \"s22\", \"33\": \"s23\", \"34\": \"s24\", \"35\": \"s29\", \"36\": \"s30\", \"37\": \"s31\", \"38\": \"s32\", \"39\": \"s33\", \"40\": \"s34\", \"41\": \"s35\", \"42\": \"s36\", \"43\": \"s37\", \"44\": \"s38\", \"45\": \"s39\", \"52\": \"s44\", \"53\": \"s45\", \"54\": \"s46\", \"55\": \"s40\", \"57\": \"s41\" }, { \"1\": 8, \"2\": 9, \"24\": \"s10\", \"59\": \"r3\" }, { \"59\": \"r1\" }, { \"24\": \"s11\", \"59\": \"r2\" }, { \"24\": \"r4\", \"59\": \"r4\" }, { \"24\": \"r5\", \"59\": \"r5\" }, { \"5\": 13, \"6\": 6, \"23\": \"r10\", \"24\": \"r10\", \"25\": \"r10\", \"26\": \"r10\", \"27\": \"r10\", \"28\": \"r10\", \"29\": \"r10\", \"30\": \"r10\", \"31\": \"r10\", \"32\": \"r10\", \"33\": \"r10\", \"34\": \"r10\", \"35\": \"r10\", \"36\": \"r10\", \"37\": \"r10\", \"38\": \"r10\", \"39\": \"r10\", \"40\": \"r10\", \"41\": \"r10\", \"42\": \"r10\", \"43\": \"r10\", \"44\": \"r10\", \"45\": \"r10\", \"52\": \"r10\", \"53\": \"r10\", \"54\": \"r10\", \"55\": \"r10\", \"57\": \"r10\" }, { \"23\": \"r8\", \"25\": \"r8\", \"31\": \"r8\" }, { \"23\": \"r11\", \"24\": \"r11\", \"25\": \"r11\", \"26\": \"r11\", \"27\": \"r11\", \"28\": \"r11\", \"29\": \"r11\", \"30\": \"r11\", \"31\": \"r11\", \"32\": \"r11\", \"33\": \"r11\", \"34\": \"r11\", \"35\": \"r11\", \"36\": \"r11\", \"37\": \"r11\", \"38\": \"r11\", \"39\": \"r11\", \"40\": \"r11\", \"41\": \"r11\", \"42\": \"r11\", \"43\": \"r11\", \"44\": \"r11\", \"45\": \"r11\", \"52\": \"r11\", \"53\": \"r11\", \"54\": \"r11\", \"55\": \"r11\", \"57\": \"r11\" }, { \"23\": \"r12\", \"24\": \"r12\", \"25\": \"r12\", \"26\": \"r12\", \"27\": \"r12\", \"28\": \"r12\", \"29\": \"r12\", \"30\": \"r12\", \"31\": \"r12\", \"32\": \"r12\", \"33\": \"r12\", \"34\": \"r12\", \"35\": \"r12\", \"36\": \"r12\", \"37\": \"r12\", \"38\": \"r12\", \"39\": \"r12\", \"40\": \"r12\", \"41\": \"r12\", \"42\": \"r12\", \"43\": \"r12\", \"44\": \"r12\", \"45\": \"r12\", \"52\": \"r12\", \"53\": \"r12\", \"54\": \"r12\", \"55\": \"r12\", \"57\": \"r12\" }, { \"11\": 47, \"12\": 48, \"13\": 49, \"23\": \"r38\", \"24\": \"r38\", \"25\": \"r38\", \"26\": \"r38\", \"27\": \"r38\", \"28\": \"r38\", \"29\": \"r38\", \"30\": \"r38\", \"31\": \"r38\", \"32\": \"r38\", \"33\": \"r38\", \"34\": \"r38\", \"35\": \"r38\", \"36\": \"r38\", \"37\": \"r38\", \"38\": \"r38\", \"39\": \"r38\", \"40\": \"r38\", \"41\": \"r38\", \"42\": \"r38\", \"43\": \"r38\", \"44\": \"r38\", \"45\": \"r38\", \"46\": \"s52\", \"47\": \"s50\", \"48\": \"s51\", \"49\": \"s53\", \"50\": \"s54\", \"51\": \"s55\", \"52\": \"r38\", \"53\": \"r38\", \"54\": \"r38\", \"55\": \"r38\", \"57\": \"r38\" }, { \"23\": \"r14\", \"24\": \"r14\", \"25\": \"r14\", \"26\": \"r14\", \"27\": \"r14\", \"28\": \"r14\", \"29\": \"r14\", \"30\": \"r14\", \"31\": \"r14\", \"32\": \"r14\", \"33\": \"r14\", \"34\": \"r14\", \"35\": \"r14\", \"36\": \"r14\", \"37\": \"r14\", \"38\": \"r14\", \"39\": \"r14\", \"40\": \"r14\", \"41\": \"r14\", \"42\": \"r14\", \"43\": \"r14\", \"44\": \"r14\", \"45\": \"r14\", \"52\": \"r14\", \"53\": \"r14\", \"54\": \"r14\", \"55\": \"r14\", \"57\": \"r14\" }, { \"23\": \"r15\", \"24\": \"r15\", \"25\": \"r15\", \"26\": \"r15\", \"27\": \"r15\", \"28\": \"r15\", \"29\": \"r15\", \"30\": \"r15\", \"31\": \"r15\", \"32\": \"r15\", \"33\": \"r15\", \"34\": \"r15\", \"35\": \"r15\", \"36\": \"r15\", \"37\": \"r15\", \"38\": \"r15\", \"39\": \"r15\", \"40\": \"r15\", \"41\": \"r15\", \"42\": \"r15\", \"43\": \"r15\", \"44\": \"r15\", \"45\": \"r15\", \"52\": \"r15\", \"53\": \"r15\", \"54\": \"r15\", \"55\": \"r15\", \"57\": \"r15\" }, { \"23\": \"r16\", \"24\": \"r16\", \"25\": \"r16\", \"26\": \"r16\", \"27\": \"r16\", \"28\": \"r16\", \"29\": \"r16\", \"30\": \"r16\", \"31\": \"r16\", \"32\": \"r16\", \"33\": \"r16\", \"34\": \"r16\", \"35\": \"r16\", \"36\": \"r16\", \"37\": \"r16\", \"38\": \"r16\", \"39\": \"r16\", \"40\": \"r16\", \"41\": \"r16\", \"42\": \"r16\", \"43\": \"r16\", \"44\": \"r16\", \"45\": \"r16\", \"52\": \"r16\", \"53\": \"r16\", \"54\": \"r16\", \"55\": \"r16\", \"57\": \"r16\" }, { \"23\": \"r17\", \"24\": \"r17\", \"25\": \"r17\", \"26\": \"r17\", \"27\": \"r17\", \"28\": \"r17\", \"29\": \"r17\", \"30\": \"r17\", \"31\": \"r17\", \"32\": \"r17\", \"33\": \"r17\", \"34\": \"r17\", \"35\": \"r17\", \"36\": \"r17\", \"37\": \"r17\", \"38\": \"r17\", \"39\": \"r17\", \"40\": \"r17\", \"41\": \"r17\", \"42\": \"r17\", \"43\": \"r17\", \"44\": \"r17\", \"45\": \"r17\", \"52\": \"r17\", \"53\": \"r17\", \"54\": \"r17\", \"55\": \"r17\", \"57\": \"r17\" }, { \"4\": 57, \"5\": 5, \"6\": 6, \"24\": \"r10\", \"25\": \"r10\", \"26\": \"r10\", \"27\": \"r10\", \"28\": \"r10\", \"29\": \"r10\", \"30\": \"r10\", \"31\": \"r10\", \"32\": \"r10\", \"33\": \"r10\", \"34\": \"r10\", \"35\": \"r10\", \"36\": \"r10\", \"37\": \"r10\", \"38\": \"r10\", \"39\": \"r10\", \"40\": \"r10\", \"41\": \"r10\", \"42\": \"r10\", \"43\": \"r10\", \"44\": \"r10\", \"45\": \"r10\", \"52\": \"r10\", \"53\": \"r10\", \"54\": \"r10\", \"55\": \"r10\", \"57\": \"r10\" }, { \"4\": 59, \"5\": 5, \"6\": 6, \"24\": \"r10\", \"25\": \"r10\", \"26\": \"r10\", \"27\": \"r10\", \"28\": \"r10\", \"29\": \"r10\", \"30\": \"r10\", \"31\": \"r10\", \"32\": \"r10\", \"33\": \"r10\", \"34\": \"r10\", \"35\": \"r10\", \"36\": \"r10\", \"37\": \"r10\", \"38\": \"r10\", \"39\": \"r10\", \"40\": \"r10\", \"41\": \"r10\", \"42\": \"r10\", \"43\": \"r10\", \"44\": \"r10\", \"45\": \"r10\", \"52\": \"r10\", \"53\": \"r10\", \"54\": \"r10\", \"55\": \"r10\", \"57\": \"r10\" }, { \"4\": 61, \"5\": 5, \"6\": 6, \"24\": \"r10\", \"25\": \"r10\", \"26\": \"r10\", \"27\": \"r10\", \"28\": \"r10\", \"29\": \"r10\", \"30\": \"r10\", \"31\": \"r10\", \"32\": \"r10\", \"33\": \"r10\", \"34\": \"r10\", \"35\": \"r10\", \"36\": \"r10\", \"37\": \"r10\", \"38\": \"r10\", \"39\": \"r10\", \"40\": \"r10\", \"41\": \"r10\", \"42\": \"r10\", \"43\": \"r10\", \"44\": \"r10\", \"45\": \"r10\", \"52\": \"r10\", \"53\": \"r10\", \"54\": \"r10\", \"55\": \"r10\", \"57\": \"r10\" }, { \"4\": 63, \"5\": 5, \"6\": 6, \"24\": \"r10\", \"25\": \"r10\", \"26\": \"r10\", \"27\": \"r10\", \"28\": \"r10\", \"29\": \"r10\", \"30\": \"r10\", \"31\": \"r10\", \"32\": \"r10\", \"33\": \"r10\", \"34\": \"r10\", \"35\": \"r10\", \"36\": \"r10\", \"37\": \"r10\", \"38\": \"r10\", \"39\": \"r10\", \"40\": \"r10\", \"41\": \"r10\", \"42\": \"r10\", \"43\": \"r10\", \"44\": \"r10\", \"45\": \"r10\", \"52\": \"r10\", \"53\": \"r10\", \"54\": \"r10\", \"55\": \"r10\", \"57\": \"r10\" }, { \"23\": \"r22\", \"24\": \"r22\", \"25\": \"r22\", \"26\": \"r22\", \"27\": \"r22\", \"28\": \"r22\", \"29\": \"r22\", \"30\": \"r22\", \"31\": \"r22\", \"32\": \"r22\", \"33\": \"r22\", \"34\": \"r22\", \"35\": \"r22\", \"36\": \"r22\", \"37\": \"r22\", \"38\": \"r22\", \"39\": \"r22\", \"40\": \"r22\", \"41\": \"r22\", \"42\": \"r22\", \"43\": \"r22\", \"44\": \"r22\", \"45\": \"r22\", \"46\": \"r22\", \"47\": \"r22\", \"48\": \"r22\", \"49\": \"r22\", \"50\": \"r22\", \"51\": \"r22\", \"52\": \"r22\", \"53\": \"r22\", \"54\": \"r22\", \"55\": \"r22\", \"57\": \"r22\" }, { \"23\": \"r23\", \"24\": \"r23\", \"25\": \"r23\", \"26\": \"r23\", \"27\": \"r23\", \"28\": \"r23\", \"29\": \"r23\", \"30\": \"r23\", \"31\": \"r23\", \"32\": \"r23\", \"33\": \"r23\", \"34\": \"r23\", \"35\": \"r23\", \"36\": \"r23\", \"37\": \"r23\", \"38\": \"r23\", \"39\": \"r23\", \"40\": \"r23\", \"41\": \"r23\", \"42\": \"r23\", \"43\": \"r23\", \"44\": \"r23\", \"45\": \"r23\", \"46\": \"r23\", \"47\": \"r23\", \"48\": \"r23\", \"49\": \"r23\", \"50\": \"r23\", \"51\": \"r23\", \"52\": \"r23\", \"53\": \"r23\", \"54\": \"r23\", \"55\": \"r23\", \"57\": \"r23\" }, { \"23\": \"r24\", \"24\": \"r24\", \"25\": \"r24\", \"26\": \"r24\", \"27\": \"r24\", \"28\": \"r24\", \"29\": \"r24\", \"30\": \"r24\", \"31\": \"r24\", \"32\": \"r24\", \"33\": \"r24\", \"34\": \"r24\", \"35\": \"r24\", \"36\": \"r24\", \"37\": \"r24\", \"38\": \"r24\", \"39\": \"r24\", \"40\": \"r24\", \"41\": \"r24\", \"42\": \"r24\", \"43\": \"r24\", \"44\": \"r24\", \"45\": \"r24\", \"46\": \"r24\", \"47\": \"r24\", \"48\": \"r24\", \"49\": \"r24\", \"50\": \"r24\", \"51\": \"r24\", \"52\": \"r24\", \"53\": \"r24\", \"54\": \"r24\", \"55\": \"r24\", \"57\": \"r24\" }, { \"23\": \"r25\", \"24\": \"r25\", \"25\": \"r25\", \"26\": \"r25\", \"27\": \"r25\", \"28\": \"r25\", \"29\": \"r25\", \"30\": \"r25\", \"31\": \"r25\", \"32\": \"r25\", \"33\": \"r25\", \"34\": \"r25\", \"35\": \"r25\", \"36\": \"r25\", \"37\": \"r25\", \"38\": \"r25\", \"39\": \"r25\", \"40\": \"r25\", \"41\": \"r25\", \"42\": \"r25\", \"43\": \"r25\", \"44\": \"r25\", \"45\": \"r25\", \"46\": \"r25\", \"47\": \"r25\", \"48\": \"r25\", \"49\": \"r25\", \"50\": \"r25\", \"51\": \"r25\", \"52\": \"r25\", \"53\": \"r25\", \"54\": \"r25\", \"55\": \"r25\", \"56\": \"r25\", \"57\": \"r25\", \"58\": \"r25\" }, { \"23\": \"r26\", \"24\": \"r26\", \"25\": \"r26\", \"26\": \"r26\", \"27\": \"r26\", \"28\": \"r26\", \"29\": \"r26\", \"30\": \"r26\", \"31\": \"r26\", \"32\": \"r26\", \"33\": \"r26\", \"34\": \"r26\", \"35\": \"r26\", \"36\": \"r26\", \"37\": \"r26\", \"38\": \"r26\", \"39\": \"r26\", \"40\": \"r26\", \"41\": \"r26\", \"42\": \"r26\", \"43\": \"r26\", \"44\": \"r26\", \"45\": \"r26\", \"46\": \"r26\", \"47\": \"r26\", \"48\": \"r26\", \"49\": \"r26\", \"50\": \"r26\", \"51\": \"r26\", \"52\": \"r26\", \"53\": \"r26\", \"54\": \"r26\", \"55\": \"r26\", \"56\": \"r26\", \"57\": \"r26\", \"58\": \"r26\" }, { \"23\": \"r27\", \"24\": \"r27\", \"25\": \"r27\", \"26\": \"r27\", \"27\": \"r27\", \"28\": \"r27\", \"29\": \"r27\", \"30\": \"r27\", \"31\": \"r27\", \"32\": \"r27\", \"33\": \"r27\", \"34\": \"r27\", \"35\": \"r27\", \"36\": \"r27\", \"37\": \"r27\", \"38\": \"r27\", \"39\": \"r27\", \"40\": \"r27\", \"41\": \"r27\", \"42\": \"r27\", \"43\": \"r27\", \"44\": \"r27\", \"45\": \"r27\", \"46\": \"r27\", \"47\": \"r27\", \"48\": \"r27\", \"49\": \"r27\", \"50\": \"r27\", \"51\": \"r27\", \"52\": \"r27\", \"53\": \"r27\", \"54\": \"r27\", \"55\": \"r27\", \"56\": \"r27\", \"57\": \"r27\", \"58\": \"r27\" }, { \"23\": \"r28\", \"24\": \"r28\", \"25\": \"r28\", \"26\": \"r28\", \"27\": \"r28\", \"28\": \"r28\", \"29\": \"r28\", \"30\": \"r28\", \"31\": \"r28\", \"32\": \"r28\", \"33\": \"r28\", \"34\": \"r28\", \"35\": \"r28\", \"36\": \"r28\", \"37\": \"r28\", \"38\": \"r28\", \"39\": \"r28\", \"40\": \"r28\", \"41\": \"r28\", \"42\": \"r28\", \"43\": \"r28\", \"44\": \"r28\", \"45\": \"r28\", \"46\": \"r28\", \"47\": \"r28\", \"48\": \"r28\", \"49\": \"r28\", \"50\": \"r28\", \"51\": \"r28\", \"52\": \"r28\", \"53\": \"r28\", \"54\": \"r28\", \"55\": \"r28\", \"56\": \"r28\", \"57\": \"r28\", \"58\": \"r28\" }, { \"23\": \"r29\", \"24\": \"r29\", \"25\": \"r29\", \"26\": \"r29\", \"27\": \"r29\", \"28\": \"r29\", \"29\": \"r29\", \"30\": \"r29\", \"31\": \"r29\", \"32\": \"r29\", \"33\": \"r29\", \"34\": \"r29\", \"35\": \"r29\", \"36\": \"r29\", \"37\": \"r29\", \"38\": \"r29\", \"39\": \"r29\", \"40\": \"r29\", \"41\": \"r29\", \"42\": \"r29\", \"43\": \"r29\", \"44\": \"r29\", \"45\": \"r29\", \"46\": \"r29\", \"47\": \"r29\", \"48\": \"r29\", \"49\": \"r29\", \"50\": \"r29\", \"51\": \"r29\", \"52\": \"r29\", \"53\": \"r29\", \"54\": \"r29\", \"55\": \"r29\", \"56\": \"r29\", \"57\": \"r29\", \"58\": \"r29\" }, { \"23\": \"r30\", \"24\": \"r30\", \"25\": \"r30\", \"26\": \"r30\", \"27\": \"r30\", \"28\": \"r30\", \"29\": \"r30\", \"30\": \"r30\", \"31\": \"r30\", \"32\": \"r30\", \"33\": \"r30\", \"34\": \"r30\", \"35\": \"r30\", \"36\": \"r30\", \"37\": \"r30\", \"38\": \"r30\", \"39\": \"r30\", \"40\": \"r30\", \"41\": \"r30\", \"42\": \"r30\", \"43\": \"r30\", \"44\": \"r30\", \"45\": \"r30\", \"46\": \"r30\", \"47\": \"r30\", \"48\": \"r30\", \"49\": \"r30\", \"50\": \"r30\", \"51\": \"r30\", \"52\": \"r30\", \"53\": \"r30\", \"54\": \"r30\", \"55\": \"r30\", \"56\": \"r30\", \"57\": \"r30\", \"58\": \"r30\" }, { \"23\": \"r31\", \"24\": \"r31\", \"25\": \"r31\", \"26\": \"r31\", \"27\": \"r31\", \"28\": \"r31\", \"29\": \"r31\", \"30\": \"r31\", \"31\": \"r31\", \"32\": \"r31\", \"33\": \"r31\", \"34\": \"r31\", \"35\": \"r31\", \"36\": \"r31\", \"37\": \"r31\", \"38\": \"r31\", \"39\": \"r31\", \"40\": \"r31\", \"41\": \"r31\", \"42\": \"r31\", \"43\": \"r31\", \"44\": \"r31\", \"45\": \"r31\", \"46\": \"r31\", \"47\": \"r31\", \"48\": \"r31\", \"49\": \"r31\", \"50\": \"r31\", \"51\": \"r31\", \"52\": \"r31\", \"53\": \"r31\", \"54\": \"r31\", \"55\": \"r31\", \"56\": \"r31\", \"57\": \"r31\", \"58\": \"r31\" }, { \"23\": \"r32\", \"24\": \"r32\", \"25\": \"r32\", \"26\": \"r32\", \"27\": \"r32\", \"28\": \"r32\", \"29\": \"r32\", \"30\": \"r32\", \"31\": \"r32\", \"32\": \"r32\", \"33\": \"r32\", \"34\": \"r32\", \"35\": \"r32\", \"36\": \"r32\", \"37\": \"r32\", \"38\": \"r32\", \"39\": \"r32\", \"40\": \"r32\", \"41\": \"r32\", \"42\": \"r32\", \"43\": \"r32\", \"44\": \"r32\", \"45\": \"r32\", \"46\": \"r32\", \"47\": \"r32\", \"48\": \"r32\", \"49\": \"r32\", \"50\": \"r32\", \"51\": \"r32\", \"52\": \"r32\", \"53\": \"r32\", \"54\": \"r32\", \"55\": \"r32\", \"56\": \"r32\", \"57\": \"r32\", \"58\": \"r32\" }, { \"23\": \"r33\", \"24\": \"r33\", \"25\": \"r33\", \"26\": \"r33\", \"27\": \"r33\", \"28\": \"r33\", \"29\": \"r33\", \"30\": \"r33\", \"31\": \"r33\", \"32\": \"r33\", \"33\": \"r33\", \"34\": \"r33\", \"35\": \"r33\", \"36\": \"r33\", \"37\": \"r33\", \"38\": \"r33\", \"39\": \"r33\", \"40\": \"r33\", \"41\": \"r33\", \"42\": \"r33\", \"43\": \"r33\", \"44\": \"r33\", \"45\": \"r33\", \"46\": \"r33\", \"47\": \"r33\", \"48\": \"r33\", \"49\": \"r33\", \"50\": \"r33\", \"51\": \"r33\", \"52\": \"r33\", \"53\": \"r33\", \"54\": \"r33\", \"55\": \"r33\", \"56\": \"r33\", \"57\": \"r33\", \"58\": \"r33\" }, { \"23\": \"r34\", \"24\": \"r34\", \"25\": \"r34\", \"26\": \"r34\", \"27\": \"r34\", \"28\": \"r34\", \"29\": \"r34\", \"30\": \"r34\", \"31\": \"r34\", \"32\": \"r34\", \"33\": \"r34\", \"34\": \"r34\", \"35\": \"r34\", \"36\": \"r34\", \"37\": \"r34\", \"38\": \"r34\", \"39\": \"r34\", \"40\": \"r34\", \"41\": \"r34\", \"42\": \"r34\", \"43\": \"r34\", \"44\": \"r34\", \"45\": \"r34\", \"46\": \"r34\", \"47\": \"r34\", \"48\": \"r34\", \"49\": \"r34\", \"50\": \"r34\", \"51\": \"r34\", \"52\": \"r34\", \"53\": \"r34\", \"54\": \"r34\", \"55\": \"r34\", \"56\": \"r34\", \"57\": \"r34\", \"58\": \"r34\" }, { \"23\": \"r35\", \"24\": \"r35\", \"25\": \"r35\", \"26\": \"r35\", \"27\": \"r35\", \"28\": \"r35\", \"29\": \"r35\", \"30\": \"r35\", \"31\": \"r35\", \"32\": \"r35\", \"33\": \"r35\", \"34\": \"r35\", \"35\": \"r35\", \"36\": \"r35\", \"37\": \"r35\", \"38\": \"r35\", \"39\": \"r35\", \"40\": \"r35\", \"41\": \"r35\", \"42\": \"r35\", \"43\": \"r35\", \"44\": \"r35\", \"45\": \"r35\", \"46\": \"r35\", \"47\": \"r35\", \"48\": \"r35\", \"49\": \"r35\", \"50\": \"r35\", \"51\": \"r35\", \"52\": \"r35\", \"53\": \"r35\", \"54\": \"r35\", \"55\": \"r35\", \"56\": \"r35\", \"57\": \"r35\", \"58\": \"r35\" }, { \"23\": \"r36\", \"24\": \"r36\", \"25\": \"r36\", \"26\": \"r36\", \"27\": \"r36\", \"28\": \"r36\", \"29\": \"r36\", \"30\": \"r36\", \"31\": \"r36\", \"32\": \"r36\", \"33\": \"r36\", \"34\": \"r36\", \"35\": \"r36\", \"36\": \"r36\", \"37\": \"r36\", \"38\": \"r36\", \"39\": \"r36\", \"40\": \"r36\", \"41\": \"r36\", \"42\": \"r36\", \"43\": \"r36\", \"44\": \"r36\", \"45\": \"r36\", \"46\": \"r36\", \"47\": \"r36\", \"48\": \"r36\", \"49\": \"r36\", \"50\": \"r36\", \"51\": \"r36\", \"52\": \"r36\", \"53\": \"r36\", \"54\": \"r36\", \"55\": \"r36\", \"56\": \"r36\", \"57\": \"r36\", \"58\": \"r36\" }, { \"10\": 70, \"18\": 65, \"19\": 66, \"21\": 67, \"22\": 69, \"24\": \"s28\", \"28\": \"s71\", \"35\": \"s29\", \"36\": \"s30\", \"37\": \"s31\", \"38\": \"s32\", \"39\": \"s33\", \"40\": \"s34\", \"41\": \"s35\", \"42\": \"s36\", \"43\": \"s37\", \"44\": \"s38\", \"45\": \"s39\", \"56\": \"r54\", \"58\": \"s68\" }, { \"10\": 70, \"18\": 83, \"19\": 66, \"21\": 67, \"22\": 69, \"24\": \"s28\", \"28\": \"s71\", \"35\": \"s29\", \"36\": \"s30\", \"37\": \"s31\", \"38\": \"s32\", \"39\": \"s33\", \"40\": \"s34\", \"41\": \"s35\", \"42\": \"s36\", \"43\": \"s37\", \"44\": \"s38\", \"45\": \"s39\", \"56\": \"r54\", \"58\": \"s68\" }, { \"23\": \"r47\", \"24\": \"r47\", \"25\": \"r47\", \"26\": \"r47\", \"27\": \"r47\", \"28\": \"r47\", \"29\": \"r47\", \"30\": \"r47\", \"31\": \"r47\", \"32\": \"r47\", \"33\": \"r47\", \"34\": \"r47\", \"35\": \"r47\", \"36\": \"r47\", \"37\": \"r47\", \"38\": \"r47\", \"39\": \"r47\", \"40\": \"r47\", \"41\": \"r47\", \"42\": \"r47\", \"43\": \"r47\", \"44\": \"r47\", \"45\": \"r47\", \"46\": \"r47\", \"47\": \"r47\", \"48\": \"r47\", \"49\": \"r47\", \"50\": \"r47\", \"51\": \"r47\", \"52\": \"r47\", \"53\": \"r47\", \"54\": \"r47\", \"55\": \"r47\", \"57\": \"r47\" }, { \"23\": \"r48\", \"24\": \"r48\", \"25\": \"r48\", \"26\": \"r48\", \"27\": \"r48\", \"28\": \"r48\", \"29\": \"r48\", \"30\": \"r48\", \"31\": \"r48\", \"32\": \"r48\", \"33\": \"r48\", \"34\": \"r48\", \"35\": \"r48\", \"36\": \"r48\", \"37\": \"r48\", \"38\": \"r48\", \"39\": \"r48\", \"40\": \"r48\", \"41\": \"r48\", \"42\": \"r48\", \"43\": \"r48\", \"44\": \"r48\", \"45\": \"r48\", \"46\": \"r48\", \"47\": \"r48\", \"48\": \"r48\", \"49\": \"r48\", \"50\": \"r48\", \"51\": \"r48\", \"52\": \"r48\", \"53\": \"r48\", \"54\": \"r48\", \"55\": \"r48\", \"57\": \"r48\" }, { \"4\": 85, \"5\": 5, \"6\": 6, \"24\": \"r10\", \"25\": \"r10\", \"26\": \"r10\", \"27\": \"r10\", \"28\": \"r10\", \"29\": \"r10\", \"30\": \"r10\", \"31\": \"r10\", \"32\": \"r10\", \"33\": \"r10\", \"34\": \"r10\", \"35\": \"r10\", \"36\": \"r10\", \"37\": \"r10\", \"38\": \"r10\", \"39\": \"r10\", \"40\": \"r10\", \"41\": \"r10\", \"42\": \"r10\", \"43\": \"r10\", \"44\": \"r10\", \"45\": \"r10\", \"52\": \"r10\", \"53\": \"r10\", \"54\": \"r10\", \"55\": \"r10\", \"57\": \"r10\" }, { \"4\": 87, \"5\": 5, \"6\": 6, \"24\": \"r10\", \"25\": \"r10\", \"26\": \"r10\", \"27\": \"r10\", \"28\": \"r10\", \"29\": \"r10\", \"30\": \"r10\", \"31\": \"r10\", \"32\": \"r10\", \"33\": \"r10\", \"34\": \"r10\", \"35\": \"r10\", \"36\": \"r10\", \"37\": \"r10\", \"38\": \"r10\", \"39\": \"r10\", \"40\": \"r10\", \"41\": \"r10\", \"42\": \"r10\", \"43\": \"r10\", \"44\": \"r10\", \"45\": \"r10\", \"52\": \"r10\", \"53\": \"r10\", \"54\": \"r10\", \"55\": \"r10\", \"57\": \"r10\" }, { \"4\": 89, \"5\": 5, \"6\": 6, \"24\": \"r10\", \"25\": \"r10\", \"26\": \"r10\", \"27\": \"r10\", \"28\": \"r10\", \"29\": \"r10\", \"30\": \"r10\", \"31\": \"r10\", \"32\": \"r10\", \"33\": \"r10\", \"34\": \"r10\", \"35\": \"r10\", \"36\": \"r10\", \"37\": \"r10\", \"38\": \"r10\", \"39\": \"r10\", \"40\": \"r10\", \"41\": \"r10\", \"42\": \"r10\", \"43\": \"r10\", \"44\": \"r10\", \"45\": \"r10\", \"52\": \"r10\", \"53\": \"r10\", \"54\": \"r10\", \"55\": \"r10\", \"57\": \"r10\" }, { \"23\": \"r13\", \"24\": \"r13\", \"25\": \"r13\", \"26\": \"r13\", \"27\": \"r13\", \"28\": \"r13\", \"29\": \"r13\", \"30\": \"r13\", \"31\": \"r13\", \"32\": \"r13\", \"33\": \"r13\", \"34\": \"r13\", \"35\": \"r13\", \"36\": \"r13\", \"37\": \"r13\", \"38\": \"r13\", \"39\": \"r13\", \"40\": \"r13\", \"41\": \"r13\", \"42\": \"r13\", \"43\": \"r13\", \"44\": \"r13\", \"45\": \"r13\", \"52\": \"r13\", \"53\": \"r13\", \"54\": \"r13\", \"55\": \"r13\", \"57\": \"r13\" }, { \"23\": \"r37\", \"24\": \"r37\", \"25\": \"r37\", \"26\": \"r37\", \"27\": \"r37\", \"28\": \"r37\", \"29\": \"r37\", \"30\": \"r37\", \"31\": \"r37\", \"32\": \"r37\", \"33\": \"r37\", \"34\": \"r37\", \"35\": \"r37\", \"36\": \"r37\", \"37\": \"r37\", \"38\": \"r37\", \"39\": \"r37\", \"40\": \"r37\", \"41\": \"r37\", \"42\": \"r37\", \"43\": \"r37\", \"44\": \"r37\", \"45\": \"r37\", \"52\": \"r37\", \"53\": \"r37\", \"54\": \"r37\", \"55\": \"r37\", \"57\": \"r37\" }, { \"23\": \"r39\", \"24\": \"r39\", \"25\": \"r39\", \"26\": \"r39\", \"27\": \"r39\", \"28\": \"r39\", \"29\": \"r39\", \"30\": \"r39\", \"31\": \"r39\", \"32\": \"r39\", \"33\": \"r39\", \"34\": \"r39\", \"35\": \"r39\", \"36\": \"r39\", \"37\": \"r39\", \"38\": \"r39\", \"39\": \"r39\", \"40\": \"r39\", \"41\": \"r39\", \"42\": \"r39\", \"43\": \"r39\", \"44\": \"r39\", \"45\": \"r39\", \"46\": \"s56\", \"52\": \"r39\", \"53\": \"r39\", \"54\": \"r39\", \"55\": \"r39\", \"57\": \"r39\" }, { \"23\": \"r41\", \"24\": \"r41\", \"25\": \"r41\", \"26\": \"r41\", \"27\": \"r41\", \"28\": \"r41\", \"29\": \"r41\", \"30\": \"r41\", \"31\": \"r41\", \"32\": \"r41\", \"33\": \"r41\", \"34\": \"r41\", \"35\": \"r41\", \"36\": \"r41\", \"37\": \"r41\", \"38\": \"r41\", \"39\": \"r41\", \"40\": \"r41\", \"41\": \"r41\", \"42\": \"r41\", \"43\": \"r41\", \"44\": \"r41\", \"45\": \"r41\", \"46\": \"r41\", \"52\": \"r41\", \"53\": \"r41\", \"54\": \"r41\", \"55\": \"r41\", \"57\": \"r41\" }, { \"23\": \"r42\", \"24\": \"r42\", \"25\": \"r42\", \"26\": \"r42\", \"27\": \"r42\", \"28\": \"r42\", \"29\": \"r42\", \"30\": \"r42\", \"31\": \"r42\", \"32\": \"r42\", \"33\": \"r42\", \"34\": \"r42\", \"35\": \"r42\", \"36\": \"r42\", \"37\": \"r42\", \"38\": \"r42\", \"39\": \"r42\", \"40\": \"r42\", \"41\": \"r42\", \"42\": \"r42\", \"43\": \"r42\", \"44\": \"r42\", \"45\": \"r42\", \"46\": \"r42\", \"52\": \"r42\", \"53\": \"r42\", \"54\": \"r42\", \"55\": \"r42\", \"57\": \"r42\" }, { \"23\": \"r43\", \"24\": \"r43\", \"25\": \"r43\", \"26\": \"r43\", \"27\": \"r43\", \"28\": \"r43\", \"29\": \"r43\", \"30\": \"r43\", \"31\": \"r43\", \"32\": \"r43\", \"33\": \"r43\", \"34\": \"r43\", \"35\": \"r43\", \"36\": \"r43\", \"37\": \"r43\", \"38\": \"r43\", \"39\": \"r43\", \"40\": \"r43\", \"41\": \"r43\", \"42\": \"r43\", \"43\": \"r43\", \"44\": \"r43\", \"45\": \"r43\", \"46\": \"r43\", \"52\": \"r43\", \"53\": \"r43\", \"54\": \"r43\", \"55\": \"r43\", \"57\": \"r43\" }, { \"23\": \"r44\", \"24\": \"r44\", \"25\": \"r44\", \"26\": \"r44\", \"27\": \"r44\", \"28\": \"r44\", \"29\": \"r44\", \"30\": \"r44\", \"31\": \"r44\", \"32\": \"r44\", \"33\": \"r44\", \"34\": \"r44\", \"35\": \"r44\", \"36\": \"r44\", \"37\": \"r44\", \"38\": \"r44\", \"39\": \"r44\", \"40\": \"r44\", \"41\": \"r44\", \"42\": \"r44\", \"43\": \"r44\", \"44\": \"r44\", \"45\": \"r44\", \"46\": \"r44\", \"52\": \"r44\", \"53\": \"r44\", \"54\": \"r44\", \"55\": \"r44\", \"57\": \"r44\" }, { \"23\": \"r45\", \"24\": \"r45\", \"25\": \"r45\", \"26\": \"r45\", \"27\": \"r45\", \"28\": \"r45\", \"29\": \"r45\", \"30\": \"r45\", \"31\": \"r45\", \"32\": \"r45\", \"33\": \"r45\", \"34\": \"r45\", \"35\": \"r45\", \"36\": \"r45\", \"37\": \"r45\", \"38\": \"r45\", \"39\": \"r45\", \"40\": \"r45\", \"41\": \"r45\", \"42\": \"r45\", \"43\": \"r45\", \"44\": \"r45\", \"45\": \"r45\", \"46\": \"r45\", \"52\": \"r45\", \"53\": \"r45\", \"54\": \"r45\", \"55\": \"r45\", \"57\": \"r45\" }, { \"23\": \"r46\", \"24\": \"r46\", \"25\": \"r46\", \"26\": \"r46\", \"27\": \"r46\", \"28\": \"r46\", \"29\": \"r46\", \"30\": \"r46\", \"31\": \"r46\", \"32\": \"r46\", \"33\": \"r46\", \"34\": \"r46\", \"35\": \"r46\", \"36\": \"r46\", \"37\": \"r46\", \"38\": \"r46\", \"39\": \"r46\", \"40\": \"r46\", \"41\": \"r46\", \"42\": \"r46\", \"43\": \"r46\", \"44\": \"r46\", \"45\": \"r46\", \"46\": \"r46\", \"52\": \"r46\", \"53\": \"r46\", \"54\": \"r46\", \"55\": \"r46\", \"57\": \"r46\" }, { \"23\": \"r40\", \"24\": \"r40\", \"25\": \"r40\", \"26\": \"r40\", \"27\": \"r40\", \"28\": \"r40\", \"29\": \"r40\", \"30\": \"r40\", \"31\": \"r40\", \"32\": \"r40\", \"33\": \"r40\", \"34\": \"r40\", \"35\": \"r40\", \"36\": \"r40\", \"37\": \"r40\", \"38\": \"r40\", \"39\": \"r40\", \"40\": \"r40\", \"41\": \"r40\", \"42\": \"r40\", \"43\": \"r40\", \"44\": \"r40\", \"45\": \"r40\", \"52\": \"r40\", \"53\": \"r40\", \"54\": \"r40\", \"55\": \"r40\", \"57\": \"r40\" }, { \"25\": \"s12\", \"31\": \"s58\" }, { \"23\": \"r18\", \"24\": \"r18\", \"25\": \"r18\", \"26\": \"r18\", \"27\": \"r18\", \"28\": \"r18\", \"29\": \"r18\", \"30\": \"r18\", \"31\": \"r18\", \"32\": \"r18\", \"33\": \"r18\", \"34\": \"r18\", \"35\": \"r18\", \"36\": \"r18\", \"37\": \"r18\", \"38\": \"r18\", \"39\": \"r18\", \"40\": \"r18\", \"41\": \"r18\", \"42\": \"r18\", \"43\": \"r18\", \"44\": \"r18\", \"45\": \"r18\", \"52\": \"r18\", \"53\": \"r18\", \"54\": \"r18\", \"55\": \"r18\", \"57\": \"r18\" }, { \"25\": \"s12\", \"31\": \"s60\" }, { \"23\": \"r19\", \"24\": \"r19\", \"25\": \"r19\", \"26\": \"r19\", \"27\": \"r19\", \"28\": \"r19\", \"29\": \"r19\", \"30\": \"r19\", \"31\": \"r19\", \"32\": \"r19\", \"33\": \"r19\", \"34\": \"r19\", \"35\": \"r19\", \"36\": \"r19\", \"37\": \"r19\", \"38\": \"r19\", \"39\": \"r19\", \"40\": \"r19\", \"41\": \"r19\", \"42\": \"r19\", \"43\": \"r19\", \"44\": \"r19\", \"45\": \"r19\", \"52\": \"r19\", \"53\": \"r19\", \"54\": \"r19\", \"55\": \"r19\", \"57\": \"r19\" }, { \"25\": \"s12\", \"31\": \"s62\" }, { \"23\": \"r20\", \"24\": \"r20\", \"25\": \"r20\", \"26\": \"r20\", \"27\": \"r20\", \"28\": \"r20\", \"29\": \"r20\", \"30\": \"r20\", \"31\": \"r20\", \"32\": \"r20\", \"33\": \"r20\", \"34\": \"r20\", \"35\": \"r20\", \"36\": \"r20\", \"37\": \"r20\", \"38\": \"r20\", \"39\": \"r20\", \"40\": \"r20\", \"41\": \"r20\", \"42\": \"r20\", \"43\": \"r20\", \"44\": \"r20\", \"45\": \"r20\", \"52\": \"r20\", \"53\": \"r20\", \"54\": \"r20\", \"55\": \"r20\", \"57\": \"r20\" }, { \"25\": \"s12\", \"31\": \"s64\" }, { \"23\": \"r21\", \"24\": \"r21\", \"25\": \"r21\", \"26\": \"r21\", \"27\": \"r21\", \"28\": \"r21\", \"29\": \"r21\", \"30\": \"r21\", \"31\": \"r21\", \"32\": \"r21\", \"33\": \"r21\", \"34\": \"r21\", \"35\": \"r21\", \"36\": \"r21\", \"37\": \"r21\", \"38\": \"r21\", \"39\": \"r21\", \"40\": \"r21\", \"41\": \"r21\", \"42\": \"r21\", \"43\": \"r21\", \"44\": \"r21\", \"45\": \"r21\", \"52\": \"r21\", \"53\": \"r21\", \"54\": \"r21\", \"55\": \"r21\", \"57\": \"r21\" }, { \"56\": \"s72\" }, { \"56\": \"r55\" }, { \"10\": 70, \"20\": 73, \"21\": 75, \"22\": 76, \"24\": \"s28\", \"28\": \"s71\", \"35\": \"s29\", \"36\": \"s30\", \"37\": \"s31\", \"38\": \"s32\", \"39\": \"s33\", \"40\": \"s34\", \"41\": \"s35\", \"42\": \"s36\", \"43\": \"s37\", \"44\": \"s38\", \"45\": \"s39\", \"56\": \"r56\", \"58\": \"s74\" }, { \"24\": \"r62\", \"28\": \"r62\", \"35\": \"r62\", \"36\": \"r62\", \"37\": \"r62\", \"38\": \"r62\", \"39\": \"r62\", \"40\": \"r62\", \"41\": \"r62\", \"42\": \"r62\", \"43\": \"r62\", \"44\": \"r62\", \"45\": \"r62\", \"56\": \"r62\", \"58\": \"r62\" }, { \"24\": \"r63\", \"28\": \"r63\", \"35\": \"r63\", \"36\": \"r63\", \"37\": \"r63\", \"38\": \"r63\", \"39\": \"r63\", \"40\": \"r63\", \"41\": \"r63\", \"42\": \"r63\", \"43\": \"r63\", \"44\": \"r63\", \"45\": \"r63\", \"56\": \"r63\", \"58\": \"r63\" }, { \"24\": \"r64\", \"28\": \"r64\", \"35\": \"r64\", \"36\": \"r64\", \"37\": \"r64\", \"38\": \"r64\", \"39\": \"r64\", \"40\": \"r64\", \"41\": \"r64\", \"42\": \"r64\", \"43\": \"r64\", \"44\": \"r64\", \"45\": \"r64\", \"56\": \"r64\", \"58\": \"r64\" }, { \"24\": \"r65\", \"28\": \"r65\", \"35\": \"r65\", \"36\": \"r65\", \"37\": \"r65\", \"38\": \"r65\", \"39\": \"r65\", \"40\": \"r65\", \"41\": \"r65\", \"42\": \"r65\", \"43\": \"r65\", \"44\": \"r65\", \"45\": \"r65\", \"56\": \"r65\", \"58\": \"r65\" }, { \"23\": \"r52\", \"24\": \"r52\", \"25\": \"r52\", \"26\": \"r52\", \"27\": \"r52\", \"28\": \"r52\", \"29\": \"r52\", \"30\": \"r52\", \"31\": \"r52\", \"32\": \"r52\", \"33\": \"r52\", \"34\": \"r52\", \"35\": \"r52\", \"36\": \"r52\", \"37\": \"r52\", \"38\": \"r52\", \"39\": \"r52\", \"40\": \"r52\", \"41\": \"r52\", \"42\": \"r52\", \"43\": \"r52\", \"44\": \"r52\", \"45\": \"r52\", \"46\": \"r52\", \"47\": \"r52\", \"48\": \"r52\", \"49\": \"r52\", \"50\": \"r52\", \"51\": \"r52\", \"52\": \"r52\", \"53\": \"r52\", \"54\": \"r52\", \"55\": \"r52\", \"57\": \"r52\" }, { \"56\": \"r57\" }, { \"10\": 70, \"21\": 77, \"22\": 69, \"24\": \"s28\", \"28\": \"s71\", \"35\": \"s29\", \"36\": \"s30\", \"37\": \"s31\", \"38\": \"s32\", \"39\": \"s33\", \"40\": \"s34\", \"41\": \"s35\", \"42\": \"s36\", \"43\": \"s37\", \"44\": \"s38\", \"45\": \"s39\", \"56\": \"r62\", \"58\": \"s68\" }, { \"56\": \"r59\" }, { \"10\": 70, \"20\": 79, \"21\": 75, \"22\": 76, \"24\": \"s28\", \"28\": \"s71\", \"35\": \"s29\", \"36\": \"s30\", \"37\": \"s31\", \"38\": \"s32\", \"39\": \"s33\", \"40\": \"s34\", \"41\": \"s35\", \"42\": \"s36\", \"43\": \"s37\", \"44\": \"s38\", \"45\": \"s39\", \"56\": \"r63\", \"58\": \"s80\" }, { \"10\": 70, \"18\": 78, \"19\": 66, \"21\": 67, \"22\": 69, \"24\": \"s28\", \"28\": \"s71\", \"35\": \"s29\", \"36\": \"s30\", \"37\": \"s31\", \"38\": \"s32\", \"39\": \"s33\", \"40\": \"s34\", \"41\": \"s35\", \"42\": \"s36\", \"43\": \"s37\", \"44\": \"s38\", \"45\": \"s39\", \"56\": \"r54\", \"58\": \"s68\" }, { \"56\": \"r58\" }, { \"56\": \"r60\" }, { \"10\": 70, \"21\": 81, \"22\": 69, \"24\": \"s28\", \"28\": \"s71\", \"35\": \"s29\", \"36\": \"s30\", \"37\": \"s31\", \"38\": \"s32\", \"39\": \"s33\", \"40\": \"s34\", \"41\": \"s35\", \"42\": \"s36\", \"43\": \"s37\", \"44\": \"s38\", \"45\": \"s39\", \"56\": \"r62\", \"58\": \"s68\" }, { \"10\": 70, \"18\": 82, \"19\": 66, \"21\": 67, \"22\": 69, \"24\": \"s28\", \"28\": \"s71\", \"35\": \"s29\", \"36\": \"s30\", \"37\": \"s31\", \"38\": \"s32\", \"39\": \"s33\", \"40\": \"s34\", \"41\": \"s35\", \"42\": \"s36\", \"43\": \"s37\", \"44\": \"s38\", \"45\": \"s39\", \"56\": \"r54\", \"58\": \"s68\" }, { \"56\": \"r61\" }, { \"56\": \"s84\" }, { \"23\": \"r53\", \"24\": \"r53\", \"25\": \"r53\", \"26\": \"r53\", \"27\": \"r53\", \"28\": \"r53\", \"29\": \"r53\", \"30\": \"r53\", \"31\": \"r53\", \"32\": \"r53\", \"33\": \"r53\", \"34\": \"r53\", \"35\": \"r53\", \"36\": \"r53\", \"37\": \"r53\", \"38\": \"r53\", \"39\": \"r53\", \"40\": \"r53\", \"41\": \"r53\", \"42\": \"r53\", \"43\": \"r53\", \"44\": \"r53\", \"45\": \"r53\", \"46\": \"r53\", \"47\": \"r53\", \"48\": \"r53\", \"49\": \"r53\", \"50\": \"r53\", \"51\": \"r53\", \"52\": \"r53\", \"53\": \"r53\", \"54\": \"r53\", \"55\": \"r53\", \"57\": \"r53\" }, { \"25\": \"s12\", \"31\": \"s86\" }, { \"23\": \"r49\", \"24\": \"r49\", \"25\": \"r49\", \"26\": \"r49\", \"27\": \"r49\", \"28\": \"r49\", \"29\": \"r49\", \"30\": \"r49\", \"31\": \"r49\", \"32\": \"r49\", \"33\": \"r49\", \"34\": \"r49\", \"35\": \"r49\", \"36\": \"r49\", \"37\": \"r49\", \"38\": \"r49\", \"39\": \"r49\", \"40\": \"r49\", \"41\": \"r49\", \"42\": \"r49\", \"43\": \"r49\", \"44\": \"r49\", \"45\": \"r49\", \"46\": \"r49\", \"47\": \"r49\", \"48\": \"r49\", \"49\": \"r49\", \"50\": \"r49\", \"51\": \"r49\", \"52\": \"r49\", \"53\": \"r49\", \"54\": \"r49\", \"55\": \"r49\", \"57\": \"r49\" }, { \"25\": \"s12\", \"31\": \"s88\" }, { \"23\": \"r50\", \"24\": \"r50\", \"25\": \"r50\", \"26\": \"r50\", \"27\": \"r50\", \"28\": \"r50\", \"29\": \"r50\", \"30\": \"r50\", \"31\": \"r50\", \"32\": \"r50\", \"33\": \"r50\", \"34\": \"r50\", \"35\": \"r50\", \"36\": \"r50\", \"37\": \"r50\", \"38\": \"r50\", \"39\": \"r50\", \"40\": \"r50\", \"41\": \"r50\", \"42\": \"r50\", \"43\": \"r50\", \"44\": \"r50\", \"45\": \"r50\", \"46\": \"r50\", \"47\": \"r50\", \"48\": \"r50\", \"49\": \"r50\", \"50\": \"r50\", \"51\": \"r50\", \"52\": \"r50\", \"53\": \"r50\", \"54\": \"r50\", \"55\": \"r50\", \"57\": \"r50\" }, { \"25\": \"s12\", \"31\": \"s90\" }, { \"23\": \"r51\", \"24\": \"r51\", \"25\": \"r51\", \"26\": \"r51\", \"27\": \"r51\", \"28\": \"r51\", \"29\": \"r51\", \"30\": \"r51\", \"31\": \"r51\", \"32\": \"r51\", \"33\": \"r51\", \"34\": \"r51\", \"35\": \"r51\", \"36\": \"r51\", \"37\": \"r51\", \"38\": \"r51\", \"39\": \"r51\", \"40\": \"r51\", \"41\": \"r51\", \"42\": \"r51\", \"43\": \"r51\", \"44\": \"r51\", \"45\": \"r51\", \"46\": \"r51\", \"47\": \"r51\", \"48\": \"r51\", \"49\": \"r51\", \"50\": \"r51\", \"51\": \"r51\", \"52\": \"r51\", \"53\": \"r51\", \"54\": \"r51\", \"55\": \"r51\", \"57\": \"r51\" }];\n\n/**\n * Parsing stack.\n */\nvar stack = [];\n\n/**\n * Tokenizer instance.\n */\nvar tokenizer = void 0;\n/**\n * Generic tokenizer used by the parser in the Syntax tool.\n *\n * https://www.npmjs.com/package/syntax-cli\n *\n * See `--custom-tokinzer` to skip this generation, and use a custom one.\n */\n\nvar lexRules = [[/^#[^\\n]+/, function () {/* skip comments */}], [/^\\s+/, function () {/* skip whitespace */}], [/^-/, function () {\n  return 'DASH';\n}], [/^\\//, function () {\n  return 'CHAR';\n}], [/^#/, function () {\n  return 'CHAR';\n}], [/^\\|/, function () {\n  return 'CHAR';\n}], [/^\\./, function () {\n  return 'CHAR';\n}], [/^\\{/, function () {\n  return 'CHAR';\n}], [/^\\{\\d+\\}/, function () {\n  return 'RANGE_EXACT';\n}], [/^\\{\\d+,\\}/, function () {\n  return 'RANGE_OPEN';\n}], [/^\\{\\d+,\\d+\\}/, function () {\n  return 'RANGE_CLOSED';\n}], [/^\\\\k<(([\\u0041-\\u005a\\u0061-\\u007a\\u00aa\\u00b5\\u00ba\\u00c0-\\u00d6\\u00d8-\\u00f6\\u00f8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376-\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e-\\u066f\\u0671-\\u06d3\\u06d5\\u06e5-\\u06e6\\u06ee-\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4-\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc-\\u09dd\\u09df-\\u09e1\\u09f0-\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0-\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c-\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60-\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0-\\u0ce1\\u0cf1-\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32-\\u0e33\\u0e40-\\u0e46\\u0e81-\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2-\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065-\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae-\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5-\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a-\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7c6\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd-\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5-\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab67\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]|\\ud800[\\udc00-\\udc0b\\udc0d-\\udc26\\udc28-\\udc3a\\udc3c-\\udc3d\\udc3f-\\udc4d\\udc50-\\udc5d\\udc80-\\udcfa\\udd40-\\udd74\\ude80-\\ude9c\\udea0-\\uded0\\udf00-\\udf1f\\udf2d-\\udf4a\\udf50-\\udf75\\udf80-\\udf9d\\udfa0-\\udfc3\\udfc8-\\udfcf\\udfd1-\\udfd5]|\\ud801[\\udc00-\\udc9d\\udcb0-\\udcd3\\udcd8-\\udcfb\\udd00-\\udd27\\udd30-\\udd63\\ude00-\\udf36\\udf40-\\udf55\\udf60-\\udf67]|\\ud802[\\udc00-\\udc05\\udc08\\udc0a-\\udc35\\udc37-\\udc38\\udc3c\\udc3f-\\udc55\\udc60-\\udc76\\udc80-\\udc9e\\udce0-\\udcf2\\udcf4-\\udcf5\\udd00-\\udd15\\udd20-\\udd39\\udd80-\\uddb7\\uddbe-\\uddbf\\ude00\\ude10-\\ude13\\ude15-\\ude17\\ude19-\\ude35\\ude60-\\ude7c\\ude80-\\ude9c\\udec0-\\udec7\\udec9-\\udee4\\udf00-\\udf35\\udf40-\\udf55\\udf60-\\udf72\\udf80-\\udf91]|\\ud803[\\udc00-\\udc48\\udc80-\\udcb2\\udcc0-\\udcf2\\udd00-\\udd23\\udf00-\\udf1c\\udf27\\udf30-\\udf45\\udfe0-\\udff6]|\\ud804[\\udc03-\\udc37\\udc83-\\udcaf\\udcd0-\\udce8\\udd03-\\udd26\\udd44\\udd50-\\udd72\\udd76\\udd83-\\uddb2\\uddc1-\\uddc4\\uddda\\udddc\\ude00-\\ude11\\ude13-\\ude2b\\ude80-\\ude86\\ude88\\ude8a-\\ude8d\\ude8f-\\ude9d\\ude9f-\\udea8\\udeb0-\\udede\\udf05-\\udf0c\\udf0f-\\udf10\\udf13-\\udf28\\udf2a-\\udf30\\udf32-\\udf33\\udf35-\\udf39\\udf3d\\udf50\\udf5d-\\udf61]|\\ud805[\\udc00-\\udc34\\udc47-\\udc4a\\udc5f\\udc80-\\udcaf\\udcc4-\\udcc5\\udcc7\\udd80-\\uddae\\uddd8-\\udddb\\ude00-\\ude2f\\ude44\\ude80-\\udeaa\\udeb8\\udf00-\\udf1a]|\\ud806[\\udc00-\\udc2b\\udca0-\\udcdf\\udcff\\udda0-\\udda7\\uddaa-\\uddd0\\udde1\\udde3\\ude00\\ude0b-\\ude32\\ude3a\\ude50\\ude5c-\\ude89\\ude9d\\udec0-\\udef8]|\\ud807[\\udc00-\\udc08\\udc0a-\\udc2e\\udc40\\udc72-\\udc8f\\udd00-\\udd06\\udd08-\\udd09\\udd0b-\\udd30\\udd46\\udd60-\\udd65\\udd67-\\udd68\\udd6a-\\udd89\\udd98\\udee0-\\udef2]|\\ud808[\\udc00-\\udf99]|\\ud809[\\udc00-\\udc6e\\udc80-\\udd43]|\\ud80c[\\udc00-\\udfff]|\\ud80d[\\udc00-\\udc2e]|\\ud811[\\udc00-\\ude46]|\\ud81a[\\udc00-\\ude38\\ude40-\\ude5e\\uded0-\\udeed\\udf00-\\udf2f\\udf40-\\udf43\\udf63-\\udf77\\udf7d-\\udf8f]|\\ud81b[\\ude40-\\ude7f\\udf00-\\udf4a\\udf50\\udf93-\\udf9f\\udfe0-\\udfe1\\udfe3]|\\ud81c[\\udc00-\\udfff]|\\ud81d[\\udc00-\\udfff]|\\ud81e[\\udc00-\\udfff]|\\ud81f[\\udc00-\\udfff]|\\ud820[\\udc00-\\udfff]|\\ud821[\\udc00-\\udff7]|\\ud822[\\udc00-\\udef2]|\\ud82c[\\udc00-\\udd1e\\udd50-\\udd52\\udd64-\\udd67\\udd70-\\udefb]|\\ud82f[\\udc00-\\udc6a\\udc70-\\udc7c\\udc80-\\udc88\\udc90-\\udc99]|\\ud835[\\udc00-\\udc54\\udc56-\\udc9c\\udc9e-\\udc9f\\udca2\\udca5-\\udca6\\udca9-\\udcac\\udcae-\\udcb9\\udcbb\\udcbd-\\udcc3\\udcc5-\\udd05\\udd07-\\udd0a\\udd0d-\\udd14\\udd16-\\udd1c\\udd1e-\\udd39\\udd3b-\\udd3e\\udd40-\\udd44\\udd46\\udd4a-\\udd50\\udd52-\\udea5\\udea8-\\udec0\\udec2-\\udeda\\udedc-\\udefa\\udefc-\\udf14\\udf16-\\udf34\\udf36-\\udf4e\\udf50-\\udf6e\\udf70-\\udf88\\udf8a-\\udfa8\\udfaa-\\udfc2\\udfc4-\\udfcb]|\\ud838[\\udd00-\\udd2c\\udd37-\\udd3d\\udd4e\\udec0-\\udeeb]|\\ud83a[\\udc00-\\udcc4\\udd00-\\udd43\\udd4b]|\\ud83b[\\ude00-\\ude03\\ude05-\\ude1f\\ude21-\\ude22\\ude24\\ude27\\ude29-\\ude32\\ude34-\\ude37\\ude39\\ude3b\\ude42\\ude47\\ude49\\ude4b\\ude4d-\\ude4f\\ude51-\\ude52\\ude54\\ude57\\ude59\\ude5b\\ude5d\\ude5f\\ude61-\\ude62\\ude64\\ude67-\\ude6a\\ude6c-\\ude72\\ude74-\\ude77\\ude79-\\ude7c\\ude7e\\ude80-\\ude89\\ude8b-\\ude9b\\udea1-\\udea3\\udea5-\\udea9\\udeab-\\udebb]|\\ud840[\\udc00-\\udfff]|\\ud841[\\udc00-\\udfff]|\\ud842[\\udc00-\\udfff]|\\ud843[\\udc00-\\udfff]|\\ud844[\\udc00-\\udfff]|\\ud845[\\udc00-\\udfff]|\\ud846[\\udc00-\\udfff]|\\ud847[\\udc00-\\udfff]|\\ud848[\\udc00-\\udfff]|\\ud849[\\udc00-\\udfff]|\\ud84a[\\udc00-\\udfff]|\\ud84b[\\udc00-\\udfff]|\\ud84c[\\udc00-\\udfff]|\\ud84d[\\udc00-\\udfff]|\\ud84e[\\udc00-\\udfff]|\\ud84f[\\udc00-\\udfff]|\\ud850[\\udc00-\\udfff]|\\ud851[\\udc00-\\udfff]|\\ud852[\\udc00-\\udfff]|\\ud853[\\udc00-\\udfff]|\\ud854[\\udc00-\\udfff]|\\ud855[\\udc00-\\udfff]|\\ud856[\\udc00-\\udfff]|\\ud857[\\udc00-\\udfff]|\\ud858[\\udc00-\\udfff]|\\ud859[\\udc00-\\udfff]|\\ud85a[\\udc00-\\udfff]|\\ud85b[\\udc00-\\udfff]|\\ud85c[\\udc00-\\udfff]|\\ud85d[\\udc00-\\udfff]|\\ud85e[\\udc00-\\udfff]|\\ud85f[\\udc00-\\udfff]|\\ud860[\\udc00-\\udfff]|\\ud861[\\udc00-\\udfff]|\\ud862[\\udc00-\\udfff]|\\ud863[\\udc00-\\udfff]|\\ud864[\\udc00-\\udfff]|\\ud865[\\udc00-\\udfff]|\\ud866[\\udc00-\\udfff]|\\ud867[\\udc00-\\udfff]|\\ud868[\\udc00-\\udfff]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|\\ud86a[\\udc00-\\udfff]|\\ud86b[\\udc00-\\udfff]|\\ud86c[\\udc00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d\\udc20-\\udfff]|\\ud86f[\\udc00-\\udfff]|\\ud870[\\udc00-\\udfff]|\\ud871[\\udc00-\\udfff]|\\ud872[\\udc00-\\udfff]|\\ud873[\\udc00-\\udea1\\udeb0-\\udfff]|\\ud874[\\udc00-\\udfff]|\\ud875[\\udc00-\\udfff]|\\ud876[\\udc00-\\udfff]|\\ud877[\\udc00-\\udfff]|\\ud878[\\udc00-\\udfff]|\\ud879[\\udc00-\\udfff]|\\ud87a[\\udc00-\\udfe0]|\\ud87e[\\udc00-\\ude1d])|[$_]|(\\\\u[0-9a-fA-F]{4}|\\\\u\\{[0-9a-fA-F]{1,}\\}))(([\\u0030-\\u0039\\u0041-\\u005a\\u005f\\u0061-\\u007a\\u00aa\\u00b5\\u00b7\\u00ba\\u00c0-\\u00d6\\u00d8-\\u00f6\\u00f8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0300-\\u0374\\u0376-\\u0377\\u037a-\\u037d\\u037f\\u0386-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u0483-\\u0487\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u0591-\\u05bd\\u05bf\\u05c1-\\u05c2\\u05c4-\\u05c5\\u05c7\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0610-\\u061a\\u0620-\\u0669\\u066e-\\u06d3\\u06d5-\\u06dc\\u06df-\\u06e8\\u06ea-\\u06fc\\u06ff\\u0710-\\u074a\\u074d-\\u07b1\\u07c0-\\u07f5\\u07fa\\u07fd\\u0800-\\u082d\\u0840-\\u085b\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u08d3-\\u08e1\\u08e3-\\u0963\\u0966-\\u096f\\u0971-\\u0983\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bc-\\u09c4\\u09c7-\\u09c8\\u09cb-\\u09ce\\u09d7\\u09dc-\\u09dd\\u09df-\\u09e3\\u09e6-\\u09f1\\u09fc\\u09fe\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a3c\\u0a3e-\\u0a42\\u0a47-\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a66-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abc-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ad0\\u0ae0-\\u0ae3\\u0ae6-\\u0aef\\u0af9-\\u0aff\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3c-\\u0b44\\u0b47-\\u0b48\\u0b4b-\\u0b4d\\u0b56-\\u0b57\\u0b5c-\\u0b5d\\u0b5f-\\u0b63\\u0b66-\\u0b6f\\u0b71\\u0b82-\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd0\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55-\\u0c56\\u0c58-\\u0c5a\\u0c60-\\u0c63\\u0c66-\\u0c6f\\u0c80-\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbc-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5-\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0ce6-\\u0cef\\u0cf1-\\u0cf2\\u0d00-\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4e\\u0d54-\\u0d57\\u0d5f-\\u0d63\\u0d66-\\u0d6f\\u0d7a-\\u0d7f\\u0d82-\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2-\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e4e\\u0e50-\\u0e59\\u0e81-\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0edc-\\u0edf\\u0f00\\u0f18-\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f84\\u0f86-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1049\\u1050-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135d-\\u135f\\u1369-\\u1371\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772-\\u1773\\u1780-\\u17d3\\u17d7\\u17dc-\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u19d0-\\u19da\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1aa7\\u1ab0-\\u1abd\\u1b00-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1bf3\\u1c00-\\u1c37\\u1c40-\\u1c49\\u1c4d-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1cd0-\\u1cd2\\u1cd4-\\u1cfa\\u1d00-\\u1df9\\u1dfb-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u203f-\\u2040\\u2054\\u2071\\u207f\\u2090-\\u209c\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d7f-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u3005-\\u3007\\u3021-\\u302f\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u3099-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua62b\\ua640-\\ua66f\\ua674-\\ua67d\\ua67f-\\ua6f1\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7c6\\ua7f7-\\ua827\\ua840-\\ua873\\ua880-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f7\\ua8fb\\ua8fd-\\ua92d\\ua930-\\ua953\\ua960-\\ua97c\\ua980-\\ua9c0\\ua9cf-\\ua9d9\\ua9e0-\\ua9fe\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa50-\\uaa59\\uaa60-\\uaa76\\uaa7a-\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf6\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab67\\uab70-\\uabea\\uabec-\\uabed\\uabf0-\\uabf9\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33-\\ufe34\\ufe4d-\\ufe4f\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff10-\\uff19\\uff21-\\uff3a\\uff3f\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]|\\ud800[\\udc00-\\udc0b\\udc0d-\\udc26\\udc28-\\udc3a\\udc3c-\\udc3d\\udc3f-\\udc4d\\udc50-\\udc5d\\udc80-\\udcfa\\udd40-\\udd74\\uddfd\\ude80-\\ude9c\\udea0-\\uded0\\udee0\\udf00-\\udf1f\\udf2d-\\udf4a\\udf50-\\udf7a\\udf80-\\udf9d\\udfa0-\\udfc3\\udfc8-\\udfcf\\udfd1-\\udfd5]|\\ud801[\\udc00-\\udc9d\\udca0-\\udca9\\udcb0-\\udcd3\\udcd8-\\udcfb\\udd00-\\udd27\\udd30-\\udd63\\ude00-\\udf36\\udf40-\\udf55\\udf60-\\udf67]|\\ud802[\\udc00-\\udc05\\udc08\\udc0a-\\udc35\\udc37-\\udc38\\udc3c\\udc3f-\\udc55\\udc60-\\udc76\\udc80-\\udc9e\\udce0-\\udcf2\\udcf4-\\udcf5\\udd00-\\udd15\\udd20-\\udd39\\udd80-\\uddb7\\uddbe-\\uddbf\\ude00-\\ude03\\ude05-\\ude06\\ude0c-\\ude13\\ude15-\\ude17\\ude19-\\ude35\\ude38-\\ude3a\\ude3f\\ude60-\\ude7c\\ude80-\\ude9c\\udec0-\\udec7\\udec9-\\udee6\\udf00-\\udf35\\udf40-\\udf55\\udf60-\\udf72\\udf80-\\udf91]|\\ud803[\\udc00-\\udc48\\udc80-\\udcb2\\udcc0-\\udcf2\\udd00-\\udd27\\udd30-\\udd39\\udf00-\\udf1c\\udf27\\udf30-\\udf50\\udfe0-\\udff6]|\\ud804[\\udc00-\\udc46\\udc66-\\udc6f\\udc7f-\\udcba\\udcd0-\\udce8\\udcf0-\\udcf9\\udd00-\\udd34\\udd36-\\udd3f\\udd44-\\udd46\\udd50-\\udd73\\udd76\\udd80-\\uddc4\\uddc9-\\uddcc\\uddd0-\\uddda\\udddc\\ude00-\\ude11\\ude13-\\ude37\\ude3e\\ude80-\\ude86\\ude88\\ude8a-\\ude8d\\ude8f-\\ude9d\\ude9f-\\udea8\\udeb0-\\udeea\\udef0-\\udef9\\udf00-\\udf03\\udf05-\\udf0c\\udf0f-\\udf10\\udf13-\\udf28\\udf2a-\\udf30\\udf32-\\udf33\\udf35-\\udf39\\udf3b-\\udf44\\udf47-\\udf48\\udf4b-\\udf4d\\udf50\\udf57\\udf5d-\\udf63\\udf66-\\udf6c\\udf70-\\udf74]|\\ud805[\\udc00-\\udc4a\\udc50-\\udc59\\udc5e-\\udc5f\\udc80-\\udcc5\\udcc7\\udcd0-\\udcd9\\udd80-\\uddb5\\uddb8-\\uddc0\\uddd8-\\udddd\\ude00-\\ude40\\ude44\\ude50-\\ude59\\ude80-\\udeb8\\udec0-\\udec9\\udf00-\\udf1a\\udf1d-\\udf2b\\udf30-\\udf39]|\\ud806[\\udc00-\\udc3a\\udca0-\\udce9\\udcff\\udda0-\\udda7\\uddaa-\\uddd7\\uddda-\\udde1\\udde3-\\udde4\\ude00-\\ude3e\\ude47\\ude50-\\ude99\\ude9d\\udec0-\\udef8]|\\ud807[\\udc00-\\udc08\\udc0a-\\udc36\\udc38-\\udc40\\udc50-\\udc59\\udc72-\\udc8f\\udc92-\\udca7\\udca9-\\udcb6\\udd00-\\udd06\\udd08-\\udd09\\udd0b-\\udd36\\udd3a\\udd3c-\\udd3d\\udd3f-\\udd47\\udd50-\\udd59\\udd60-\\udd65\\udd67-\\udd68\\udd6a-\\udd8e\\udd90-\\udd91\\udd93-\\udd98\\udda0-\\udda9\\udee0-\\udef6]|\\ud808[\\udc00-\\udf99]|\\ud809[\\udc00-\\udc6e\\udc80-\\udd43]|\\ud80c[\\udc00-\\udfff]|\\ud80d[\\udc00-\\udc2e]|\\ud811[\\udc00-\\ude46]|\\ud81a[\\udc00-\\ude38\\ude40-\\ude5e\\ude60-\\ude69\\uded0-\\udeed\\udef0-\\udef4\\udf00-\\udf36\\udf40-\\udf43\\udf50-\\udf59\\udf63-\\udf77\\udf7d-\\udf8f]|\\ud81b[\\ude40-\\ude7f\\udf00-\\udf4a\\udf4f-\\udf87\\udf8f-\\udf9f\\udfe0-\\udfe1\\udfe3]|\\ud81c[\\udc00-\\udfff]|\\ud81d[\\udc00-\\udfff]|\\ud81e[\\udc00-\\udfff]|\\ud81f[\\udc00-\\udfff]|\\ud820[\\udc00-\\udfff]|\\ud821[\\udc00-\\udff7]|\\ud822[\\udc00-\\udef2]|\\ud82c[\\udc00-\\udd1e\\udd50-\\udd52\\udd64-\\udd67\\udd70-\\udefb]|\\ud82f[\\udc00-\\udc6a\\udc70-\\udc7c\\udc80-\\udc88\\udc90-\\udc99\\udc9d-\\udc9e]|\\ud834[\\udd65-\\udd69\\udd6d-\\udd72\\udd7b-\\udd82\\udd85-\\udd8b\\uddaa-\\uddad\\ude42-\\ude44]|\\ud835[\\udc00-\\udc54\\udc56-\\udc9c\\udc9e-\\udc9f\\udca2\\udca5-\\udca6\\udca9-\\udcac\\udcae-\\udcb9\\udcbb\\udcbd-\\udcc3\\udcc5-\\udd05\\udd07-\\udd0a\\udd0d-\\udd14\\udd16-\\udd1c\\udd1e-\\udd39\\udd3b-\\udd3e\\udd40-\\udd44\\udd46\\udd4a-\\udd50\\udd52-\\udea5\\udea8-\\udec0\\udec2-\\udeda\\udedc-\\udefa\\udefc-\\udf14\\udf16-\\udf34\\udf36-\\udf4e\\udf50-\\udf6e\\udf70-\\udf88\\udf8a-\\udfa8\\udfaa-\\udfc2\\udfc4-\\udfcb\\udfce-\\udfff]|\\ud836[\\ude00-\\ude36\\ude3b-\\ude6c\\ude75\\ude84\\ude9b-\\ude9f\\udea1-\\udeaf]|\\ud838[\\udc00-\\udc06\\udc08-\\udc18\\udc1b-\\udc21\\udc23-\\udc24\\udc26-\\udc2a\\udd00-\\udd2c\\udd30-\\udd3d\\udd40-\\udd49\\udd4e\\udec0-\\udef9]|\\ud83a[\\udc00-\\udcc4\\udcd0-\\udcd6\\udd00-\\udd4b\\udd50-\\udd59]|\\ud83b[\\ude00-\\ude03\\ude05-\\ude1f\\ude21-\\ude22\\ude24\\ude27\\ude29-\\ude32\\ude34-\\ude37\\ude39\\ude3b\\ude42\\ude47\\ude49\\ude4b\\ude4d-\\ude4f\\ude51-\\ude52\\ude54\\ude57\\ude59\\ude5b\\ude5d\\ude5f\\ude61-\\ude62\\ude64\\ude67-\\ude6a\\ude6c-\\ude72\\ude74-\\ude77\\ude79-\\ude7c\\ude7e\\ude80-\\ude89\\ude8b-\\ude9b\\udea1-\\udea3\\udea5-\\udea9\\udeab-\\udebb]|\\ud840[\\udc00-\\udfff]|\\ud841[\\udc00-\\udfff]|\\ud842[\\udc00-\\udfff]|\\ud843[\\udc00-\\udfff]|\\ud844[\\udc00-\\udfff]|\\ud845[\\udc00-\\udfff]|\\ud846[\\udc00-\\udfff]|\\ud847[\\udc00-\\udfff]|\\ud848[\\udc00-\\udfff]|\\ud849[\\udc00-\\udfff]|\\ud84a[\\udc00-\\udfff]|\\ud84b[\\udc00-\\udfff]|\\ud84c[\\udc00-\\udfff]|\\ud84d[\\udc00-\\udfff]|\\ud84e[\\udc00-\\udfff]|\\ud84f[\\udc00-\\udfff]|\\ud850[\\udc00-\\udfff]|\\ud851[\\udc00-\\udfff]|\\ud852[\\udc00-\\udfff]|\\ud853[\\udc00-\\udfff]|\\ud854[\\udc00-\\udfff]|\\ud855[\\udc00-\\udfff]|\\ud856[\\udc00-\\udfff]|\\ud857[\\udc00-\\udfff]|\\ud858[\\udc00-\\udfff]|\\ud859[\\udc00-\\udfff]|\\ud85a[\\udc00-\\udfff]|\\ud85b[\\udc00-\\udfff]|\\ud85c[\\udc00-\\udfff]|\\ud85d[\\udc00-\\udfff]|\\ud85e[\\udc00-\\udfff]|\\ud85f[\\udc00-\\udfff]|\\ud860[\\udc00-\\udfff]|\\ud861[\\udc00-\\udfff]|\\ud862[\\udc00-\\udfff]|\\ud863[\\udc00-\\udfff]|\\ud864[\\udc00-\\udfff]|\\ud865[\\udc00-\\udfff]|\\ud866[\\udc00-\\udfff]|\\ud867[\\udc00-\\udfff]|\\ud868[\\udc00-\\udfff]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|\\ud86a[\\udc00-\\udfff]|\\ud86b[\\udc00-\\udfff]|\\ud86c[\\udc00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d\\udc20-\\udfff]|\\ud86f[\\udc00-\\udfff]|\\ud870[\\udc00-\\udfff]|\\ud871[\\udc00-\\udfff]|\\ud872[\\udc00-\\udfff]|\\ud873[\\udc00-\\udea1\\udeb0-\\udfff]|\\ud874[\\udc00-\\udfff]|\\ud875[\\udc00-\\udfff]|\\ud876[\\udc00-\\udfff]|\\ud877[\\udc00-\\udfff]|\\ud878[\\udc00-\\udfff]|\\ud879[\\udc00-\\udfff]|\\ud87a[\\udc00-\\udfe0]|\\ud87e[\\udc00-\\ude1d]|\\udb40[\\udd00-\\uddef])|[$_]|(\\\\u[0-9a-fA-F]{4}|\\\\u\\{[0-9a-fA-F]{1,}\\})|[\\u200c\\u200d])*>/, function () {\n  var groupName = yytext.slice(3, -1);\n  validateUnicodeGroupName(groupName, this.getCurrentState());\n  return 'NAMED_GROUP_REF';\n}], [/^\\\\b/, function () {\n  return 'ESC_b';\n}], [/^\\\\B/, function () {\n  return 'ESC_B';\n}], [/^\\\\c[a-zA-Z]/, function () {\n  return 'CTRL_CH';\n}], [/^\\\\0\\d{1,2}/, function () {\n  return 'OCT_CODE';\n}], [/^\\\\0/, function () {\n  return 'DEC_CODE';\n}], [/^\\\\\\d{1,3}/, function () {\n  return 'DEC_CODE';\n}], [/^\\\\u[dD][89abAB][0-9a-fA-F]{2}\\\\u[dD][c-fC-F][0-9a-fA-F]{2}/, function () {\n  return 'U_CODE_SURROGATE';\n}], [/^\\\\u\\{[0-9a-fA-F]{1,}\\}/, function () {\n  return 'U_CODE';\n}], [/^\\\\u[0-9a-fA-F]{4}/, function () {\n  return 'U_CODE';\n}], [/^\\\\[pP]\\{\\w+(?:=\\w+)?\\}/, function () {\n  return 'U_PROP_VALUE_EXP';\n}], [/^\\\\x[0-9a-fA-F]{2}/, function () {\n  return 'HEX_CODE';\n}], [/^\\\\[tnrdDsSwWvf]/, function () {\n  return 'META_CHAR';\n}], [/^\\\\\\//, function () {\n  return 'ESC_CHAR';\n}], [/^\\\\[ #]/, function () {\n  return 'ESC_CHAR';\n}], [/^\\\\[\\^\\$\\.\\*\\+\\?\\(\\)\\\\\\[\\]\\{\\}\\|\\/]/, function () {\n  return 'ESC_CHAR';\n}], [/^\\\\[^*?+\\[()\\\\|]/, function () {\n  var s = this.getCurrentState();\n  if (s === 'u_class' && yytext === \"\\\\-\") {\n    return 'ESC_CHAR';\n  } else if (s === 'u' || s === 'xu' || s === 'u_class') {\n    throw new SyntaxError('invalid Unicode escape ' + yytext);\n  }\n  return 'ESC_CHAR';\n}], [/^\\(/, function () {\n  return 'CHAR';\n}], [/^\\)/, function () {\n  return 'CHAR';\n}], [/^\\(\\?=/, function () {\n  return 'POS_LA_ASSERT';\n}], [/^\\(\\?!/, function () {\n  return 'NEG_LA_ASSERT';\n}], [/^\\(\\?<=/, function () {\n  return 'POS_LB_ASSERT';\n}], [/^\\(\\?<!/, function () {\n  return 'NEG_LB_ASSERT';\n}], [/^\\(\\?:/, function () {\n  return 'NON_CAPTURE_GROUP';\n}], [/^\\(\\?<(([\\u0041-\\u005a\\u0061-\\u007a\\u00aa\\u00b5\\u00ba\\u00c0-\\u00d6\\u00d8-\\u00f6\\u00f8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376-\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e-\\u066f\\u0671-\\u06d3\\u06d5\\u06e5-\\u06e6\\u06ee-\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4-\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc-\\u09dd\\u09df-\\u09e1\\u09f0-\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0-\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c-\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60-\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0-\\u0ce1\\u0cf1-\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32-\\u0e33\\u0e40-\\u0e46\\u0e81-\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2-\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065-\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae-\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5-\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a-\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7c6\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd-\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5-\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab67\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]|\\ud800[\\udc00-\\udc0b\\udc0d-\\udc26\\udc28-\\udc3a\\udc3c-\\udc3d\\udc3f-\\udc4d\\udc50-\\udc5d\\udc80-\\udcfa\\udd40-\\udd74\\ude80-\\ude9c\\udea0-\\uded0\\udf00-\\udf1f\\udf2d-\\udf4a\\udf50-\\udf75\\udf80-\\udf9d\\udfa0-\\udfc3\\udfc8-\\udfcf\\udfd1-\\udfd5]|\\ud801[\\udc00-\\udc9d\\udcb0-\\udcd3\\udcd8-\\udcfb\\udd00-\\udd27\\udd30-\\udd63\\ude00-\\udf36\\udf40-\\udf55\\udf60-\\udf67]|\\ud802[\\udc00-\\udc05\\udc08\\udc0a-\\udc35\\udc37-\\udc38\\udc3c\\udc3f-\\udc55\\udc60-\\udc76\\udc80-\\udc9e\\udce0-\\udcf2\\udcf4-\\udcf5\\udd00-\\udd15\\udd20-\\udd39\\udd80-\\uddb7\\uddbe-\\uddbf\\ude00\\ude10-\\ude13\\ude15-\\ude17\\ude19-\\ude35\\ude60-\\ude7c\\ude80-\\ude9c\\udec0-\\udec7\\udec9-\\udee4\\udf00-\\udf35\\udf40-\\udf55\\udf60-\\udf72\\udf80-\\udf91]|\\ud803[\\udc00-\\udc48\\udc80-\\udcb2\\udcc0-\\udcf2\\udd00-\\udd23\\udf00-\\udf1c\\udf27\\udf30-\\udf45\\udfe0-\\udff6]|\\ud804[\\udc03-\\udc37\\udc83-\\udcaf\\udcd0-\\udce8\\udd03-\\udd26\\udd44\\udd50-\\udd72\\udd76\\udd83-\\uddb2\\uddc1-\\uddc4\\uddda\\udddc\\ude00-\\ude11\\ude13-\\ude2b\\ude80-\\ude86\\ude88\\ude8a-\\ude8d\\ude8f-\\ude9d\\ude9f-\\udea8\\udeb0-\\udede\\udf05-\\udf0c\\udf0f-\\udf10\\udf13-\\udf28\\udf2a-\\udf30\\udf32-\\udf33\\udf35-\\udf39\\udf3d\\udf50\\udf5d-\\udf61]|\\ud805[\\udc00-\\udc34\\udc47-\\udc4a\\udc5f\\udc80-\\udcaf\\udcc4-\\udcc5\\udcc7\\udd80-\\uddae\\uddd8-\\udddb\\ude00-\\ude2f\\ude44\\ude80-\\udeaa\\udeb8\\udf00-\\udf1a]|\\ud806[\\udc00-\\udc2b\\udca0-\\udcdf\\udcff\\udda0-\\udda7\\uddaa-\\uddd0\\udde1\\udde3\\ude00\\ude0b-\\ude32\\ude3a\\ude50\\ude5c-\\ude89\\ude9d\\udec0-\\udef8]|\\ud807[\\udc00-\\udc08\\udc0a-\\udc2e\\udc40\\udc72-\\udc8f\\udd00-\\udd06\\udd08-\\udd09\\udd0b-\\udd30\\udd46\\udd60-\\udd65\\udd67-\\udd68\\udd6a-\\udd89\\udd98\\udee0-\\udef2]|\\ud808[\\udc00-\\udf99]|\\ud809[\\udc00-\\udc6e\\udc80-\\udd43]|\\ud80c[\\udc00-\\udfff]|\\ud80d[\\udc00-\\udc2e]|\\ud811[\\udc00-\\ude46]|\\ud81a[\\udc00-\\ude38\\ude40-\\ude5e\\uded0-\\udeed\\udf00-\\udf2f\\udf40-\\udf43\\udf63-\\udf77\\udf7d-\\udf8f]|\\ud81b[\\ude40-\\ude7f\\udf00-\\udf4a\\udf50\\udf93-\\udf9f\\udfe0-\\udfe1\\udfe3]|\\ud81c[\\udc00-\\udfff]|\\ud81d[\\udc00-\\udfff]|\\ud81e[\\udc00-\\udfff]|\\ud81f[\\udc00-\\udfff]|\\ud820[\\udc00-\\udfff]|\\ud821[\\udc00-\\udff7]|\\ud822[\\udc00-\\udef2]|\\ud82c[\\udc00-\\udd1e\\udd50-\\udd52\\udd64-\\udd67\\udd70-\\udefb]|\\ud82f[\\udc00-\\udc6a\\udc70-\\udc7c\\udc80-\\udc88\\udc90-\\udc99]|\\ud835[\\udc00-\\udc54\\udc56-\\udc9c\\udc9e-\\udc9f\\udca2\\udca5-\\udca6\\udca9-\\udcac\\udcae-\\udcb9\\udcbb\\udcbd-\\udcc3\\udcc5-\\udd05\\udd07-\\udd0a\\udd0d-\\udd14\\udd16-\\udd1c\\udd1e-\\udd39\\udd3b-\\udd3e\\udd40-\\udd44\\udd46\\udd4a-\\udd50\\udd52-\\udea5\\udea8-\\udec0\\udec2-\\udeda\\udedc-\\udefa\\udefc-\\udf14\\udf16-\\udf34\\udf36-\\udf4e\\udf50-\\udf6e\\udf70-\\udf88\\udf8a-\\udfa8\\udfaa-\\udfc2\\udfc4-\\udfcb]|\\ud838[\\udd00-\\udd2c\\udd37-\\udd3d\\udd4e\\udec0-\\udeeb]|\\ud83a[\\udc00-\\udcc4\\udd00-\\udd43\\udd4b]|\\ud83b[\\ude00-\\ude03\\ude05-\\ude1f\\ude21-\\ude22\\ude24\\ude27\\ude29-\\ude32\\ude34-\\ude37\\ude39\\ude3b\\ude42\\ude47\\ude49\\ude4b\\ude4d-\\ude4f\\ude51-\\ude52\\ude54\\ude57\\ude59\\ude5b\\ude5d\\ude5f\\ude61-\\ude62\\ude64\\ude67-\\ude6a\\ude6c-\\ude72\\ude74-\\ude77\\ude79-\\ude7c\\ude7e\\ude80-\\ude89\\ude8b-\\ude9b\\udea1-\\udea3\\udea5-\\udea9\\udeab-\\udebb]|\\ud840[\\udc00-\\udfff]|\\ud841[\\udc00-\\udfff]|\\ud842[\\udc00-\\udfff]|\\ud843[\\udc00-\\udfff]|\\ud844[\\udc00-\\udfff]|\\ud845[\\udc00-\\udfff]|\\ud846[\\udc00-\\udfff]|\\ud847[\\udc00-\\udfff]|\\ud848[\\udc00-\\udfff]|\\ud849[\\udc00-\\udfff]|\\ud84a[\\udc00-\\udfff]|\\ud84b[\\udc00-\\udfff]|\\ud84c[\\udc00-\\udfff]|\\ud84d[\\udc00-\\udfff]|\\ud84e[\\udc00-\\udfff]|\\ud84f[\\udc00-\\udfff]|\\ud850[\\udc00-\\udfff]|\\ud851[\\udc00-\\udfff]|\\ud852[\\udc00-\\udfff]|\\ud853[\\udc00-\\udfff]|\\ud854[\\udc00-\\udfff]|\\ud855[\\udc00-\\udfff]|\\ud856[\\udc00-\\udfff]|\\ud857[\\udc00-\\udfff]|\\ud858[\\udc00-\\udfff]|\\ud859[\\udc00-\\udfff]|\\ud85a[\\udc00-\\udfff]|\\ud85b[\\udc00-\\udfff]|\\ud85c[\\udc00-\\udfff]|\\ud85d[\\udc00-\\udfff]|\\ud85e[\\udc00-\\udfff]|\\ud85f[\\udc00-\\udfff]|\\ud860[\\udc00-\\udfff]|\\ud861[\\udc00-\\udfff]|\\ud862[\\udc00-\\udfff]|\\ud863[\\udc00-\\udfff]|\\ud864[\\udc00-\\udfff]|\\ud865[\\udc00-\\udfff]|\\ud866[\\udc00-\\udfff]|\\ud867[\\udc00-\\udfff]|\\ud868[\\udc00-\\udfff]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|\\ud86a[\\udc00-\\udfff]|\\ud86b[\\udc00-\\udfff]|\\ud86c[\\udc00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d\\udc20-\\udfff]|\\ud86f[\\udc00-\\udfff]|\\ud870[\\udc00-\\udfff]|\\ud871[\\udc00-\\udfff]|\\ud872[\\udc00-\\udfff]|\\ud873[\\udc00-\\udea1\\udeb0-\\udfff]|\\ud874[\\udc00-\\udfff]|\\ud875[\\udc00-\\udfff]|\\ud876[\\udc00-\\udfff]|\\ud877[\\udc00-\\udfff]|\\ud878[\\udc00-\\udfff]|\\ud879[\\udc00-\\udfff]|\\ud87a[\\udc00-\\udfe0]|\\ud87e[\\udc00-\\ude1d])|[$_]|(\\\\u[0-9a-fA-F]{4}|\\\\u\\{[0-9a-fA-F]{1,}\\}))(([\\u0030-\\u0039\\u0041-\\u005a\\u005f\\u0061-\\u007a\\u00aa\\u00b5\\u00b7\\u00ba\\u00c0-\\u00d6\\u00d8-\\u00f6\\u00f8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0300-\\u0374\\u0376-\\u0377\\u037a-\\u037d\\u037f\\u0386-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u0483-\\u0487\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u0591-\\u05bd\\u05bf\\u05c1-\\u05c2\\u05c4-\\u05c5\\u05c7\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0610-\\u061a\\u0620-\\u0669\\u066e-\\u06d3\\u06d5-\\u06dc\\u06df-\\u06e8\\u06ea-\\u06fc\\u06ff\\u0710-\\u074a\\u074d-\\u07b1\\u07c0-\\u07f5\\u07fa\\u07fd\\u0800-\\u082d\\u0840-\\u085b\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u08d3-\\u08e1\\u08e3-\\u0963\\u0966-\\u096f\\u0971-\\u0983\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bc-\\u09c4\\u09c7-\\u09c8\\u09cb-\\u09ce\\u09d7\\u09dc-\\u09dd\\u09df-\\u09e3\\u09e6-\\u09f1\\u09fc\\u09fe\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a3c\\u0a3e-\\u0a42\\u0a47-\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a66-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abc-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ad0\\u0ae0-\\u0ae3\\u0ae6-\\u0aef\\u0af9-\\u0aff\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3c-\\u0b44\\u0b47-\\u0b48\\u0b4b-\\u0b4d\\u0b56-\\u0b57\\u0b5c-\\u0b5d\\u0b5f-\\u0b63\\u0b66-\\u0b6f\\u0b71\\u0b82-\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd0\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55-\\u0c56\\u0c58-\\u0c5a\\u0c60-\\u0c63\\u0c66-\\u0c6f\\u0c80-\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbc-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5-\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0ce6-\\u0cef\\u0cf1-\\u0cf2\\u0d00-\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4e\\u0d54-\\u0d57\\u0d5f-\\u0d63\\u0d66-\\u0d6f\\u0d7a-\\u0d7f\\u0d82-\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2-\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e4e\\u0e50-\\u0e59\\u0e81-\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0edc-\\u0edf\\u0f00\\u0f18-\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f84\\u0f86-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1049\\u1050-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135d-\\u135f\\u1369-\\u1371\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772-\\u1773\\u1780-\\u17d3\\u17d7\\u17dc-\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u19d0-\\u19da\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1aa7\\u1ab0-\\u1abd\\u1b00-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1bf3\\u1c00-\\u1c37\\u1c40-\\u1c49\\u1c4d-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1cd0-\\u1cd2\\u1cd4-\\u1cfa\\u1d00-\\u1df9\\u1dfb-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u203f-\\u2040\\u2054\\u2071\\u207f\\u2090-\\u209c\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d7f-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u3005-\\u3007\\u3021-\\u302f\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u3099-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua62b\\ua640-\\ua66f\\ua674-\\ua67d\\ua67f-\\ua6f1\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7c6\\ua7f7-\\ua827\\ua840-\\ua873\\ua880-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f7\\ua8fb\\ua8fd-\\ua92d\\ua930-\\ua953\\ua960-\\ua97c\\ua980-\\ua9c0\\ua9cf-\\ua9d9\\ua9e0-\\ua9fe\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa50-\\uaa59\\uaa60-\\uaa76\\uaa7a-\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf6\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab67\\uab70-\\uabea\\uabec-\\uabed\\uabf0-\\uabf9\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33-\\ufe34\\ufe4d-\\ufe4f\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff10-\\uff19\\uff21-\\uff3a\\uff3f\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]|\\ud800[\\udc00-\\udc0b\\udc0d-\\udc26\\udc28-\\udc3a\\udc3c-\\udc3d\\udc3f-\\udc4d\\udc50-\\udc5d\\udc80-\\udcfa\\udd40-\\udd74\\uddfd\\ude80-\\ude9c\\udea0-\\uded0\\udee0\\udf00-\\udf1f\\udf2d-\\udf4a\\udf50-\\udf7a\\udf80-\\udf9d\\udfa0-\\udfc3\\udfc8-\\udfcf\\udfd1-\\udfd5]|\\ud801[\\udc00-\\udc9d\\udca0-\\udca9\\udcb0-\\udcd3\\udcd8-\\udcfb\\udd00-\\udd27\\udd30-\\udd63\\ude00-\\udf36\\udf40-\\udf55\\udf60-\\udf67]|\\ud802[\\udc00-\\udc05\\udc08\\udc0a-\\udc35\\udc37-\\udc38\\udc3c\\udc3f-\\udc55\\udc60-\\udc76\\udc80-\\udc9e\\udce0-\\udcf2\\udcf4-\\udcf5\\udd00-\\udd15\\udd20-\\udd39\\udd80-\\uddb7\\uddbe-\\uddbf\\ude00-\\ude03\\ude05-\\ude06\\ude0c-\\ude13\\ude15-\\ude17\\ude19-\\ude35\\ude38-\\ude3a\\ude3f\\ude60-\\ude7c\\ude80-\\ude9c\\udec0-\\udec7\\udec9-\\udee6\\udf00-\\udf35\\udf40-\\udf55\\udf60-\\udf72\\udf80-\\udf91]|\\ud803[\\udc00-\\udc48\\udc80-\\udcb2\\udcc0-\\udcf2\\udd00-\\udd27\\udd30-\\udd39\\udf00-\\udf1c\\udf27\\udf30-\\udf50\\udfe0-\\udff6]|\\ud804[\\udc00-\\udc46\\udc66-\\udc6f\\udc7f-\\udcba\\udcd0-\\udce8\\udcf0-\\udcf9\\udd00-\\udd34\\udd36-\\udd3f\\udd44-\\udd46\\udd50-\\udd73\\udd76\\udd80-\\uddc4\\uddc9-\\uddcc\\uddd0-\\uddda\\udddc\\ude00-\\ude11\\ude13-\\ude37\\ude3e\\ude80-\\ude86\\ude88\\ude8a-\\ude8d\\ude8f-\\ude9d\\ude9f-\\udea8\\udeb0-\\udeea\\udef0-\\udef9\\udf00-\\udf03\\udf05-\\udf0c\\udf0f-\\udf10\\udf13-\\udf28\\udf2a-\\udf30\\udf32-\\udf33\\udf35-\\udf39\\udf3b-\\udf44\\udf47-\\udf48\\udf4b-\\udf4d\\udf50\\udf57\\udf5d-\\udf63\\udf66-\\udf6c\\udf70-\\udf74]|\\ud805[\\udc00-\\udc4a\\udc50-\\udc59\\udc5e-\\udc5f\\udc80-\\udcc5\\udcc7\\udcd0-\\udcd9\\udd80-\\uddb5\\uddb8-\\uddc0\\uddd8-\\udddd\\ude00-\\ude40\\ude44\\ude50-\\ude59\\ude80-\\udeb8\\udec0-\\udec9\\udf00-\\udf1a\\udf1d-\\udf2b\\udf30-\\udf39]|\\ud806[\\udc00-\\udc3a\\udca0-\\udce9\\udcff\\udda0-\\udda7\\uddaa-\\uddd7\\uddda-\\udde1\\udde3-\\udde4\\ude00-\\ude3e\\ude47\\ude50-\\ude99\\ude9d\\udec0-\\udef8]|\\ud807[\\udc00-\\udc08\\udc0a-\\udc36\\udc38-\\udc40\\udc50-\\udc59\\udc72-\\udc8f\\udc92-\\udca7\\udca9-\\udcb6\\udd00-\\udd06\\udd08-\\udd09\\udd0b-\\udd36\\udd3a\\udd3c-\\udd3d\\udd3f-\\udd47\\udd50-\\udd59\\udd60-\\udd65\\udd67-\\udd68\\udd6a-\\udd8e\\udd90-\\udd91\\udd93-\\udd98\\udda0-\\udda9\\udee0-\\udef6]|\\ud808[\\udc00-\\udf99]|\\ud809[\\udc00-\\udc6e\\udc80-\\udd43]|\\ud80c[\\udc00-\\udfff]|\\ud80d[\\udc00-\\udc2e]|\\ud811[\\udc00-\\ude46]|\\ud81a[\\udc00-\\ude38\\ude40-\\ude5e\\ude60-\\ude69\\uded0-\\udeed\\udef0-\\udef4\\udf00-\\udf36\\udf40-\\udf43\\udf50-\\udf59\\udf63-\\udf77\\udf7d-\\udf8f]|\\ud81b[\\ude40-\\ude7f\\udf00-\\udf4a\\udf4f-\\udf87\\udf8f-\\udf9f\\udfe0-\\udfe1\\udfe3]|\\ud81c[\\udc00-\\udfff]|\\ud81d[\\udc00-\\udfff]|\\ud81e[\\udc00-\\udfff]|\\ud81f[\\udc00-\\udfff]|\\ud820[\\udc00-\\udfff]|\\ud821[\\udc00-\\udff7]|\\ud822[\\udc00-\\udef2]|\\ud82c[\\udc00-\\udd1e\\udd50-\\udd52\\udd64-\\udd67\\udd70-\\udefb]|\\ud82f[\\udc00-\\udc6a\\udc70-\\udc7c\\udc80-\\udc88\\udc90-\\udc99\\udc9d-\\udc9e]|\\ud834[\\udd65-\\udd69\\udd6d-\\udd72\\udd7b-\\udd82\\udd85-\\udd8b\\uddaa-\\uddad\\ude42-\\ude44]|\\ud835[\\udc00-\\udc54\\udc56-\\udc9c\\udc9e-\\udc9f\\udca2\\udca5-\\udca6\\udca9-\\udcac\\udcae-\\udcb9\\udcbb\\udcbd-\\udcc3\\udcc5-\\udd05\\udd07-\\udd0a\\udd0d-\\udd14\\udd16-\\udd1c\\udd1e-\\udd39\\udd3b-\\udd3e\\udd40-\\udd44\\udd46\\udd4a-\\udd50\\udd52-\\udea5\\udea8-\\udec0\\udec2-\\udeda\\udedc-\\udefa\\udefc-\\udf14\\udf16-\\udf34\\udf36-\\udf4e\\udf50-\\udf6e\\udf70-\\udf88\\udf8a-\\udfa8\\udfaa-\\udfc2\\udfc4-\\udfcb\\udfce-\\udfff]|\\ud836[\\ude00-\\ude36\\ude3b-\\ude6c\\ude75\\ude84\\ude9b-\\ude9f\\udea1-\\udeaf]|\\ud838[\\udc00-\\udc06\\udc08-\\udc18\\udc1b-\\udc21\\udc23-\\udc24\\udc26-\\udc2a\\udd00-\\udd2c\\udd30-\\udd3d\\udd40-\\udd49\\udd4e\\udec0-\\udef9]|\\ud83a[\\udc00-\\udcc4\\udcd0-\\udcd6\\udd00-\\udd4b\\udd50-\\udd59]|\\ud83b[\\ude00-\\ude03\\ude05-\\ude1f\\ude21-\\ude22\\ude24\\ude27\\ude29-\\ude32\\ude34-\\ude37\\ude39\\ude3b\\ude42\\ude47\\ude49\\ude4b\\ude4d-\\ude4f\\ude51-\\ude52\\ude54\\ude57\\ude59\\ude5b\\ude5d\\ude5f\\ude61-\\ude62\\ude64\\ude67-\\ude6a\\ude6c-\\ude72\\ude74-\\ude77\\ude79-\\ude7c\\ude7e\\ude80-\\ude89\\ude8b-\\ude9b\\udea1-\\udea3\\udea5-\\udea9\\udeab-\\udebb]|\\ud840[\\udc00-\\udfff]|\\ud841[\\udc00-\\udfff]|\\ud842[\\udc00-\\udfff]|\\ud843[\\udc00-\\udfff]|\\ud844[\\udc00-\\udfff]|\\ud845[\\udc00-\\udfff]|\\ud846[\\udc00-\\udfff]|\\ud847[\\udc00-\\udfff]|\\ud848[\\udc00-\\udfff]|\\ud849[\\udc00-\\udfff]|\\ud84a[\\udc00-\\udfff]|\\ud84b[\\udc00-\\udfff]|\\ud84c[\\udc00-\\udfff]|\\ud84d[\\udc00-\\udfff]|\\ud84e[\\udc00-\\udfff]|\\ud84f[\\udc00-\\udfff]|\\ud850[\\udc00-\\udfff]|\\ud851[\\udc00-\\udfff]|\\ud852[\\udc00-\\udfff]|\\ud853[\\udc00-\\udfff]|\\ud854[\\udc00-\\udfff]|\\ud855[\\udc00-\\udfff]|\\ud856[\\udc00-\\udfff]|\\ud857[\\udc00-\\udfff]|\\ud858[\\udc00-\\udfff]|\\ud859[\\udc00-\\udfff]|\\ud85a[\\udc00-\\udfff]|\\ud85b[\\udc00-\\udfff]|\\ud85c[\\udc00-\\udfff]|\\ud85d[\\udc00-\\udfff]|\\ud85e[\\udc00-\\udfff]|\\ud85f[\\udc00-\\udfff]|\\ud860[\\udc00-\\udfff]|\\ud861[\\udc00-\\udfff]|\\ud862[\\udc00-\\udfff]|\\ud863[\\udc00-\\udfff]|\\ud864[\\udc00-\\udfff]|\\ud865[\\udc00-\\udfff]|\\ud866[\\udc00-\\udfff]|\\ud867[\\udc00-\\udfff]|\\ud868[\\udc00-\\udfff]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|\\ud86a[\\udc00-\\udfff]|\\ud86b[\\udc00-\\udfff]|\\ud86c[\\udc00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d\\udc20-\\udfff]|\\ud86f[\\udc00-\\udfff]|\\ud870[\\udc00-\\udfff]|\\ud871[\\udc00-\\udfff]|\\ud872[\\udc00-\\udfff]|\\ud873[\\udc00-\\udea1\\udeb0-\\udfff]|\\ud874[\\udc00-\\udfff]|\\ud875[\\udc00-\\udfff]|\\ud876[\\udc00-\\udfff]|\\ud877[\\udc00-\\udfff]|\\ud878[\\udc00-\\udfff]|\\ud879[\\udc00-\\udfff]|\\ud87a[\\udc00-\\udfe0]|\\ud87e[\\udc00-\\ude1d]|\\udb40[\\udd00-\\uddef])|[$_]|(\\\\u[0-9a-fA-F]{4}|\\\\u\\{[0-9a-fA-F]{1,}\\})|[\\u200c\\u200d])*>/, function () {\n  yytext = yytext.slice(3, -1);\n  validateUnicodeGroupName(yytext, this.getCurrentState());\n  return 'NAMED_CAPTURE_GROUP';\n}], [/^\\(/, function () {\n  return 'L_PAREN';\n}], [/^\\)/, function () {\n  return 'R_PAREN';\n}], [/^[*?+[^$]/, function () {\n  return 'CHAR';\n}], [/^\\\\\\]/, function () {\n  return 'ESC_CHAR';\n}], [/^\\]/, function () {\n  this.popState();return 'R_BRACKET';\n}], [/^\\^/, function () {\n  return 'BOS';\n}], [/^\\$/, function () {\n  return 'EOS';\n}], [/^\\*/, function () {\n  return 'STAR';\n}], [/^\\?/, function () {\n  return 'Q_MARK';\n}], [/^\\+/, function () {\n  return 'PLUS';\n}], [/^\\|/, function () {\n  return 'BAR';\n}], [/^\\./, function () {\n  return 'ANY';\n}], [/^\\//, function () {\n  return 'SLASH';\n}], [/^[^*?+\\[()\\\\|]/, function () {\n  return 'CHAR';\n}], [/^\\[\\^/, function () {\n  var s = this.getCurrentState();this.pushState(s === 'u' || s === 'xu' ? 'u_class' : 'class');return 'NEG_CLASS';\n}], [/^\\[/, function () {\n  var s = this.getCurrentState();this.pushState(s === 'u' || s === 'xu' ? 'u_class' : 'class');return 'L_BRACKET';\n}]];\nvar lexRulesByConditions = { \"INITIAL\": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 22, 23, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], \"u\": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], \"xu\": [0, 1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], \"x\": [0, 1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 22, 23, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], \"u_class\": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], \"class\": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51] };\n\nvar EOF_TOKEN = {\n  type: EOF,\n  value: ''\n};\n\ntokenizer = {\n  initString: function initString(string) {\n    this._string = string;\n    this._cursor = 0;\n\n    this._states = ['INITIAL'];\n    this._tokensQueue = [];\n\n    this._currentLine = 1;\n    this._currentColumn = 0;\n    this._currentLineBeginOffset = 0;\n\n    /**\n     * Matched token location data.\n     */\n    this._tokenStartOffset = 0;\n    this._tokenEndOffset = 0;\n    this._tokenStartLine = 1;\n    this._tokenEndLine = 1;\n    this._tokenStartColumn = 0;\n    this._tokenEndColumn = 0;\n\n    return this;\n  },\n\n\n  /**\n   * Returns tokenizer states.\n   */\n  getStates: function getStates() {\n    return this._states;\n  },\n  getCurrentState: function getCurrentState() {\n    return this._states[this._states.length - 1];\n  },\n  pushState: function pushState(state) {\n    this._states.push(state);\n  },\n  begin: function begin(state) {\n    this.pushState(state);\n  },\n  popState: function popState() {\n    if (this._states.length > 1) {\n      return this._states.pop();\n    }\n    return this._states[0];\n  },\n  getNextToken: function getNextToken() {\n    // Something was queued, return it.\n    if (this._tokensQueue.length > 0) {\n      return this.onToken(this._toToken(this._tokensQueue.shift()));\n    }\n\n    if (!this.hasMoreTokens()) {\n      return this.onToken(EOF_TOKEN);\n    }\n\n    var string = this._string.slice(this._cursor);\n    var lexRulesForState = lexRulesByConditions[this.getCurrentState()];\n\n    for (var i = 0; i < lexRulesForState.length; i++) {\n      var lexRuleIndex = lexRulesForState[i];\n      var lexRule = lexRules[lexRuleIndex];\n\n      var matched = this._match(string, lexRule[0]);\n\n      // Manual handling of EOF token (the end of string). Return it\n      // as `EOF` symbol.\n      if (string === '' && matched === '') {\n        this._cursor++;\n      }\n\n      if (matched !== null) {\n        yytext = matched;\n        yyleng = yytext.length;\n        var token = lexRule[1].call(this);\n\n        if (!token) {\n          return this.getNextToken();\n        }\n\n        // If multiple tokens are returned, save them to return\n        // on next `getNextToken` call.\n\n        if (Array.isArray(token)) {\n          var tokensToQueue = token.slice(1);\n          token = token[0];\n          if (tokensToQueue.length > 0) {\n            var _tokensQueue;\n\n            (_tokensQueue = this._tokensQueue).unshift.apply(_tokensQueue, _toConsumableArray(tokensToQueue));\n          }\n        }\n\n        return this.onToken(this._toToken(token, yytext));\n      }\n    }\n\n    if (this.isEOF()) {\n      this._cursor++;\n      return EOF_TOKEN;\n    }\n\n    this.throwUnexpectedToken(string[0], this._currentLine, this._currentColumn);\n  },\n\n\n  /**\n   * Throws default \"Unexpected token\" exception, showing the actual\n   * line from the source, pointing with the ^ marker to the bad token.\n   * In addition, shows `line:column` location.\n   */\n  throwUnexpectedToken: function throwUnexpectedToken(symbol, line, column) {\n    var lineSource = this._string.split('\\n')[line - 1];\n    var lineData = '';\n\n    if (lineSource) {\n      var pad = ' '.repeat(column);\n      lineData = '\\n\\n' + lineSource + '\\n' + pad + '^\\n';\n    }\n\n    throw new SyntaxError(lineData + 'Unexpected token: \"' + symbol + '\" ' + ('at ' + line + ':' + column + '.'));\n  },\n  getCursor: function getCursor() {\n    return this._cursor;\n  },\n  getCurrentLine: function getCurrentLine() {\n    return this._currentLine;\n  },\n  getCurrentColumn: function getCurrentColumn() {\n    return this._currentColumn;\n  },\n  _captureLocation: function _captureLocation(matched) {\n    var nlRe = /\\n/g;\n\n    // Absolute offsets.\n    this._tokenStartOffset = this._cursor;\n\n    // Line-based locations, start.\n    this._tokenStartLine = this._currentLine;\n    this._tokenStartColumn = this._tokenStartOffset - this._currentLineBeginOffset;\n\n    // Extract `\\n` in the matched token.\n    var nlMatch = void 0;\n    while ((nlMatch = nlRe.exec(matched)) !== null) {\n      this._currentLine++;\n      this._currentLineBeginOffset = this._tokenStartOffset + nlMatch.index + 1;\n    }\n\n    this._tokenEndOffset = this._cursor + matched.length;\n\n    // Line-based locations, end.\n    this._tokenEndLine = this._currentLine;\n    this._tokenEndColumn = this._currentColumn = this._tokenEndOffset - this._currentLineBeginOffset;\n  },\n  _toToken: function _toToken(tokenType) {\n    var yytext = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n    return {\n      // Basic data.\n      type: tokenType,\n      value: yytext,\n\n      // Location data.\n      startOffset: this._tokenStartOffset,\n      endOffset: this._tokenEndOffset,\n      startLine: this._tokenStartLine,\n      endLine: this._tokenEndLine,\n      startColumn: this._tokenStartColumn,\n      endColumn: this._tokenEndColumn\n    };\n  },\n  isEOF: function isEOF() {\n    return this._cursor === this._string.length;\n  },\n  hasMoreTokens: function hasMoreTokens() {\n    return this._cursor <= this._string.length;\n  },\n  _match: function _match(string, regexp) {\n    var matched = string.match(regexp);\n    if (matched) {\n      // Handle `\\n` in the matched token to track line numbers.\n      this._captureLocation(matched[0]);\n      this._cursor += matched[0].length;\n      return matched[0];\n    }\n    return null;\n  },\n\n\n  /**\n   * Allows analyzing, and transforming token. Default implementation\n   * just passes the token through.\n   */\n  onToken: function onToken(token) {\n    return token;\n  }\n};\n\n/**\n * Expose tokenizer so it can be accessed in semantic actions.\n */\nyy.lexer = tokenizer;\nyy.tokenizer = tokenizer;\n\n/**\n * Global parsing options. Some options can be shadowed per\n * each `parse` call, if the optations are passed.\n *\n * Initalized to the `captureLocations` which is passed\n * from the generator. Other options can be added at runtime.\n */\nyy.options = {\n  captureLocations: true\n};\n\n/**\n * Parsing module.\n */\nvar yyparse = {\n  /**\n   * Sets global parsing options.\n   */\n  setOptions: function setOptions(options) {\n    yy.options = options;\n    return this;\n  },\n\n\n  /**\n   * Returns parsing options.\n   */\n  getOptions: function getOptions() {\n    return yy.options;\n  },\n\n\n  /**\n   * Parses a string.\n   */\n  parse: function parse(string, parseOptions) {\n    if (!tokenizer) {\n      throw new Error('Tokenizer instance wasn\\'t specified.');\n    }\n\n    tokenizer.initString(string);\n\n    /**\n     * If parse options are passed, override global parse options for\n     * this call, and later restore global options.\n     */\n    var globalOptions = yy.options;\n    if (parseOptions) {\n      yy.options = Object.assign({}, yy.options, parseOptions);\n    }\n\n    /**\n     * Allow callers to do setup work based on the\n     * parsing string, and passed options.\n     */\n    yyparse.onParseBegin(string, tokenizer, yy.options);\n\n    stack.length = 0;\n    stack.push(0);\n\n    var token = tokenizer.getNextToken();\n    var shiftedToken = null;\n\n    do {\n      if (!token) {\n        // Restore options.\n        yy.options = globalOptions;\n        unexpectedEndOfInput();\n      }\n\n      var state = stack[stack.length - 1];\n      var column = tokens[token.type];\n\n      if (!table[state].hasOwnProperty(column)) {\n        yy.options = globalOptions;\n        unexpectedToken(token);\n      }\n\n      var entry = table[state][column];\n\n      // Shift action.\n      if (entry[0] === 's') {\n        var _loc2 = null;\n\n        if (yy.options.captureLocations) {\n          _loc2 = {\n            startOffset: token.startOffset,\n            endOffset: token.endOffset,\n            startLine: token.startLine,\n            endLine: token.endLine,\n            startColumn: token.startColumn,\n            endColumn: token.endColumn\n          };\n        }\n\n        shiftedToken = this.onShift(token);\n\n        stack.push({ symbol: tokens[shiftedToken.type], semanticValue: shiftedToken.value, loc: _loc2 }, Number(entry.slice(1)));\n\n        token = tokenizer.getNextToken();\n      }\n\n      // Reduce action.\n      else if (entry[0] === 'r') {\n          var productionNumber = entry.slice(1);\n          var production = productions[productionNumber];\n          var hasSemanticAction = typeof production[2] === 'function';\n          var semanticValueArgs = hasSemanticAction ? [] : null;\n\n          var locationArgs = hasSemanticAction && yy.options.captureLocations ? [] : null;\n\n          if (production[1] !== 0) {\n            var rhsLength = production[1];\n            while (rhsLength-- > 0) {\n              stack.pop();\n              var stackEntry = stack.pop();\n\n              if (hasSemanticAction) {\n                semanticValueArgs.unshift(stackEntry.semanticValue);\n\n                if (locationArgs) {\n                  locationArgs.unshift(stackEntry.loc);\n                }\n              }\n            }\n          }\n\n          var reduceStackEntry = { symbol: production[0] };\n\n          if (hasSemanticAction) {\n            yytext = shiftedToken ? shiftedToken.value : null;\n            yyleng = shiftedToken ? shiftedToken.value.length : null;\n\n            var semanticActionArgs = locationArgs !== null ? semanticValueArgs.concat(locationArgs) : semanticValueArgs;\n\n            production[2].apply(production, _toConsumableArray(semanticActionArgs));\n\n            reduceStackEntry.semanticValue = __;\n\n            if (locationArgs) {\n              reduceStackEntry.loc = __loc;\n            }\n          }\n\n          var nextState = stack[stack.length - 1];\n          var symbolToReduceWith = production[0];\n\n          stack.push(reduceStackEntry, table[nextState][symbolToReduceWith]);\n        }\n\n        // Accept.\n        else if (entry === 'acc') {\n            stack.pop();\n            var parsed = stack.pop();\n\n            if (stack.length !== 1 || stack[0] !== 0 || tokenizer.hasMoreTokens()) {\n              // Restore options.\n              yy.options = globalOptions;\n              unexpectedToken(token);\n            }\n\n            if (parsed.hasOwnProperty('semanticValue')) {\n              yy.options = globalOptions;\n              yyparse.onParseEnd(parsed.semanticValue);\n              return parsed.semanticValue;\n            }\n\n            yyparse.onParseEnd();\n\n            // Restore options.\n            yy.options = globalOptions;\n            return true;\n          }\n    } while (tokenizer.hasMoreTokens() || stack.length > 1);\n  },\n  setTokenizer: function setTokenizer(customTokenizer) {\n    tokenizer = customTokenizer;\n    return yyparse;\n  },\n  getTokenizer: function getTokenizer() {\n    return tokenizer;\n  },\n  onParseBegin: function onParseBegin(string, tokenizer, options) {},\n  onParseEnd: function onParseEnd(parsed) {},\n\n\n  /**\n   * Allows analyzing, and transforming shifted token. Default implementation\n   * just passes the token through.\n   */\n  onShift: function onShift(token) {\n    return token;\n  }\n};\n\n/**\n * Tracks capturing groups.\n */\nvar capturingGroupsCount = 0;\n\n/**\n * Tracks named groups.\n */\nvar namedGroups = {};\n\n/**\n * Parsing string.\n */\nvar parsingString = '';\n\nyyparse.onParseBegin = function (string, lexer) {\n  parsingString = string;\n  capturingGroupsCount = 0;\n  namedGroups = {};\n\n  var lastSlash = string.lastIndexOf('/');\n  var flags = string.slice(lastSlash);\n\n  if (flags.includes('x') && flags.includes('u')) {\n    lexer.pushState('xu');\n  } else {\n    if (flags.includes('x')) {\n      lexer.pushState('x');\n    }\n    if (flags.includes('u')) {\n      lexer.pushState('u');\n    }\n  }\n};\n\n/**\n * On shifting `(` remember its number to used on reduce.\n */\nyyparse.onShift = function (token) {\n  if (token.type === 'L_PAREN' || token.type === 'NAMED_CAPTURE_GROUP') {\n    token.value = new String(token.value);\n    token.value.groupNumber = ++capturingGroupsCount;\n  }\n  return token;\n};\n\n/**\n * Extracts ranges from the range string.\n */\nfunction getRange(text) {\n  var range = text.match(/\\d+/g).map(Number);\n\n  if (Number.isFinite(range[1]) && range[1] < range[0]) {\n    throw new SyntaxError('Numbers out of order in ' + text + ' quantifier');\n  }\n\n  return range;\n}\n\n/**\n * Checks class range\n */\nfunction checkClassRange(from, to) {\n  if (from.kind === 'control' || to.kind === 'control' || !isNaN(from.codePoint) && !isNaN(to.codePoint) && from.codePoint > to.codePoint) {\n    throw new SyntaxError('Range ' + from.value + '-' + to.value + ' out of order in character class');\n  }\n}\n\n// ---------------------- Unicode property -------------------------------------------\n\nvar unicodeProperties = require('../unicode/parser-unicode-properties.js');\n\n/**\n * Unicode property.\n */\nfunction UnicodeProperty(matched, loc) {\n  var negative = matched[1] === 'P';\n  var separatorIdx = matched.indexOf('=');\n\n  var name = matched.slice(3, separatorIdx !== -1 ? separatorIdx : -1);\n  var value = void 0;\n\n  // General_Category allows using only value as a shorthand.\n  var isShorthand = separatorIdx === -1 && unicodeProperties.isGeneralCategoryValue(name);\n\n  // Binary propery name.\n  var isBinaryProperty = separatorIdx === -1 && unicodeProperties.isBinaryPropertyName(name);\n\n  if (isShorthand) {\n    value = name;\n    name = 'General_Category';\n  } else if (isBinaryProperty) {\n    value = name;\n  } else {\n    if (!unicodeProperties.isValidName(name)) {\n      throw new SyntaxError('Invalid unicode property name: ' + name + '.');\n    }\n\n    value = matched.slice(separatorIdx + 1, -1);\n\n    if (!unicodeProperties.isValidValue(name, value)) {\n      throw new SyntaxError('Invalid ' + name + ' unicode property value: ' + value + '.');\n    }\n  }\n\n  return Node({\n    type: 'UnicodeProperty',\n    name: name,\n    value: value,\n    negative: negative,\n    shorthand: isShorthand,\n    binary: isBinaryProperty,\n    canonicalName: unicodeProperties.getCanonicalName(name) || name,\n    canonicalValue: unicodeProperties.getCanonicalValue(value) || value\n  }, loc);\n}\n\n// ----------------------------------------------------------------------------------\n\n\n/**\n * Creates a character node.\n */\nfunction Char(value, kind, loc) {\n  var symbol = void 0;\n  var codePoint = void 0;\n\n  switch (kind) {\n    case 'decimal':\n      {\n        codePoint = Number(value.slice(1));\n        symbol = String.fromCodePoint(codePoint);\n        break;\n      }\n    case 'oct':\n      {\n        codePoint = parseInt(value.slice(1), 8);\n        symbol = String.fromCodePoint(codePoint);\n        break;\n      }\n    case 'hex':\n    case 'unicode':\n      {\n        if (value.lastIndexOf('\\\\u') > 0) {\n          var _value$split$slice = value.split('\\\\u').slice(1),\n              _value$split$slice2 = _slicedToArray(_value$split$slice, 2),\n              lead = _value$split$slice2[0],\n              trail = _value$split$slice2[1];\n\n          lead = parseInt(lead, 16);\n          trail = parseInt(trail, 16);\n          codePoint = (lead - 0xd800) * 0x400 + (trail - 0xdc00) + 0x10000;\n\n          symbol = String.fromCodePoint(codePoint);\n        } else {\n          var hex = value.slice(2).replace('{', '');\n          codePoint = parseInt(hex, 16);\n          if (codePoint > 0x10ffff) {\n            throw new SyntaxError('Bad character escape sequence: ' + value);\n          }\n\n          symbol = String.fromCodePoint(codePoint);\n        }\n        break;\n      }\n    case 'meta':\n      {\n        switch (value) {\n          case '\\\\t':\n            symbol = '\\t';\n            codePoint = symbol.codePointAt(0);\n            break;\n          case '\\\\n':\n            symbol = '\\n';\n            codePoint = symbol.codePointAt(0);\n            break;\n          case '\\\\r':\n            symbol = '\\r';\n            codePoint = symbol.codePointAt(0);\n            break;\n          case '\\\\v':\n            symbol = '\\v';\n            codePoint = symbol.codePointAt(0);\n            break;\n          case '\\\\f':\n            symbol = '\\f';\n            codePoint = symbol.codePointAt(0);\n            break;\n          case '\\\\b':\n            symbol = '\\b';\n            codePoint = symbol.codePointAt(0);\n          case '\\\\0':\n            symbol = '\\0';\n            codePoint = 0;\n          case '.':\n            symbol = '.';\n            codePoint = NaN;\n            break;\n          default:\n            codePoint = NaN;\n        }\n        break;\n      }\n    case 'simple':\n      {\n        symbol = value;\n        codePoint = symbol.codePointAt(0);\n        break;\n      }\n  }\n\n  return Node({\n    type: 'Char',\n    value: value,\n    kind: kind,\n    symbol: symbol,\n    codePoint: codePoint\n  }, loc);\n}\n\n/**\n * Valid flags per current ECMAScript spec and\n * stage 3+ proposals.\n */\nvar validFlags = 'gimsuxy';\n\n/**\n * Checks the flags are valid, and that\n * we don't duplicate flags.\n */\nfunction checkFlags(flags) {\n  var seen = new Set();\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = flags[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var flag = _step.value;\n\n      if (seen.has(flag) || !validFlags.includes(flag)) {\n        throw new SyntaxError('Invalid flags: ' + flags);\n      }\n      seen.add(flag);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return flags.split('').sort().join('');\n}\n\n/**\n * Parses patterns like \\1, \\2, etc. either as a backreference\n * to a group, or a deciaml char code.\n */\nfunction GroupRefOrDecChar(text, textLoc) {\n  var reference = Number(text.slice(1));\n\n  if (reference > 0 && reference <= capturingGroupsCount) {\n    return Node({\n      type: 'Backreference',\n      kind: 'number',\n      number: reference,\n      reference: reference\n    }, textLoc);\n  }\n\n  return Char(text, 'decimal', textLoc);\n}\n\n/**\n * Unicode names.\n */\nvar uReStart = /^\\\\u[0-9a-fA-F]{4}/; // only matches start of string\nvar ucpReStart = /^\\\\u\\{[0-9a-fA-F]{1,}\\}/; // only matches start of string\nvar ucpReAnywhere = /\\\\u\\{[0-9a-fA-F]{1,}\\}/; // matches anywhere in string\n\n/**\n * Validates Unicode group name.\n */\nfunction validateUnicodeGroupName(name, state) {\n  var isUnicodeName = ucpReAnywhere.test(name);\n  var isUnicodeState = state === 'u' || state === 'xu' || state === 'u_class';\n\n  if (isUnicodeName && !isUnicodeState) {\n    throw new SyntaxError('invalid group Unicode name \"' + name + '\", use `u` flag.');\n  }\n\n  return name;\n}\n\n// Matches the following production: https://tc39.es/ecma262/#prod-RegExpUnicodeEscapeSequence\n//\n//  RegExpUnicodeEscapeSequence ::\n//    `u` LeadSurrogate `\\u` TrailSurrogate   # as 'leadSurrogate', 'trailSurrogate'\n//    `u` LeadSurrogate                       # as 'leadSurrogateOnly'\n//    `u` TrailSurrogate                      # as 'trailSurrogateOnly'\n//    `u` NonSurrogate                        # as 'nonSurrogate'\n//    `u` `{` CodePoint `}`                   # as 'codePoint'\n//\n//  LeadSurrogate ::\n//    Hex4Digits but only if the SV of Hex4Digits is in the inclusive range 0xD800 to 0xDBFF        # [dD][89aAbB][0-9a-fA-F]{2}\n//\n//  TrailSurrogate ::\n//    Hex4Digits but only if the SV of Hex4Digits is in the inclusive range 0xDC00 to 0xDFFF        # [dD][c-fC-F][0-9a-fA-F]{2}\n//\n//  NonSurrogate ::\n//    Hex4Digits but only if the SV of Hex4Digits is not in the inclusive range 0xD800 to 0xDFFF    # [0-9a-ce-fA-CE-F][0-9a-fA-F]{3}|[dD][0-7][0-9a-fA-F]{2}\n//\n//  CodePoint ::\n//    HexDigits but only if MV of HexDigits ≤ 0x10FFFF                                              # 0*(?:[0-9a-fA-F]{1,5}|10[0-9a-fA-F]{4})\n//\nvar uidRe = /\\\\u(?:([dD][89aAbB][0-9a-fA-F]{2})\\\\u([dD][c-fC-F][0-9a-fA-F]{2})|([dD][89aAbB][0-9a-fA-F]{2})|([dD][c-fC-F][0-9a-fA-F]{2})|([0-9a-ce-fA-CE-F][0-9a-fA-F]{3}|[dD][0-7][0-9a-fA-F]{2})|\\{(0*(?:[0-9a-fA-F]{1,5}|10[0-9a-fA-F]{4}))\\})/;\n\nfunction decodeUnicodeGroupName(name) {\n  return name.replace(new RegExp(uidRe, 'g'), function (_, leadSurrogate, trailSurrogate, leadSurrogateOnly, trailSurrogateOnly, nonSurrogate, codePoint) {\n    if (leadSurrogate) {\n      return String.fromCodePoint(parseInt(leadSurrogate, 16), parseInt(trailSurrogate, 16));\n    }\n    if (leadSurrogateOnly) {\n      return String.fromCodePoint(parseInt(leadSurrogateOnly, 16));\n    }\n    if (trailSurrogateOnly) {\n      // TODO: Per the spec: https://tc39.es/ecma262/#prod-RegExpUnicodeEscapeSequence\n      // > Each `\\u` TrailSurrogate for which the choice of associated `u` LeadSurrogate is ambiguous shall be associated with the nearest possible `u` LeadSurrogate that would otherwise have no corresponding `\\u` TrailSurrogate.\n      return String.fromCodePoint(parseInt(trailSurrogateOnly, 16));\n    }\n    if (nonSurrogate) {\n      return String.fromCodePoint(parseInt(nonSurrogate, 16));\n    }\n    if (codePoint) {\n      return String.fromCodePoint(parseInt(codePoint, 16));\n    }\n    return _;\n  });\n}\n\n/**\n * Extracts from `\\k<foo>` pattern either a backreference\n * to a named capturing group (if it presents), or parses it\n * as a list of char: `\\k`, `<`, `f`, etc.\n */\nfunction NamedGroupRefOrChars(text, textLoc) {\n  var referenceRaw = text.slice(3, -1);\n  var reference = decodeUnicodeGroupName(referenceRaw);\n\n  if (namedGroups.hasOwnProperty(reference)) {\n    return Node({\n      type: 'Backreference',\n      kind: 'name',\n      number: namedGroups[reference],\n      reference: reference,\n      referenceRaw: referenceRaw\n    }, textLoc);\n  }\n\n  // Else `\\k<foo>` should be parsed as a list of `Char`s.\n  // This is really a 0.01% edge case, but we should handle it.\n\n  var startOffset = null;\n  var startLine = null;\n  var endLine = null;\n  var startColumn = null;\n\n  if (textLoc) {\n    startOffset = textLoc.startOffset;\n    startLine = textLoc.startLine;\n    endLine = textLoc.endLine;\n    startColumn = textLoc.startColumn;\n  }\n\n  var charRe = /^[\\w$<>]/;\n  var loc = void 0;\n\n  var chars = [\n  // Init to first \\k, taking 2 symbols.\n  Char(text.slice(1, 2), 'simple', startOffset ? {\n    startLine: startLine,\n    endLine: endLine,\n    startColumn: startColumn,\n    startOffset: startOffset,\n    endOffset: startOffset += 2,\n    endColumn: startColumn += 2\n  } : null)];\n\n  // For \\k\n  chars[0].escaped = true;\n\n  // Other symbols.\n  text = text.slice(2);\n\n  while (text.length > 0) {\n    var matched = null;\n\n    // Unicode, \\u003B or \\u{003B}\n    if ((matched = text.match(uReStart)) || (matched = text.match(ucpReStart))) {\n      if (startOffset) {\n        loc = {\n          startLine: startLine,\n          endLine: endLine,\n          startColumn: startColumn,\n          startOffset: startOffset,\n          endOffset: startOffset += matched[0].length,\n          endColumn: startColumn += matched[0].length\n        };\n      }\n      chars.push(Char(matched[0], 'unicode', loc));\n      text = text.slice(matched[0].length);\n    }\n\n    // Simple char.\n    else if (matched = text.match(charRe)) {\n        if (startOffset) {\n          loc = {\n            startLine: startLine,\n            endLine: endLine,\n            startColumn: startColumn,\n            startOffset: startOffset,\n            endOffset: ++startOffset,\n            endColumn: ++startColumn\n          };\n        }\n        chars.push(Char(matched[0], 'simple', loc));\n        text = text.slice(1);\n      }\n  }\n\n  return chars;\n}\n\n/**\n * Creates an AST node with a location.\n */\nfunction Node(node, loc) {\n  if (yy.options.captureLocations) {\n    node.loc = {\n      source: parsingString.slice(loc.startOffset, loc.endOffset),\n      start: {\n        line: loc.startLine,\n        column: loc.startColumn,\n        offset: loc.startOffset\n      },\n      end: {\n        line: loc.endLine,\n        column: loc.endColumn,\n        offset: loc.endOffset\n      }\n    };\n  }\n  return node;\n}\n\n/**\n * Creates location node.\n */\nfunction loc(start, end) {\n  if (!yy.options.captureLocations) {\n    return null;\n  }\n\n  return {\n    startOffset: start.startOffset,\n    endOffset: end.endOffset,\n    startLine: start.startLine,\n    endLine: end.endLine,\n    startColumn: start.startColumn,\n    endColumn: end.endColumn\n  };\n}\n\nfunction unexpectedToken(token) {\n  if (token.type === EOF) {\n    unexpectedEndOfInput();\n  }\n\n  tokenizer.throwUnexpectedToken(token.value, token.startLine, token.startColumn);\n}\n\nfunction unexpectedEndOfInput() {\n  parseError('Unexpected end of input.');\n}\n\nfunction parseError(message) {\n  throw new SyntaxError(message);\n}\n\nmodule.exports = yyparse;","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar regexpTreeParser = require('./generated/regexp-tree');\n\n/**\n * Original parse function.\n */\nvar generatedParseFn = regexpTreeParser.parse.bind(regexpTreeParser);\n\n/**\n * Parses a regular expression.\n *\n * Override original `regexpTreeParser.parse` to convert a value to a string,\n * since in regexp-tree we may pass strings, and RegExp instance.\n */\nregexpTreeParser.parse = function (regexp, options) {\n  return generatedParseFn('' + regexp, options);\n};\n\n// By default do not capture locations; callers may override.\nregexpTreeParser.setOptions({ captureLocations: false });\n\nmodule.exports = regexpTreeParser;","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DEFAULT_COLLECTION_PROP = 'expressions';\nvar DEFAULT_SINGLE_PROP = 'expression';\n\n/**\n * NodePath class encapsulates a traversing node,\n * its parent node, property name in the parent node, and\n * an index (in case if a node is part of a collection).\n * It also provides set of methods for AST manipulation.\n */\n\nvar NodePath = function () {\n  /**\n   * NodePath constructor.\n   *\n   * @param Object node - an AST node\n   * @param NodePath parentPath - a nullable parent path\n   * @param string property - property name of the node in the parent\n   * @param number index - index of the node in a collection.\n   */\n  function NodePath(node) {\n    var parentPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var property = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var index = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n    _classCallCheck(this, NodePath);\n\n    this.node = node;\n    this.parentPath = parentPath;\n    this.parent = parentPath ? parentPath.node : null;\n    this.property = property;\n    this.index = index;\n  }\n\n  _createClass(NodePath, [{\n    key: '_enforceProp',\n    value: function _enforceProp(property) {\n      if (!this.node.hasOwnProperty(property)) {\n        throw new Error('Node of type ' + this.node.type + ' doesn\\'t have \"' + property + '\" collection.');\n      }\n    }\n\n    /**\n     * Sets a node into a children collection or the single child.\n     * By default child nodes are supposed to be under `expressions` property.\n     * An explicit property can be passed.\n     *\n     * @param Object node - a node to set into a collection or as single child\n     * @param number index - index at which to set\n     * @param string property - name of the collection or single property\n     */\n\n  }, {\n    key: 'setChild',\n    value: function setChild(node) {\n      var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var property = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n\n      var childPath = void 0;\n      if (index != null) {\n        if (!property) {\n          property = DEFAULT_COLLECTION_PROP;\n        }\n        this._enforceProp(property);\n        this.node[property][index] = node;\n        childPath = NodePath.getForNode(node, this, property, index);\n      } else {\n        if (!property) {\n          property = DEFAULT_SINGLE_PROP;\n        }\n        this._enforceProp(property);\n        this.node[property] = node;\n        childPath = NodePath.getForNode(node, this, property, null);\n      }\n      return childPath;\n    }\n\n    /**\n     * Appends a node to a children collection.\n     * By default child nodes are supposed to be under `expressions` property.\n     * An explicit property can be passed.\n     *\n     * @param Object node - a node to set into a collection or as single child\n     * @param string property - name of the collection or single property\n     */\n\n  }, {\n    key: 'appendChild',\n    value: function appendChild(node) {\n      var property = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\n      if (!property) {\n        property = DEFAULT_COLLECTION_PROP;\n      }\n      this._enforceProp(property);\n      var end = this.node[property].length;\n      return this.setChild(node, end, property);\n    }\n\n    /**\n     * Inserts a node into a collection.\n     * By default child nodes are supposed to be under `expressions` property.\n     * An explicit property can be passed.\n     *\n     * @param Object node - a node to insert into a collection\n     * @param number index - index at which to insert\n     * @param string property - name of the collection property\n     */\n\n  }, {\n    key: 'insertChildAt',\n    value: function insertChildAt(node, index) {\n      var property = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_COLLECTION_PROP;\n\n      this._enforceProp(property);\n\n      this.node[property].splice(index, 0, node);\n\n      // If we inserted a node before the traversing index,\n      // we should increase the later.\n      if (index <= NodePath.getTraversingIndex()) {\n        NodePath.updateTraversingIndex(+1);\n      }\n\n      this._rebuildIndex(this.node, property);\n    }\n\n    /**\n     * Removes a node.\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove() {\n      if (this.isRemoved()) {\n        return;\n      }\n      NodePath.registry.delete(this.node);\n\n      this.node = null;\n\n      if (!this.parent) {\n        return;\n      }\n\n      // A node is in a collection.\n      if (this.index !== null) {\n        this.parent[this.property].splice(this.index, 1);\n\n        // If we remove a node before the traversing index,\n        // we should increase the later.\n        if (this.index <= NodePath.getTraversingIndex()) {\n          NodePath.updateTraversingIndex(-1);\n        }\n\n        // Rebuild index.\n        this._rebuildIndex(this.parent, this.property);\n\n        this.index = null;\n        this.property = null;\n\n        return;\n      }\n\n      // A simple node.\n      delete this.parent[this.property];\n      this.property = null;\n    }\n\n    /**\n     * Rebuilds child nodes index (used on remove/insert).\n     */\n\n  }, {\n    key: '_rebuildIndex',\n    value: function _rebuildIndex(parent, property) {\n      var parentPath = NodePath.getForNode(parent);\n\n      for (var i = 0; i < parent[property].length; i++) {\n        var path = NodePath.getForNode(parent[property][i], parentPath, property, i);\n        path.index = i;\n      }\n    }\n\n    /**\n     * Whether the path was removed.\n     */\n\n  }, {\n    key: 'isRemoved',\n    value: function isRemoved() {\n      return this.node === null;\n    }\n\n    /**\n     * Replaces a node with the passed one.\n     */\n\n  }, {\n    key: 'replace',\n    value: function replace(newNode) {\n      NodePath.registry.delete(this.node);\n\n      this.node = newNode;\n\n      if (!this.parent) {\n        return null;\n      }\n\n      // A node is in a collection.\n      if (this.index !== null) {\n        this.parent[this.property][this.index] = newNode;\n      }\n\n      // A simple node.\n      else {\n          this.parent[this.property] = newNode;\n        }\n\n      // Rebuild the node path for the new node.\n      return NodePath.getForNode(newNode, this.parentPath, this.property, this.index);\n    }\n\n    /**\n     * Updates a node inline.\n     */\n\n  }, {\n    key: 'update',\n    value: function update(nodeProps) {\n      Object.assign(this.node, nodeProps);\n    }\n\n    /**\n     * Returns parent.\n     */\n\n  }, {\n    key: 'getParent',\n    value: function getParent() {\n      return this.parentPath;\n    }\n\n    /**\n     * Returns nth child.\n     */\n\n  }, {\n    key: 'getChild',\n    value: function getChild() {\n      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.node.expressions) {\n        return NodePath.getForNode(this.node.expressions[n], this, DEFAULT_COLLECTION_PROP, n);\n      } else if (this.node.expression && n == 0) {\n        return NodePath.getForNode(this.node.expression, this, DEFAULT_SINGLE_PROP);\n      }\n      return null;\n    }\n\n    /**\n     * Whether a path node is syntactically equal to the passed one.\n     *\n     * NOTE: we don't rely on `source` property from the `loc` data\n     * (which would be the fastest comparison), since it might be unsync\n     * after several modifications. We use here simple `JSON.stringify`\n     * excluding the `loc` data.\n     *\n     * @param NodePath other - path to compare to.\n     * @return boolean\n     */\n\n  }, {\n    key: 'hasEqualSource',\n    value: function hasEqualSource(path) {\n      return JSON.stringify(this.node, jsonSkipLoc) === JSON.stringify(path.node, jsonSkipLoc);\n    }\n\n    /**\n     * JSON-encodes a node skipping location.\n     */\n\n  }, {\n    key: 'jsonEncode',\n    value: function jsonEncode() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          format = _ref.format,\n          useLoc = _ref.useLoc;\n\n      return JSON.stringify(this.node, useLoc ? null : jsonSkipLoc, format);\n    }\n\n    /**\n     * Returns previous sibling.\n     */\n\n  }, {\n    key: 'getPreviousSibling',\n    value: function getPreviousSibling() {\n      if (!this.parent || this.index == null) {\n        return null;\n      }\n      return NodePath.getForNode(this.parent[this.property][this.index - 1], NodePath.getForNode(this.parent), this.property, this.index - 1);\n    }\n\n    /**\n     * Returns next sibling.\n     */\n\n  }, {\n    key: 'getNextSibling',\n    value: function getNextSibling() {\n      if (!this.parent || this.index == null) {\n        return null;\n      }\n      return NodePath.getForNode(this.parent[this.property][this.index + 1], NodePath.getForNode(this.parent), this.property, this.index + 1);\n    }\n\n    /**\n     * Returns a NodePath instance for a node.\n     *\n     * The same NodePath can be reused in several places, e.g.\n     * a parent node passed for all its children.\n     */\n\n  }], [{\n    key: 'getForNode',\n    value: function getForNode(node) {\n      var parentPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var prop = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var index = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -1;\n\n      if (!node) {\n        return null;\n      }\n\n      if (!NodePath.registry.has(node)) {\n        NodePath.registry.set(node, new NodePath(node, parentPath, prop, index == -1 ? null : index));\n      }\n\n      var path = NodePath.registry.get(node);\n\n      if (parentPath !== null) {\n        path.parentPath = parentPath;\n        path.parent = path.parentPath.node;\n      }\n\n      if (prop !== null) {\n        path.property = prop;\n      }\n\n      if (index >= 0) {\n        path.index = index;\n      }\n\n      return path;\n    }\n\n    /**\n     * Initializes the NodePath registry. The registry is a map from\n     * a node to its NodePath instance.\n     */\n\n  }, {\n    key: 'initRegistry',\n    value: function initRegistry() {\n      if (!NodePath.registry) {\n        NodePath.registry = new Map();\n      }\n      NodePath.registry.clear();\n    }\n\n    /**\n     * Updates index of a currently traversing collection.\n     */\n\n  }, {\n    key: 'updateTraversingIndex',\n    value: function updateTraversingIndex(dx) {\n      return NodePath.traversingIndexStack[NodePath.traversingIndexStack.length - 1] += dx;\n    }\n\n    /**\n     * Returns current traversing index.\n     */\n\n  }, {\n    key: 'getTraversingIndex',\n    value: function getTraversingIndex() {\n      return NodePath.traversingIndexStack[NodePath.traversingIndexStack.length - 1];\n    }\n  }]);\n\n  return NodePath;\n}();\n\nNodePath.initRegistry();\n\n/**\n * Index of a currently traversing collection is stored on top of the\n * `NodePath.traversingIndexStack`. Remove/insert methods can adjust\n * this index.\n */\nNodePath.traversingIndexStack = [];\n\n// Helper function used to skip `loc` in JSON operations.\nfunction jsonSkipLoc(prop, value) {\n  if (prop === 'loc') {\n    return undefined;\n  }\n  return value;\n}\n\nmodule.exports = NodePath;","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar NodePath = require('./node-path');\n\n/**\n * Does an actual AST traversal, using visitor pattern,\n * and calling set of callbacks.\n *\n * Based on https://github.com/olov/ast-traverse\n *\n * Expects AST in Mozilla Parser API: nodes which are supposed to be\n * handled should have `type` property.\n *\n * @param Object root - a root node to start traversal from.\n *\n * @param Object options - an object with set of callbacks:\n *\n *   - `pre(node, parent, prop, index)` - a hook called on node enter\n *   - `post`(node, parent, prop, index) - a hook called on node exit\n *   - `skipProperty(prop)` - a predicated whether a property should be skipped\n */\nfunction astTraverse(root) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var pre = options.pre;\n  var post = options.post;\n  var skipProperty = options.skipProperty;\n\n  function visit(node, parent, prop, idx) {\n    if (!node || typeof node.type !== 'string') {\n      return;\n    }\n\n    var res = undefined;\n    if (pre) {\n      res = pre(node, parent, prop, idx);\n    }\n\n    if (res !== false) {\n\n      // A node can be replaced during traversal, so we have to\n      // recalculate it from the parent, to avoid traversing \"dead\" nodes.\n      if (parent && parent[prop]) {\n        if (!isNaN(idx)) {\n          node = parent[prop][idx];\n        } else {\n          node = parent[prop];\n        }\n      }\n\n      for (var _prop in node) {\n        if (node.hasOwnProperty(_prop)) {\n          if (skipProperty ? skipProperty(_prop, node) : _prop[0] === '$') {\n            continue;\n          }\n\n          var child = node[_prop];\n\n          // Collection node.\n          //\n          // NOTE: a node (or several nodes) can be removed or inserted\n          // during traversal.\n          //\n          // Current traversing index is stored on top of the\n          // `NodePath.traversingIndexStack`. The stack is used to support\n          // recursive nature of the traversal.\n          //\n          // In this case `NodePath.traversingIndex` (which we use here) is\n          // updated in the NodePath remove/insert methods.\n          //\n          if (Array.isArray(child)) {\n            var index = 0;\n            NodePath.traversingIndexStack.push(index);\n            while (index < child.length) {\n              visit(child[index], node, _prop, index);\n              index = NodePath.updateTraversingIndex(+1);\n            }\n            NodePath.traversingIndexStack.pop();\n          }\n\n          // Simple node.\n          else {\n              visit(child, node, _prop);\n            }\n        }\n      }\n    }\n\n    if (post) {\n      post(node, parent, prop, idx);\n    }\n  }\n\n  visit(root, null);\n}\n\nmodule.exports = {\n  /**\n   * Traverses an AST.\n   *\n   * @param Object ast - an AST node\n   *\n   * @param Object | Array<Object> handlers:\n   *\n   *   an object (or an array of objects)\n   *\n   *   Each such object contains a handler function per node.\n   *   In case of an array of handlers, they are applied in order.\n   *   A handler may return a transformed node (or a different type).\n   *\n   *   The per-node function may instead be an object with functions pre and post.\n   *   pre is called before visiting the node, post after.\n   *   If a handler is a function, it is treated as the pre function, with an empty post.\n   *\n   * @param Object options:\n   *\n   *   a config object, specifying traversal options:\n   *\n   *   `asNodes`: boolean - whether handlers should receives raw AST nodes\n   *   (false by default), instead of a `NodePath` wrapper. Note, by default\n   *   `NodePath` wrapper provides a set of convenient method to manipulate\n   *   a traversing AST, and also has access to all parents list. A raw\n   *   nodes traversal should be used in rare cases, when no `NodePath`\n   *   features are needed.\n   *\n   * Special hooks:\n   *\n   *   - `shouldRun(ast)` - a predicate determining whether the handler\n   *                        should be applied.\n   *\n   * NOTE: Multiple handlers are used as an optimization of applying all of\n   * them in one AST traversal pass.\n   */\n  traverse: function traverse(ast, handlers) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : { asNodes: false };\n\n\n    if (!Array.isArray(handlers)) {\n      handlers = [handlers];\n    }\n\n    // Filter out handlers by result of `shouldRun`, if the method is present.\n    handlers = handlers.filter(function (handler) {\n      if (typeof handler.shouldRun !== 'function') {\n        return true;\n      }\n      return handler.shouldRun(ast);\n    });\n\n    NodePath.initRegistry();\n\n    // Allow handlers to initializer themselves.\n    handlers.forEach(function (handler) {\n      if (typeof handler.init === 'function') {\n        handler.init(ast);\n      }\n    });\n\n    function getPathFor(node, parent, prop, index) {\n      var parentPath = NodePath.getForNode(parent);\n      var nodePath = NodePath.getForNode(node, parentPath, prop, index);\n\n      return nodePath;\n    }\n\n    // Handle actual nodes.\n    astTraverse(ast, {\n      /**\n       * Handler on node enter.\n       */\n      pre: function pre(node, parent, prop, index) {\n        var nodePath = void 0;\n        if (!options.asNodes) {\n          nodePath = getPathFor(node, parent, prop, index);\n        }\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = handlers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var handler = _step.value;\n\n            // \"Catch-all\" `*` handler.\n            if (typeof handler['*'] === 'function') {\n              if (nodePath) {\n                // A path/node can be removed by some previous handler.\n                if (!nodePath.isRemoved()) {\n                  var handlerResult = handler['*'](nodePath);\n                  // Explicitly stop traversal.\n                  if (handlerResult === false) {\n                    return false;\n                  }\n                }\n              } else {\n                handler['*'](node, parent, prop, index);\n              }\n            }\n\n            // Per-node handler.\n            var handlerFuncPre = void 0;\n            if (typeof handler[node.type] === 'function') {\n              handlerFuncPre = handler[node.type];\n            } else if (typeof handler[node.type] === 'object' && typeof handler[node.type].pre === 'function') {\n              handlerFuncPre = handler[node.type].pre;\n            }\n\n            if (handlerFuncPre) {\n              if (nodePath) {\n                // A path/node can be removed by some previous handler.\n                if (!nodePath.isRemoved()) {\n                  var _handlerResult = handlerFuncPre.call(handler, nodePath);\n                  // Explicitly stop traversal.\n                  if (_handlerResult === false) {\n                    return false;\n                  }\n                }\n              } else {\n                handlerFuncPre.call(handler, node, parent, prop, index);\n              }\n            }\n          } // Loop over handlers\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      },\n      // pre func\n\n      /**\n       * Handler on node exit.\n       */\n      post: function post(node, parent, prop, index) {\n        if (!node) {\n          return;\n        }\n\n        var nodePath = void 0;\n        if (!options.asNodes) {\n          nodePath = getPathFor(node, parent, prop, index);\n        }\n\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = handlers[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var handler = _step2.value;\n\n            // Per-node handler.\n            var handlerFuncPost = void 0;\n            if (typeof handler[node.type] === 'object' && typeof handler[node.type].post === 'function') {\n              handlerFuncPost = handler[node.type].post;\n            }\n\n            if (handlerFuncPost) {\n              if (nodePath) {\n                // A path/node can be removed by some previous handler.\n                if (!nodePath.isRemoved()) {\n                  var handlerResult = handlerFuncPost.call(handler, nodePath);\n                  // Explicitly stop traversal.\n                  if (handlerResult === false) {\n                    return false;\n                  }\n                }\n              } else {\n                handlerFuncPost.call(handler, node, parent, prop, index);\n              }\n            }\n          } // Loop over handlers\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      },\n      // post func\n\n      /**\n       * Skip locations by default.\n       */\n      skipProperty: function skipProperty(prop) {\n        return prop === 'loc';\n      }\n    });\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar generator = require('../generator');\nvar parser = require('../parser');\nvar traverse = require('../traverse');\n\n/**\n * Transform result.\n */\n\nvar TransformResult = function () {\n  /**\n   * Initializes a transform result for an AST.\n   *\n   * @param Object ast - an AST node\n   * @param mixed extra - any extra data a transform may return\n   */\n  function TransformResult(ast) {\n    var extra = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    _classCallCheck(this, TransformResult);\n\n    this._ast = ast;\n    this._source = null;\n    this._string = null;\n    this._regexp = null;\n    this._extra = extra;\n  }\n\n  _createClass(TransformResult, [{\n    key: 'getAST',\n    value: function getAST() {\n      return this._ast;\n    }\n  }, {\n    key: 'setExtra',\n    value: function setExtra(extra) {\n      this._extra = extra;\n    }\n  }, {\n    key: 'getExtra',\n    value: function getExtra() {\n      return this._extra;\n    }\n  }, {\n    key: 'toRegExp',\n    value: function toRegExp() {\n      if (!this._regexp) {\n        this._regexp = new RegExp(this.getSource(), this._ast.flags);\n      }\n      return this._regexp;\n    }\n  }, {\n    key: 'getSource',\n    value: function getSource() {\n      if (!this._source) {\n        this._source = generator.generate(this._ast.body);\n      }\n      return this._source;\n    }\n  }, {\n    key: 'getFlags',\n    value: function getFlags() {\n      return this._ast.flags;\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      if (!this._string) {\n        this._string = generator.generate(this._ast);\n      }\n      return this._string;\n    }\n  }]);\n\n  return TransformResult;\n}();\n\nmodule.exports = {\n  /**\n   * Expose `TransformResult`.\n   */\n  TransformResult: TransformResult,\n\n  /**\n   * Transforms a regular expression applying a set of\n   * transformation handlers.\n   *\n   * @param string | AST | RegExp:\n   *\n   *   a regular expression in different representations: a string,\n   *   a RegExp object, or an AST.\n   *\n   * @param Object | Array<Object>:\n   *\n   *   a handler (or a list of handlers) from `traverse` API.\n   *\n   * @return TransformResult instance.\n   *\n   * Example:\n   *\n   *   transform(/[a-z]/i, {\n   *     onChar(path) {\n   *       const {node} = path;\n   *\n   *       if (...) {\n   *         path.remove();\n   *       }\n   *     }\n   *   });\n   */\n  transform: function transform(regexp, handlers) {\n    var ast = regexp;\n\n    if (regexp instanceof RegExp) {\n      regexp = '' + regexp;\n    }\n\n    if (typeof regexp === 'string') {\n      ast = parser.parse(regexp, {\n        captureLocations: true\n      });\n    }\n\n    traverse.traverse(ast, handlers);\n\n    return new TransformResult(ast);\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar compatTransforms = require('./transforms');\nvar _transform = require('../transform');\n\nmodule.exports = {\n  /**\n   * Translates a regexp in new syntax to equivalent regexp in old syntax.\n   *\n   * @param string|RegExp|AST - regexp\n   * @param Array transformsWhitelist - names of the transforms to apply\n   */\n  transform: function transform(regexp) {\n    var transformsWhitelist = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    var transformToApply = transformsWhitelist.length > 0 ? transformsWhitelist : Object.keys(compatTransforms);\n\n    var result = void 0;\n\n    // Collect extra data per transform.\n    var extra = {};\n\n    transformToApply.forEach(function (transformName) {\n\n      if (!compatTransforms.hasOwnProperty(transformName)) {\n        throw new Error('Unknown compat-transform: ' + transformName + '. ' + 'Available transforms are: ' + Object.keys(compatTransforms).join(', '));\n      }\n\n      var handler = compatTransforms[transformName];\n\n      result = _transform.transform(regexp, handler);\n      regexp = result.getAST();\n\n      // Collect `extra` transform result.\n      if (typeof handler.getExtra === 'function') {\n        extra[transformName] = handler.getExtra();\n      }\n    });\n\n    // Set the final extras for all transforms.\n    result.setExtra(extra);\n\n    return result;\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * Performs a deep copy of an simple object.\n * Only handles scalar values, arrays and objects.\n *\n * @param obj Object\n */\n\nmodule.exports = function clone(obj) {\n  if (obj === null || typeof obj !== 'object') {\n    return obj;\n  }\n  var res = void 0;\n  if (Array.isArray(obj)) {\n    res = [];\n  } else {\n    res = {};\n  }\n  for (var i in obj) {\n    res[i] = clone(obj[i]);\n  }\n  return res;\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to transform surrogate pairs into single unicode code point\n *\n * \\ud83d\\ude80 -> \\u{1f680}\n */\n\nmodule.exports = {\n  shouldRun: function shouldRun(ast) {\n    return ast.flags.includes('u');\n  },\n  Char: function Char(path) {\n    var node = path.node;\n\n    if (node.kind !== 'unicode' || !node.isSurrogatePair || isNaN(node.codePoint)) {\n      return;\n    }\n    node.value = '\\\\u{' + node.codePoint.toString(16) + '}';\n    delete node.isSurrogatePair;\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar UPPER_A_CP = 'A'.codePointAt(0);\nvar UPPER_Z_CP = 'Z'.codePointAt(0);\nvar LOWER_A_CP = 'a'.codePointAt(0);\nvar LOWER_Z_CP = 'z'.codePointAt(0);\nvar DIGIT_0_CP = '0'.codePointAt(0);\nvar DIGIT_9_CP = '9'.codePointAt(0);\n\n/**\n * A regexp-tree plugin to transform coded chars into simple chars.\n *\n * \\u0061 -> a\n */\nmodule.exports = {\n  Char: function Char(path) {\n    var node = path.node,\n        parent = path.parent;\n\n    if (isNaN(node.codePoint) || node.kind === 'simple') {\n      return;\n    }\n\n    if (parent.type === 'ClassRange') {\n      if (!isSimpleRange(parent)) {\n        return;\n      }\n    }\n\n    if (!isPrintableASCIIChar(node.codePoint)) {\n      return;\n    }\n\n    var symbol = String.fromCodePoint(node.codePoint);\n    var newChar = {\n      type: 'Char',\n      kind: 'simple',\n      value: symbol,\n      symbol: symbol,\n      codePoint: node.codePoint\n    };\n    if (needsEscape(symbol, parent.type)) {\n      newChar.escaped = true;\n    }\n    path.replace(newChar);\n  }\n};\n\n/**\n * Checks if a range is included either in 0-9, a-z or A-Z\n * @param classRange\n * @returns {boolean}\n */\nfunction isSimpleRange(classRange) {\n  var from = classRange.from,\n      to = classRange.to;\n\n  return from.codePoint >= DIGIT_0_CP && from.codePoint <= DIGIT_9_CP && to.codePoint >= DIGIT_0_CP && to.codePoint <= DIGIT_9_CP || from.codePoint >= UPPER_A_CP && from.codePoint <= UPPER_Z_CP && to.codePoint >= UPPER_A_CP && to.codePoint <= UPPER_Z_CP || from.codePoint >= LOWER_A_CP && from.codePoint <= LOWER_Z_CP && to.codePoint >= LOWER_A_CP && to.codePoint <= LOWER_Z_CP;\n}\n\n/**\n * Checks if a code point in the range of printable ASCII chars\n * (DEL char excluded)\n * @param codePoint\n * @returns {boolean}\n */\nfunction isPrintableASCIIChar(codePoint) {\n  return codePoint >= 0x20 && codePoint <= 0x7e;\n}\n\nfunction needsEscape(symbol, parentType) {\n  if (parentType === 'ClassRange' || parentType === 'CharacterClass') {\n    return (/[\\]\\\\^-]/.test(symbol)\n    );\n  }\n\n  return (/[*[()+?^$./\\\\|{}]/.test(symbol)\n  );\n}","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar UPPER_A_CP = 'A'.codePointAt(0);\nvar UPPER_Z_CP = 'Z'.codePointAt(0);\n/**\n * Transforms case-insensitive regexp to lowercase\n *\n * /AaBbÏ/i -> /aabbï/i\n */\nmodule.exports = {\n  _AZClassRanges: null,\n  _hasUFlag: false,\n  init: function init(ast) {\n    this._AZClassRanges = new Set();\n    this._hasUFlag = ast.flags.includes('u');\n  },\n  shouldRun: function shouldRun(ast) {\n    return ast.flags.includes('i');\n  },\n  Char: function Char(path) {\n    var node = path.node,\n        parent = path.parent;\n\n    if (isNaN(node.codePoint)) {\n      return;\n    }\n\n    // Engine support for case-insensitive matching without the u flag\n    // for characters above \\u1000 does not seem reliable.\n    if (!this._hasUFlag && node.codePoint >= 0x1000) {\n      return;\n    }\n\n    if (parent.type === 'ClassRange') {\n      // The only class ranges we handle must be inside A-Z.\n      // After the `from` char is processed, the isAZClassRange test\n      // will be false, so we use a Set to keep track of parents and\n      // process the `to` char.\n      if (!this._AZClassRanges.has(parent) && !isAZClassRange(parent)) {\n        return;\n      }\n      this._AZClassRanges.add(parent);\n    }\n\n    var lower = node.symbol.toLowerCase();\n    if (lower !== node.symbol) {\n      node.value = displaySymbolAsValue(lower, node);\n      node.symbol = lower;\n      node.codePoint = lower.codePointAt(0);\n    }\n  }\n};\n\nfunction isAZClassRange(classRange) {\n  var from = classRange.from,\n      to = classRange.to;\n  // A-Z\n\n  return from.codePoint >= UPPER_A_CP && from.codePoint <= UPPER_Z_CP && to.codePoint >= UPPER_A_CP && to.codePoint <= UPPER_Z_CP;\n}\n\nfunction displaySymbolAsValue(symbol, node) {\n  var codePoint = symbol.codePointAt(0);\n  if (node.kind === 'decimal') {\n    return '\\\\' + codePoint;\n  }\n  if (node.kind === 'oct') {\n    return '\\\\0' + codePoint.toString(8);\n  }\n  if (node.kind === 'hex') {\n    return '\\\\x' + codePoint.toString(16);\n  }\n  if (node.kind === 'unicode') {\n    if (node.isSurrogatePair) {\n      var _getSurrogatePairFrom = getSurrogatePairFromCodePoint(codePoint),\n          lead = _getSurrogatePairFrom.lead,\n          trail = _getSurrogatePairFrom.trail;\n\n      return '\\\\u' + '0'.repeat(4 - lead.length) + lead + '\\\\u' + '0'.repeat(4 - trail.length) + trail;\n    } else if (node.value.includes('{')) {\n      return '\\\\u{' + codePoint.toString(16) + '}';\n    } else {\n      var code = codePoint.toString(16);\n      return '\\\\u' + '0'.repeat(4 - code.length) + code;\n    }\n  }\n  // simple\n  return symbol;\n}\n\n/**\n * Converts a code point to a surrogate pair.\n * Conversion algorithm is taken from The Unicode Standard 3.0 Section 3.7\n * (https://www.unicode.org/versions/Unicode3.0.0/ch03.pdf)\n * @param {number} codePoint - Between 0x10000 and 0x10ffff\n * @returns {{lead: string, trail: string}}\n */\nfunction getSurrogatePairFromCodePoint(codePoint) {\n  var lead = Math.floor((codePoint - 0x10000) / 0x400) + 0xd800;\n  var trail = (codePoint - 0x10000) % 0x400 + 0xdc00;\n  return {\n    lead: lead.toString(16),\n    trail: trail.toString(16)\n  };\n}","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to remove duplicates from character classes.\n */\n\nmodule.exports = {\n  CharacterClass: function CharacterClass(path) {\n    var node = path.node;\n\n    var sources = {};\n\n    for (var i = 0; i < node.expressions.length; i++) {\n      var childPath = path.getChild(i);\n      var source = childPath.jsonEncode();\n\n      if (sources.hasOwnProperty(source)) {\n        childPath.remove();\n\n        // Since we remove the current node.\n        // TODO: make it simpler for users with a method.\n        i--;\n      }\n\n      sources[source] = true;\n    }\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * Flattens a nested disjunction node to a list.\n *\n * /a|b|c|d/\n *\n * {{{a, b}, c}, d} -> [a, b, c, d]\n */\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction disjunctionToList(node) {\n  if (node.type !== 'Disjunction') {\n    throw new TypeError('Expected \"Disjunction\" node, got \"' + node.type + '\"');\n  }\n\n  var list = [];\n\n  if (node.left && node.left.type === 'Disjunction') {\n    list.push.apply(list, _toConsumableArray(disjunctionToList(node.left)).concat([node.right]));\n  } else {\n    list.push(node.left, node.right);\n  }\n\n  return list;\n}\n\n/**\n * Builds a nested disjunction node from a list.\n *\n * /a|b|c|d/\n *\n * [a, b, c, d] -> {{{a, b}, c}, d}\n */\nfunction listToDisjunction(list) {\n  return list.reduce(function (left, right) {\n    return {\n      type: 'Disjunction',\n      left: left,\n      right: right\n    };\n  });\n}\n\n/**\n * Increases a quantifier by one.\n * Does not change greediness.\n * * -> +\n * + -> {2,}\n * ? -> {1,2}\n * {2} -> {3}\n * {2,} -> {3,}\n * {2,3} -> {3,4}\n */\nfunction increaseQuantifierByOne(quantifier) {\n  if (quantifier.kind === '*') {\n\n    quantifier.kind = '+';\n  } else if (quantifier.kind === '+') {\n\n    quantifier.kind = 'Range';\n    quantifier.from = 2;\n    delete quantifier.to;\n  } else if (quantifier.kind === '?') {\n\n    quantifier.kind = 'Range';\n    quantifier.from = 1;\n    quantifier.to = 2;\n  } else if (quantifier.kind === 'Range') {\n\n    quantifier.from += 1;\n    if (quantifier.to) {\n      quantifier.to += 1;\n    }\n  }\n}\n\nmodule.exports = {\n  disjunctionToList: disjunctionToList,\n  listToDisjunction: listToDisjunction,\n  increaseQuantifierByOne: increaseQuantifierByOne\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar _require = require('../../transform/utils'),\n    increaseQuantifierByOne = _require.increaseQuantifierByOne;\n\n/**\n * A regexp-tree plugin to merge quantifiers\n *\n * a+a+ -> a{2,}\n * a{2}a{3} -> a{5}\n * a{1,2}a{2,3} -> a{3,5}\n */\n\n\nmodule.exports = {\n  Repetition: function Repetition(path) {\n    var node = path.node,\n        parent = path.parent;\n\n\n    if (parent.type !== 'Alternative' || !path.index) {\n      return;\n    }\n\n    var previousSibling = path.getPreviousSibling();\n\n    if (!previousSibling) {\n      return;\n    }\n\n    if (previousSibling.node.type === 'Repetition') {\n      if (!previousSibling.getChild().hasEqualSource(path.getChild())) {\n        return;\n      }\n\n      var _extractFromTo = extractFromTo(previousSibling.node.quantifier),\n          previousSiblingFrom = _extractFromTo.from,\n          previousSiblingTo = _extractFromTo.to;\n\n      var _extractFromTo2 = extractFromTo(node.quantifier),\n          nodeFrom = _extractFromTo2.from,\n          nodeTo = _extractFromTo2.to;\n\n      // It's does not seem reliable to merge quantifiers with different greediness\n      // when none of both is a greedy open range\n\n\n      if (previousSibling.node.quantifier.greedy !== node.quantifier.greedy && !isGreedyOpenRange(previousSibling.node.quantifier) && !isGreedyOpenRange(node.quantifier)) {\n        return;\n      }\n\n      // a*a* -> a*\n      // a*a+ -> a+\n      // a+a+ -> a{2,}\n      // a{2}a{4} -> a{6}\n      // a{1,2}a{2,3} -> a{3,5}\n      // a{1,}a{2,} -> a{3,}\n      // a+a{2,} -> a{3,}\n\n      // a??a{2,} -> a{2,}\n      // a*?a{2,} -> a{2,}\n      // a+?a{2,} -> a{3,}\n\n      node.quantifier.kind = 'Range';\n      node.quantifier.from = previousSiblingFrom + nodeFrom;\n      if (previousSiblingTo && nodeTo) {\n        node.quantifier.to = previousSiblingTo + nodeTo;\n      } else {\n        delete node.quantifier.to;\n      }\n      if (isGreedyOpenRange(previousSibling.node.quantifier) || isGreedyOpenRange(node.quantifier)) {\n        node.quantifier.greedy = true;\n      }\n\n      previousSibling.remove();\n    } else {\n      if (!previousSibling.hasEqualSource(path.getChild())) {\n        return;\n      }\n\n      increaseQuantifierByOne(node.quantifier);\n      previousSibling.remove();\n    }\n  }\n};\n\nfunction isGreedyOpenRange(quantifier) {\n  return quantifier.greedy && (quantifier.kind === '+' || quantifier.kind === '*' || quantifier.kind === 'Range' && !quantifier.to);\n}\n\nfunction extractFromTo(quantifier) {\n  var from = void 0,\n      to = void 0;\n  if (quantifier.kind === '*') {\n    from = 0;\n  } else if (quantifier.kind === '+') {\n    from = 1;\n  } else if (quantifier.kind === '?') {\n    from = 0;\n    to = 1;\n  } else {\n    from = quantifier.from;\n    if (quantifier.to) {\n      to = quantifier.to;\n    }\n  }\n  return { from: from, to: to };\n}","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to replace different range-based quantifiers\n * with their symbol equivalents.\n *\n * a{0,} -> a*\n * a{1,} -> a+\n * a{1} -> a\n *\n * NOTE: the following is automatically handled in the generator:\n *\n * a{3,3} -> a{3}\n */\n\nmodule.exports = {\n  Quantifier: function Quantifier(path) {\n    var node = path.node;\n\n\n    if (node.kind !== 'Range') {\n      return;\n    }\n\n    // a{0,} -> a*\n    rewriteOpenZero(path);\n\n    // a{1,} -> a+\n    rewriteOpenOne(path);\n\n    // a{1} -> a\n    rewriteExactOne(path);\n  }\n};\n\nfunction rewriteOpenZero(path) {\n  var node = path.node;\n\n\n  if (node.from !== 0 || node.to) {\n    return;\n  }\n\n  node.kind = '*';\n  delete node.from;\n}\n\nfunction rewriteOpenOne(path) {\n  var node = path.node;\n\n\n  if (node.from !== 1 || node.to) {\n    return;\n  }\n\n  node.kind = '+';\n  delete node.from;\n}\n\nfunction rewriteExactOne(path) {\n  var node = path.node;\n\n\n  if (node.from !== 1 || node.to !== 1) {\n    return;\n  }\n\n  path.parentPath.replace(path.parentPath.node.expression);\n}","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to simplify character classes\n * spanning only one or two chars.\n *\n * [a-a] -> [a]\n * [a-b] -> [ab]\n */\n\nmodule.exports = {\n  ClassRange: function ClassRange(path) {\n    var node = path.node;\n\n\n    if (node.from.codePoint === node.to.codePoint) {\n\n      path.replace(node.from);\n    } else if (node.from.codePoint === node.to.codePoint - 1) {\n\n      path.getParent().insertChildAt(node.to, path.index + 1);\n      path.replace(node.from);\n    }\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to replace standard character classes with\n * their meta symbols equivalents.\n */\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nmodule.exports = {\n  _hasIFlag: false,\n  _hasUFlag: false,\n  init: function init(ast) {\n    this._hasIFlag = ast.flags.includes('i');\n    this._hasUFlag = ast.flags.includes('u');\n  },\n  CharacterClass: function CharacterClass(path) {\n    // [0-9] -> \\d\n    rewriteNumberRanges(path);\n\n    // [a-zA-Z_0-9] -> \\w\n    rewriteWordRanges(path, this._hasIFlag, this._hasUFlag);\n\n    // [ \\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff] -> \\s\n    rewriteWhitespaceRanges(path);\n  }\n};\n\n/**\n * Rewrites number ranges: [0-9] -> \\d\n */\nfunction rewriteNumberRanges(path) {\n  var node = path.node;\n\n\n  node.expressions.forEach(function (expression, i) {\n    if (isFullNumberRange(expression)) {\n      path.getChild(i).replace({\n        type: 'Char',\n        value: '\\\\d',\n        kind: 'meta'\n      });\n    }\n  });\n}\n\n/**\n * Rewrites word ranges: [a-zA-Z_0-9] -> \\w\n * Thus, the ranges may go in any order, and other symbols/ranges\n * are kept untouched, e.g. [a-z_\\dA-Z$] -> [\\w$]\n */\nfunction rewriteWordRanges(path, hasIFlag, hasUFlag) {\n  var node = path.node;\n\n\n  var numberPath = null;\n  var lowerCasePath = null;\n  var upperCasePath = null;\n  var underscorePath = null;\n  var u017fPath = null;\n  var u212aPath = null;\n\n  node.expressions.forEach(function (expression, i) {\n    // \\d\n    if (isMetaChar(expression, '\\\\d')) {\n      numberPath = path.getChild(i);\n    }\n\n    // a-z\n    else if (isLowerCaseRange(expression)) {\n        lowerCasePath = path.getChild(i);\n      }\n\n      // A-Z\n      else if (isUpperCaseRange(expression)) {\n          upperCasePath = path.getChild(i);\n        }\n\n        // _\n        else if (isUnderscore(expression)) {\n            underscorePath = path.getChild(i);\n          } else if (hasIFlag && hasUFlag && isCodePoint(expression, 0x017f)) {\n            u017fPath = path.getChild(i);\n          } else if (hasIFlag && hasUFlag && isCodePoint(expression, 0x212a)) {\n            u212aPath = path.getChild(i);\n          }\n  });\n\n  // If we found the whole pattern, replace it.\n  if (numberPath && (lowerCasePath && upperCasePath || hasIFlag && (lowerCasePath || upperCasePath)) && underscorePath && (!hasUFlag || !hasIFlag || u017fPath && u212aPath)) {\n    // Put \\w in place of \\d.\n    numberPath.replace({\n      type: 'Char',\n      value: '\\\\w',\n      kind: 'meta'\n    });\n\n    // Other paths are removed.\n    if (lowerCasePath) {\n      lowerCasePath.remove();\n    }\n    if (upperCasePath) {\n      upperCasePath.remove();\n    }\n    underscorePath.remove();\n    if (u017fPath) {\n      u017fPath.remove();\n    }\n    if (u212aPath) {\n      u212aPath.remove();\n    }\n  }\n}\n\n/**\n * Rewrites whitespace ranges: [ \\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff] -> \\s.\n */\nvar whitespaceRangeTests = [function (node) {\n  return isChar(node, ' ');\n}].concat(_toConsumableArray(['\\\\f', '\\\\n', '\\\\r', '\\\\t', '\\\\v'].map(function (char) {\n  return function (node) {\n    return isMetaChar(node, char);\n  };\n})), _toConsumableArray([0x00a0, 0x1680, 0x2028, 0x2029, 0x202f, 0x205f, 0x3000, 0xfeff].map(function (codePoint) {\n  return function (node) {\n    return isCodePoint(node, codePoint);\n  };\n})), [function (node) {\n  return node.type === 'ClassRange' && isCodePoint(node.from, 0x2000) && isCodePoint(node.to, 0x200a);\n}]);\n\nfunction rewriteWhitespaceRanges(path) {\n  var node = path.node;\n\n\n  if (node.expressions.length < whitespaceRangeTests.length || !whitespaceRangeTests.every(function (test) {\n    return node.expressions.some(function (expression) {\n      return test(expression);\n    });\n  })) {\n    return;\n  }\n\n  // If we found the whole pattern, replace it.\n\n  // Put \\s in place of \\n.\n  var nNode = node.expressions.find(function (expression) {\n    return isMetaChar(expression, '\\\\n');\n  });\n  nNode.value = '\\\\s';\n  nNode.symbol = undefined;\n  nNode.codePoint = NaN;\n\n  // Other paths are removed.\n  node.expressions.map(function (expression, i) {\n    return whitespaceRangeTests.some(function (test) {\n      return test(expression);\n    }) ? path.getChild(i) : undefined;\n  }).filter(Boolean).forEach(function (path) {\n    return path.remove();\n  });\n}\n\nfunction isFullNumberRange(node) {\n  return node.type === 'ClassRange' && node.from.value === '0' && node.to.value === '9';\n}\n\nfunction isChar(node, value) {\n  var kind = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'simple';\n\n  return node.type === 'Char' && node.value === value && node.kind === kind;\n}\n\nfunction isMetaChar(node, value) {\n  return isChar(node, value, 'meta');\n}\n\nfunction isLowerCaseRange(node) {\n  return node.type === 'ClassRange' && node.from.value === 'a' && node.to.value === 'z';\n}\n\nfunction isUpperCaseRange(node) {\n  return node.type === 'ClassRange' && node.from.value === 'A' && node.to.value === 'Z';\n}\n\nfunction isUnderscore(node) {\n  return node.type === 'Char' && node.value === '_' && node.kind === 'simple';\n}\n\nfunction isCodePoint(node, codePoint) {\n  return node.type === 'Char' && node.kind === 'unicode' && node.codePoint === codePoint;\n}","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to replace single char character classes with\n * just that character.\n *\n * [\\d] -> \\d, [^\\w] -> \\W\n */\n\nmodule.exports = {\n  CharacterClass: function CharacterClass(path) {\n    var node = path.node;\n\n\n    if (node.expressions.length !== 1 || !hasAppropriateSiblings(path) || !isAppropriateChar(node.expressions[0])) {\n      return;\n    }\n\n    var _node$expressions$ = node.expressions[0],\n        value = _node$expressions$.value,\n        kind = _node$expressions$.kind,\n        escaped = _node$expressions$.escaped;\n\n\n    if (node.negative) {\n      // For negative can extract only meta chars like [^\\w] -> \\W\n      // cannot do for [^a] -> a (wrong).\n      if (!isMeta(value)) {\n        return;\n      }\n\n      value = getInverseMeta(value);\n    }\n\n    path.replace({\n      type: 'Char',\n      value: value,\n      kind: kind,\n      escaped: escaped || shouldEscape(value)\n    });\n  }\n};\n\nfunction isAppropriateChar(node) {\n  return node.type === 'Char' &&\n  // We don't extract [\\b] (backspace) since \\b has different\n  // semantics (word boundary).\n  node.value !== '\\\\b';\n}\n\nfunction isMeta(value) {\n  return (/^\\\\[dwsDWS]$/.test(value)\n  );\n}\n\nfunction getInverseMeta(value) {\n  return (/[dws]/.test(value) ? value.toUpperCase() : value.toLowerCase()\n  );\n}\n\nfunction hasAppropriateSiblings(path) {\n  var parent = path.parent,\n      index = path.index;\n\n\n  if (parent.type !== 'Alternative') {\n    return true;\n  }\n\n  var previousNode = parent.expressions[index - 1];\n  if (previousNode == null) {\n    return true;\n  }\n\n  // Don't optimized \\1[0] to \\10\n  if (previousNode.type === 'Backreference' && previousNode.kind === 'number') {\n    return false;\n  }\n\n  // Don't optimized \\2[0] to \\20\n  if (previousNode.type === 'Char' && previousNode.kind === 'decimal') {\n    return false;\n  }\n\n  return true;\n}\n\n// Note: \\{ and \\} are always preserved to avoid `a[{]2[}]` turning\n// into `a{2}`.\nfunction shouldEscape(value) {\n  return (/[*[()+?$./{}|]/.test(value)\n  );\n}","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to remove unnecessary escape.\n *\n * \\e -> e\n *\n * [\\(] -> [(]\n */\n\nmodule.exports = {\n  _hasXFlag: false,\n  init: function init(ast) {\n    this._hasXFlag = ast.flags.includes('x');\n  },\n  Char: function Char(path) {\n    var node = path.node;\n\n\n    if (!node.escaped) {\n      return;\n    }\n\n    if (shouldUnescape(path, this._hasXFlag)) {\n      delete node.escaped;\n    }\n  }\n};\n\nfunction shouldUnescape(path, hasXFlag) {\n  var value = path.node.value,\n      index = path.index,\n      parent = path.parent;\n\n  // In char class (, etc are allowed.\n\n  if (parent.type !== 'CharacterClass' && parent.type !== 'ClassRange') {\n    return !preservesEscape(value, index, parent, hasXFlag);\n  }\n\n  return !preservesInCharClass(value, index, parent);\n}\n\n/**\n * \\], \\\\, \\^, \\-\n */\nfunction preservesInCharClass(value, index, parent) {\n  if (value === '^') {\n    // Avoid [\\^a] turning into [^a]\n    return index === 0 && !parent.negative;\n  }\n  if (value === '-') {\n    // Avoid [a\\-z] turning into [a-z]\n    return true;\n  }\n  return (/[\\]\\\\]/.test(value)\n  );\n}\n\nfunction preservesEscape(value, index, parent, hasXFlag) {\n  if (value === '{') {\n    return preservesOpeningCurlyBraceEscape(index, parent);\n  }\n\n  if (value === '}') {\n    return preservesClosingCurlyBraceEscape(index, parent);\n  }\n\n  if (hasXFlag && /[ #]/.test(value)) {\n    return true;\n  }\n\n  return (/[*[()+?^$./\\\\|]/.test(value)\n  );\n}\n\nfunction consumeNumbers(startIndex, parent, rtl) {\n  var i = startIndex;\n  var siblingNode = (rtl ? i >= 0 : i < parent.expressions.length) && parent.expressions[i];\n\n  while (siblingNode && siblingNode.type === 'Char' && siblingNode.kind === 'simple' && !siblingNode.escaped && /\\d/.test(siblingNode.value)) {\n    rtl ? i-- : i++;\n    siblingNode = (rtl ? i >= 0 : i < parent.expressions.length) && parent.expressions[i];\n  }\n\n  return Math.abs(startIndex - i);\n}\n\nfunction isSimpleChar(node, value) {\n  return node && node.type === 'Char' && node.kind === 'simple' && !node.escaped && node.value === value;\n}\n\nfunction preservesOpeningCurlyBraceEscape(index, parent) {\n  // (?:\\{) -> (?:{)\n  if (index == null) {\n    return false;\n  }\n\n  var nbFollowingNumbers = consumeNumbers(index + 1, parent);\n  var i = index + nbFollowingNumbers + 1;\n  var nextSiblingNode = i < parent.expressions.length && parent.expressions[i];\n\n  if (nbFollowingNumbers) {\n    // Avoid \\{3} turning into {3}\n    if (isSimpleChar(nextSiblingNode, '}')) {\n      return true;\n    }\n\n    if (isSimpleChar(nextSiblingNode, ',')) {\n      nbFollowingNumbers = consumeNumbers(i + 1, parent);\n      i = i + nbFollowingNumbers + 1;\n      nextSiblingNode = i < parent.expressions.length && parent.expressions[i];\n\n      // Avoid \\{3,} turning into {3,}\n      return isSimpleChar(nextSiblingNode, '}');\n    }\n  }\n  return false;\n}\n\nfunction preservesClosingCurlyBraceEscape(index, parent) {\n  // (?:\\{) -> (?:{)\n  if (index == null) {\n    return false;\n  }\n\n  var nbPrecedingNumbers = consumeNumbers(index - 1, parent, true);\n  var i = index - nbPrecedingNumbers - 1;\n  var previousSiblingNode = i >= 0 && parent.expressions[i];\n\n  // Avoid {3\\} turning into {3}\n  if (nbPrecedingNumbers && isSimpleChar(previousSiblingNode, '{')) {\n    return true;\n  }\n\n  if (isSimpleChar(previousSiblingNode, ',')) {\n    nbPrecedingNumbers = consumeNumbers(i - 1, parent, true);\n    i = i - nbPrecedingNumbers - 1;\n    previousSiblingNode = i < parent.expressions.length && parent.expressions[i];\n\n    // Avoid {3,\\} turning into {3,}\n    return nbPrecedingNumbers && isSimpleChar(previousSiblingNode, '{');\n  }\n  return false;\n}","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to merge class ranges.\n *\n * [a-ec] -> [a-e]\n * [a-ec-e] -> [a-e]\n * [\\w\\da-f] -> [\\w]\n * [abcdef] -> [a-f]\n */\n\nmodule.exports = {\n  _hasIUFlags: false,\n  init: function init(ast) {\n    this._hasIUFlags = ast.flags.includes('i') && ast.flags.includes('u');\n  },\n  CharacterClass: function CharacterClass(path) {\n    var node = path.node;\n\n    var expressions = node.expressions;\n\n    var metas = [];\n    // Extract metas\n    expressions.forEach(function (expression) {\n      if (isMeta(expression)) {\n        metas.push(expression.value);\n      }\n    });\n\n    expressions.sort(sortCharClass);\n\n    for (var i = 0; i < expressions.length; i++) {\n      var expression = expressions[i];\n      if (fitsInMetas(expression, metas, this._hasIUFlags) || combinesWithPrecedingClassRange(expression, expressions[i - 1]) || combinesWithFollowingClassRange(expression, expressions[i + 1])) {\n        expressions.splice(i, 1);\n        i--;\n      } else {\n        var nbMergedChars = charCombinesWithPrecedingChars(expression, i, expressions);\n        expressions.splice(i - nbMergedChars + 1, nbMergedChars);\n        i -= nbMergedChars;\n      }\n    }\n  }\n};\n\n/**\n * Sorts expressions in char class in the following order:\n * - meta chars, ordered alphabetically by value\n * - chars (except `control` kind) and class ranges, ordered alphabetically (`from` char is used for class ranges)\n * - if ambiguous, class range comes before char\n * - if ambiguous between two class ranges, orders alphabetically by `to` char\n * - control chars, ordered alphabetically by value\n * @param {Object} a - Left Char or ClassRange node\n * @param {Object} b - Right Char or ClassRange node\n * @returns {number}\n */\nfunction sortCharClass(a, b) {\n  var aValue = getSortValue(a);\n  var bValue = getSortValue(b);\n\n  if (aValue === bValue) {\n    // We want ClassRange before Char\n    // [bb-d] -> [b-db]\n    if (a.type === 'ClassRange' && b.type !== 'ClassRange') {\n      return -1;\n    }\n    if (b.type === 'ClassRange' && a.type !== 'ClassRange') {\n      return 1;\n    }\n    if (a.type === 'ClassRange' && b.type === 'ClassRange') {\n      return getSortValue(a.to) - getSortValue(b.to);\n    }\n    if (isMeta(a) && isMeta(b) || isControl(a) && isControl(b)) {\n      return a.value < b.value ? -1 : 1;\n    }\n  }\n  return aValue - bValue;\n}\n\n/**\n * @param {Object} expression - Char or ClassRange node\n * @returns {number}\n */\nfunction getSortValue(expression) {\n  if (expression.type === 'Char') {\n    if (expression.value === '-') {\n      return Infinity;\n    }\n    if (expression.kind === 'control') {\n      return Infinity;\n    }\n    if (expression.kind === 'meta' && isNaN(expression.codePoint)) {\n      return -1;\n    }\n    return expression.codePoint;\n  }\n  // ClassRange\n  return expression.from.codePoint;\n}\n\n/**\n * Checks if a node is a meta char from the set \\d\\w\\s\\D\\W\\S\n * @param {Object} expression - Char or ClassRange node\n * @param {?string} value\n * @returns {boolean}\n */\nfunction isMeta(expression) {\n  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  return expression.type === 'Char' && expression.kind === 'meta' && (value ? expression.value === value : /^\\\\[dws]$/i.test(expression.value));\n}\n\n/**\n * @param {Object} expression - Char or ClassRange node\n * @returns {boolean}\n */\nfunction isControl(expression) {\n  return expression.type === 'Char' && expression.kind === 'control';\n}\n\n/**\n * @param {Object} expression - Char or ClassRange node\n * @param {string[]} metas - Array of meta chars, e.g. [\"\\\\w\", \"\\\\s\"]\n * @param {boolean} hasIUFlags\n * @returns {boolean}\n */\nfunction fitsInMetas(expression, metas, hasIUFlags) {\n  for (var i = 0; i < metas.length; i++) {\n    if (fitsInMeta(expression, metas[i], hasIUFlags)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * @param {Object} expression - Char or ClassRange node\n * @param {string} meta - e.g. \"\\\\w\"\n * @param {boolean} hasIUFlags\n * @returns {boolean}\n */\nfunction fitsInMeta(expression, meta, hasIUFlags) {\n  if (expression.type === 'ClassRange') {\n    return fitsInMeta(expression.from, meta, hasIUFlags) && fitsInMeta(expression.to, meta, hasIUFlags);\n  }\n\n  // Special cases:\n  // \\S contains \\w and \\d\n  if (meta === '\\\\S' && (isMeta(expression, '\\\\w') || isMeta(expression, '\\\\d'))) {\n    return true;\n  }\n  // \\D contains \\W and \\s\n  if (meta === '\\\\D' && (isMeta(expression, '\\\\W') || isMeta(expression, '\\\\s'))) {\n    return true;\n  }\n  // \\w contains \\d\n  if (meta === '\\\\w' && isMeta(expression, '\\\\d')) {\n    return true;\n  }\n  // \\W contains \\s\n  if (meta === '\\\\W' && isMeta(expression, '\\\\s')) {\n    return true;\n  }\n\n  if (expression.type !== 'Char' || isNaN(expression.codePoint)) {\n    return false;\n  }\n\n  if (meta === '\\\\s') {\n    return fitsInMetaS(expression);\n  }\n  if (meta === '\\\\S') {\n    return !fitsInMetaS(expression);\n  }\n  if (meta === '\\\\d') {\n    return fitsInMetaD(expression);\n  }\n  if (meta === '\\\\D') {\n    return !fitsInMetaD(expression);\n  }\n  if (meta === '\\\\w') {\n    return fitsInMetaW(expression, hasIUFlags);\n  }\n  if (meta === '\\\\W') {\n    return !fitsInMetaW(expression, hasIUFlags);\n  }\n  return false;\n}\n\n/**\n * @param {Object} expression - Char node with codePoint\n * @returns {boolean}\n */\nfunction fitsInMetaS(expression) {\n  return expression.codePoint === 0x0009 || // \\t\n  expression.codePoint === 0x000a || // \\n\n  expression.codePoint === 0x000b || // \\v\n  expression.codePoint === 0x000c || // \\f\n  expression.codePoint === 0x000d || // \\r\n  expression.codePoint === 0x0020 || // space\n  expression.codePoint === 0x00a0 || // nbsp\n  expression.codePoint === 0x1680 || // part of Zs\n  expression.codePoint >= 0x2000 && expression.codePoint <= 0x200a || // part of Zs\n  expression.codePoint === 0x2028 || // line separator\n  expression.codePoint === 0x2029 || // paragraph separator\n  expression.codePoint === 0x202f || // part of Zs\n  expression.codePoint === 0x205f || // part of Zs\n  expression.codePoint === 0x3000 || // part of Zs\n  expression.codePoint === 0xfeff; // zwnbsp\n}\n\n/**\n * @param {Object} expression - Char node with codePoint\n * @returns {boolean}\n */\nfunction fitsInMetaD(expression) {\n  return expression.codePoint >= 0x30 && expression.codePoint <= 0x39; // 0-9\n}\n\n/**\n * @param {Object} expression - Char node with codePoint\n * @param {boolean} hasIUFlags\n * @returns {boolean}\n */\nfunction fitsInMetaW(expression, hasIUFlags) {\n  return fitsInMetaD(expression) || expression.codePoint >= 0x41 && expression.codePoint <= 0x5a || // A-Z\n  expression.codePoint >= 0x61 && expression.codePoint <= 0x7a || // a-z\n  expression.value === '_' || hasIUFlags && (expression.codePoint === 0x017f || expression.codePoint === 0x212a);\n}\n\n/**\n * @param {Object} expression - Char or ClassRange node\n * @param {Object} classRange - Char or ClassRange node\n * @returns {boolean}\n */\nfunction combinesWithPrecedingClassRange(expression, classRange) {\n  if (classRange && classRange.type === 'ClassRange') {\n    if (fitsInClassRange(expression, classRange)) {\n      // [a-gc] -> [a-g]\n      // [a-gc-e] -> [a-g]\n      return true;\n    } else if (\n    // We only want \\w chars or char codes to keep readability\n    isMetaWCharOrCode(expression) && classRange.to.codePoint === expression.codePoint - 1) {\n      // [a-de] -> [a-e]\n      classRange.to = expression;\n      return true;\n    } else if (expression.type === 'ClassRange' && expression.from.codePoint <= classRange.to.codePoint + 1 && expression.to.codePoint >= classRange.from.codePoint - 1) {\n      // [a-db-f] -> [a-f]\n      // [b-fa-d] -> [a-f]\n      // [a-cd-f] -> [a-f]\n      if (expression.from.codePoint < classRange.from.codePoint) {\n        classRange.from = expression.from;\n      }\n      if (expression.to.codePoint > classRange.to.codePoint) {\n        classRange.to = expression.to;\n      }\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * @param {Object} expression - Char or ClassRange node\n * @param {Object} classRange - Char or ClassRange node\n * @returns {boolean}\n */\nfunction combinesWithFollowingClassRange(expression, classRange) {\n  if (classRange && classRange.type === 'ClassRange') {\n    // Considering the elements were ordered alphabetically,\n    // there is only one case to handle\n    // [ab-e] -> [a-e]\n    if (\n    // We only want \\w chars or char codes to keep readability\n    isMetaWCharOrCode(expression) && classRange.from.codePoint === expression.codePoint + 1) {\n      classRange.from = expression;\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * @param {Object} expression - Char or ClassRange node\n * @param {Object} classRange - ClassRange node\n * @returns {boolean}\n */\nfunction fitsInClassRange(expression, classRange) {\n  if (expression.type === 'Char' && isNaN(expression.codePoint)) {\n    return false;\n  }\n  if (expression.type === 'ClassRange') {\n    return fitsInClassRange(expression.from, classRange) && fitsInClassRange(expression.to, classRange);\n  }\n  return expression.codePoint >= classRange.from.codePoint && expression.codePoint <= classRange.to.codePoint;\n}\n\n/**\n * @param {Object} expression - Char or ClassRange node\n * @param {Number} index\n * @param {Object[]} expressions - expressions in CharClass\n * @returns {number} - Number of characters combined with expression\n */\nfunction charCombinesWithPrecedingChars(expression, index, expressions) {\n  // We only want \\w chars or char codes to keep readability\n  if (!isMetaWCharOrCode(expression)) {\n    return 0;\n  }\n  var nbMergedChars = 0;\n  while (index > 0) {\n    var currentExpression = expressions[index];\n    var precedingExpresion = expressions[index - 1];\n    if (isMetaWCharOrCode(precedingExpresion) && precedingExpresion.codePoint === currentExpression.codePoint - 1) {\n      nbMergedChars++;\n      index--;\n    } else {\n      break;\n    }\n  }\n\n  if (nbMergedChars > 1) {\n    expressions[index] = {\n      type: 'ClassRange',\n      from: expressions[index],\n      to: expression\n    };\n    return nbMergedChars;\n  }\n  return 0;\n}\n\nfunction isMetaWCharOrCode(expression) {\n  return expression && expression.type === 'Char' && !isNaN(expression.codePoint) && (fitsInMetaW(expression, false) || expression.kind === 'unicode' || expression.kind === 'hex' || expression.kind === 'oct' || expression.kind === 'decimal');\n}","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar NodePath = require('../../traverse/node-path');\n\nvar _require = require('../../transform/utils'),\n    disjunctionToList = _require.disjunctionToList,\n    listToDisjunction = _require.listToDisjunction;\n\n/**\n * Removes duplicates from a disjunction sequence:\n *\n * /(ab|bc|ab)+(xy|xy)+/ -> /(ab|bc)+(xy)+/\n */\n\n\nmodule.exports = {\n  Disjunction: function Disjunction(path) {\n    var node = path.node;\n\n    // Make unique nodes.\n\n    var uniqueNodesMap = {};\n\n    var parts = disjunctionToList(node).filter(function (part) {\n      var encoded = part ? NodePath.getForNode(part).jsonEncode() : 'null';\n\n      // Already recorded this part, filter out.\n      if (uniqueNodesMap.hasOwnProperty(encoded)) {\n        return false;\n      }\n\n      uniqueNodesMap[encoded] = part;\n      return true;\n    });\n\n    // Replace with the optimized disjunction.\n    path.replace(listToDisjunction(parts));\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to replace single char group disjunction to char group\n *\n * a|b|c -> [abc]\n * [12]|3|4 -> [1234]\n * (a|b|c) -> ([abc])\n * (?:a|b|c) -> [abc]\n */\n\nmodule.exports = {\n  Disjunction: function Disjunction(path) {\n    var node = path.node,\n        parent = path.parent;\n\n\n    if (!handlers[parent.type]) {\n      return;\n    }\n\n    var charset = new Map();\n\n    if (!shouldProcess(node, charset) || !charset.size) {\n      return;\n    }\n\n    var characterClass = {\n      type: 'CharacterClass',\n      expressions: Array.from(charset.keys()).sort().map(function (key) {\n        return charset.get(key);\n      })\n    };\n\n    handlers[parent.type](path.getParent(), characterClass);\n  }\n};\n\nvar handlers = {\n  RegExp: function RegExp(path, characterClass) {\n    var node = path.node;\n\n\n    node.body = characterClass;\n  },\n  Group: function Group(path, characterClass) {\n    var node = path.node;\n\n\n    if (node.capturing) {\n      node.expression = characterClass;\n    } else {\n      path.replace(characterClass);\n    }\n  }\n};\n\nfunction shouldProcess(expression, charset) {\n  if (!expression) {\n    // Abort on empty disjunction part\n    return false;\n  }\n\n  var type = expression.type;\n\n\n  if (type === 'Disjunction') {\n    var left = expression.left,\n        right = expression.right;\n\n\n    return shouldProcess(left, charset) && shouldProcess(right, charset);\n  } else if (type === 'Char') {\n    if (expression.kind === 'meta' && expression.symbol === '.') {\n      return false;\n    }\n\n    var value = expression.value;\n\n\n    charset.set(value, expression);\n\n    return true;\n  } else if (type === 'CharacterClass' && !expression.negative) {\n    return expression.expressions.every(function (expression) {\n      return shouldProcess(expression, charset);\n    });\n  }\n\n  return false;\n}","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to remove non-capturing empty groups.\n *\n * /(?:)a/ -> /a/\n * /a|(?:)/ -> /a|/\n */\n\nmodule.exports = {\n  Group: function Group(path) {\n    var node = path.node,\n        parent = path.parent;\n\n    var childPath = path.getChild();\n\n    if (node.capturing || childPath) {\n      return;\n    }\n\n    if (parent.type === 'Repetition') {\n\n      path.getParent().replace(node);\n    } else if (parent.type !== 'RegExp') {\n\n      path.remove();\n    }\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to remove unnecessary groups.\n *\n * /(?:a)/ -> /a/\n */\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nmodule.exports = {\n  Group: function Group(path) {\n    var node = path.node,\n        parent = path.parent;\n\n    var childPath = path.getChild();\n\n    if (node.capturing || !childPath) {\n      return;\n    }\n\n    // Don't optimize \\1(?:0) to \\10\n    if (!hasAppropriateSiblings(path)) {\n      return;\n    }\n\n    // Don't optimize /a(?:b|c)/ to /ab|c/\n    // but /(?:b|c)/ to /b|c/ is ok\n    if (childPath.node.type === 'Disjunction' && parent.type !== 'RegExp') {\n      return;\n    }\n\n    // Don't optimize /(?:ab)+/ to /ab+/\n    // but /(?:a)+/ to /a+/ is ok\n    // and /(?:[a-d])+/ to /[a-d]+/ is ok too\n    if (parent.type === 'Repetition' && childPath.node.type !== 'Char' && childPath.node.type !== 'CharacterClass') {\n      return;\n    }\n\n    if (childPath.node.type === 'Alternative') {\n      var parentPath = path.getParent();\n      if (parentPath.node.type === 'Alternative') {\n        // /abc(?:def)ghi/ When (?:def) is ungrouped its content must be merged with parent alternative\n\n        parentPath.replace({\n          type: 'Alternative',\n          expressions: [].concat(_toConsumableArray(parent.expressions.slice(0, path.index)), _toConsumableArray(childPath.node.expressions), _toConsumableArray(parent.expressions.slice(path.index + 1)))\n        });\n      }\n    } else {\n      path.replace(childPath.node);\n    }\n  }\n};\n\nfunction hasAppropriateSiblings(path) {\n  var parent = path.parent,\n      index = path.index;\n\n\n  if (parent.type !== 'Alternative') {\n    return true;\n  }\n\n  var previousNode = parent.expressions[index - 1];\n  if (previousNode == null) {\n    return true;\n  }\n\n  // Don't optimized \\1(?:0) to \\10\n  if (previousNode.type === 'Backreference' && previousNode.kind === 'number') {\n    return false;\n  }\n\n  // Don't optimized \\2(?:0) to \\20\n  if (previousNode.type === 'Char' && previousNode.kind === 'decimal') {\n    return false;\n  }\n\n  return true;\n}","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar NodePath = require('../../traverse/node-path');\n\nvar _require = require('../../transform/utils'),\n    increaseQuantifierByOne = _require.increaseQuantifierByOne;\n\n/**\n * A regexp-tree plugin to combine repeating patterns.\n *\n * /^abcabcabc/ -> /^abc{3}/\n * /^(?:abc){2}abc/ -> /^(?:abc){3}/\n * /^abc(?:abc){2}/ -> /^(?:abc){3}/\n */\n\nmodule.exports = {\n  Alternative: function Alternative(path) {\n    var node = path.node;\n\n    // We can skip the first child\n\n    var index = 1;\n    while (index < node.expressions.length) {\n      var child = path.getChild(index);\n      index = Math.max(1, combineRepeatingPatternLeft(path, child, index));\n\n      if (index >= node.expressions.length) {\n        break;\n      }\n\n      child = path.getChild(index);\n      index = Math.max(1, combineWithPreviousRepetition(path, child, index));\n\n      if (index >= node.expressions.length) {\n        break;\n      }\n\n      child = path.getChild(index);\n      index = Math.max(1, combineRepetitionWithPrevious(path, child, index));\n\n      index++;\n    }\n  }\n};\n\n// abcabc -> (?:abc){2}\nfunction combineRepeatingPatternLeft(alternative, child, index) {\n  var node = alternative.node;\n\n\n  var nbPossibleLengths = Math.ceil(index / 2);\n  var i = 0;\n\n  while (i < nbPossibleLengths) {\n    var startIndex = index - 2 * i - 1;\n    var right = void 0,\n        left = void 0;\n\n    if (i === 0) {\n      right = child;\n      left = alternative.getChild(startIndex);\n    } else {\n      right = NodePath.getForNode({\n        type: 'Alternative',\n        expressions: [].concat(_toConsumableArray(node.expressions.slice(index - i, index)), [child.node])\n      });\n\n      left = NodePath.getForNode({\n        type: 'Alternative',\n        expressions: [].concat(_toConsumableArray(node.expressions.slice(startIndex, index - i)))\n      });\n    }\n\n    if (right.hasEqualSource(left)) {\n      for (var j = 0; j < 2 * i + 1; j++) {\n        alternative.getChild(startIndex).remove();\n      }\n\n      child.replace({\n        type: 'Repetition',\n        expression: i === 0 && right.node.type !== 'Repetition' ? right.node : {\n          type: 'Group',\n          capturing: false,\n          expression: right.node\n        },\n        quantifier: {\n          type: 'Quantifier',\n          kind: 'Range',\n          from: 2,\n          to: 2,\n          greedy: true\n        }\n      });\n      return startIndex;\n    }\n\n    i++;\n  }\n\n  return index;\n}\n\n// (?:abc){2}abc -> (?:abc){3}\nfunction combineWithPreviousRepetition(alternative, child, index) {\n  var node = alternative.node;\n\n\n  var i = 0;\n  while (i < index) {\n    var previousChild = alternative.getChild(i);\n\n    if (previousChild.node.type === 'Repetition' && previousChild.node.quantifier.greedy) {\n      var left = previousChild.getChild();\n      var right = void 0;\n\n      if (left.node.type === 'Group' && !left.node.capturing) {\n        left = left.getChild();\n      }\n\n      if (i + 1 === index) {\n        right = child;\n        if (right.node.type === 'Group' && !right.node.capturing) {\n          right = right.getChild();\n        }\n      } else {\n        right = NodePath.getForNode({\n          type: 'Alternative',\n          expressions: [].concat(_toConsumableArray(node.expressions.slice(i + 1, index + 1)))\n        });\n      }\n\n      if (left.hasEqualSource(right)) {\n        for (var j = i; j < index; j++) {\n          alternative.getChild(i + 1).remove();\n        }\n\n        increaseQuantifierByOne(previousChild.node.quantifier);\n\n        return i;\n      }\n    }\n\n    i++;\n  }\n  return index;\n}\n\n// abc(?:abc){2} -> (?:abc){3}\nfunction combineRepetitionWithPrevious(alternative, child, index) {\n  var node = alternative.node;\n\n\n  if (child.node.type === 'Repetition' && child.node.quantifier.greedy) {\n    var right = child.getChild();\n    var left = void 0;\n\n    if (right.node.type === 'Group' && !right.node.capturing) {\n      right = right.getChild();\n    }\n\n    var rightLength = void 0;\n    if (right.node.type === 'Alternative') {\n      rightLength = right.node.expressions.length;\n      left = NodePath.getForNode({\n        type: 'Alternative',\n        expressions: [].concat(_toConsumableArray(node.expressions.slice(index - rightLength, index)))\n      });\n    } else {\n      rightLength = 1;\n      left = alternative.getChild(index - 1);\n      if (left.node.type === 'Group' && !left.node.capturing) {\n        left = left.getChild();\n      }\n    }\n\n    if (left.hasEqualSource(right)) {\n      for (var j = index - rightLength; j < index; j++) {\n        alternative.getChild(index - rightLength).remove();\n      }\n\n      increaseQuantifierByOne(child.node.quantifier);\n\n      return index - rightLength;\n    }\n  }\n  return index;\n}","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nmodule.exports = new Map([\n// \\ud83d\\ude80 -> \\u{1f680}\n['charSurrogatePairToSingleUnicode', require('./char-surrogate-pair-to-single-unicode-transform')],\n\n// \\u0061 -> a\n['charCodeToSimpleChar', require('./char-code-to-simple-char-transform')],\n\n// /Aa/i -> /aa/i\n['charCaseInsensitiveLowerCaseTransform', require('./char-case-insensitive-lowercase-transform')],\n\n// [\\d\\d] -> [\\d]\n['charClassRemoveDuplicates', require('./char-class-remove-duplicates-transform')],\n\n// a{1,2}a{2,3} -> a{3,5}\n['quantifiersMerge', require('./quantifiers-merge-transform')],\n\n// a{1,} -> a+, a{3,3} -> a{3}, a{1} -> a\n['quantifierRangeToSymbol', require('./quantifier-range-to-symbol-transform')],\n\n// [a-a] -> [a], [a-b] -> [ab]\n['charClassClassrangesToChars', require('./char-class-classranges-to-chars-transform')],\n\n// [0-9] -> [\\d]\n['charClassToMeta', require('./char-class-to-meta-transform')],\n\n// [\\d] -> \\d, [^\\w] -> \\W\n['charClassToSingleChar', require('./char-class-to-single-char-transform')],\n\n// \\e -> e\n['charEscapeUnescape', require('./char-escape-unescape-transform')],\n\n// [a-de-f] -> [a-f]\n['charClassClassrangesMerge', require('./char-class-classranges-merge-transform')],\n\n// (ab|ab) -> (ab)\n['disjunctionRemoveDuplicates', require('./disjunction-remove-duplicates-transform')],\n\n// (a|b|c) -> [abc]\n['groupSingleCharsToCharClass', require('./group-single-chars-to-char-class')],\n\n// (?:)a -> a\n['removeEmptyGroup', require('./remove-empty-group-transform')],\n\n// (?:a) -> a\n['ungroup', require('./ungroup-transform')],\n\n// abcabcabc -> (?:abc){3}\n['combineRepeatingPatterns', require('./combine-repeating-patterns-transform')]]);","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar clone = require('../utils/clone');\nvar parser = require('../parser');\nvar transform = require('../transform');\nvar optimizationTransforms = require('./transforms');\n\nmodule.exports = {\n  /**\n   * Optimizer transforms a regular expression into an optimized version,\n   * replacing some sub-expressions with their idiomatic patterns.\n   *\n   * @param string | RegExp | AST - a regexp to optimize.\n   *\n   * @return TransformResult - an optimized regexp.\n   *\n   * Example:\n   *\n   *   /[a-zA-Z_0-9][a-zA-Z_0-9]*\\e{1,}/\n   *\n   * Optimized to:\n   *\n   *   /\\w+e+/\n   */\n  optimize: function optimize(regexp) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$whitelist = _ref.whitelist,\n        whitelist = _ref$whitelist === undefined ? [] : _ref$whitelist,\n        _ref$blacklist = _ref.blacklist,\n        blacklist = _ref$blacklist === undefined ? [] : _ref$blacklist;\n\n    var transformsRaw = whitelist.length > 0 ? whitelist : Array.from(optimizationTransforms.keys());\n\n    var transformToApply = transformsRaw.filter(function (transform) {\n      return !blacklist.includes(transform);\n    });\n\n    var ast = regexp;\n    if (regexp instanceof RegExp) {\n      regexp = '' + regexp;\n    }\n\n    if (typeof regexp === 'string') {\n      ast = parser.parse(regexp);\n    }\n\n    var result = new transform.TransformResult(ast);\n    var prevResultString = void 0;\n\n    do {\n      // Get a copy of the current state here so\n      // we can compare it with the state at the\n      // end of the loop.\n      prevResultString = result.toString();\n      ast = clone(result.getAST());\n\n      transformToApply.forEach(function (transformName) {\n        if (!optimizationTransforms.has(transformName)) {\n          throw new Error('Unknown optimization-transform: ' + transformName + '. ' + 'Available transforms are: ' + Array.from(optimizationTransforms.keys()).join(', '));\n        }\n\n        var transformer = optimizationTransforms.get(transformName);\n\n        // Don't override result just yet since we\n        // might want to rollback the transform\n        var newResult = transform.transform(ast, transformer);\n\n        if (newResult.toString() !== result.toString()) {\n          if (newResult.toString().length <= result.toString().length) {\n            result = newResult;\n          } else {\n            // Result has changed but is not shorter:\n            // restore ast to its previous state.\n\n            ast = clone(result.getAST());\n          }\n        }\n      });\n\n      // Keep running the optimizer until it stops\n      // making any change to the regexp.\n    } while (result.toString() !== prevResultString);\n\n    return result;\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * Epsilon, the empty string.\n */\n\nvar EPSILON = 'ε';\n\n/**\n * Epsilon-closure.\n */\nvar EPSILON_CLOSURE = EPSILON + '*';\n\nmodule.exports = {\n  EPSILON: EPSILON,\n  EPSILON_CLOSURE: EPSILON_CLOSURE\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _require = require('../special-symbols'),\n    EPSILON = _require.EPSILON,\n    EPSILON_CLOSURE = _require.EPSILON_CLOSURE;\n\n/**\n * NFA fragment.\n *\n * NFA sub-fragments can be combined to a larger NFAs building\n * the resulting machine. Combining the fragments is done by patching\n * edges of the in- and out-states.\n *\n * 2-states implementation, `in`, and `out`. Eventually all transitions\n * go to the same `out`, which can further be connected via ε-transition\n * with other fragment.\n */\n\n\nvar NFA = function () {\n  function NFA(inState, outState) {\n    _classCallCheck(this, NFA);\n\n    this.in = inState;\n    this.out = outState;\n  }\n\n  /**\n   * Tries to recognize a string based on this NFA fragment.\n   */\n\n\n  _createClass(NFA, [{\n    key: 'matches',\n    value: function matches(string) {\n      return this.in.matches(string);\n    }\n\n    /**\n     * Returns an alphabet for this NFA.\n     */\n\n  }, {\n    key: 'getAlphabet',\n    value: function getAlphabet() {\n      if (!this._alphabet) {\n        this._alphabet = new Set();\n        var table = this.getTransitionTable();\n        for (var state in table) {\n          var transitions = table[state];\n          for (var symbol in transitions) {\n            if (symbol !== EPSILON_CLOSURE) {\n              this._alphabet.add(symbol);\n            }\n          }\n        }\n      }\n      return this._alphabet;\n    }\n\n    /**\n     * Returns set of accepting states.\n     */\n\n  }, {\n    key: 'getAcceptingStates',\n    value: function getAcceptingStates() {\n      if (!this._acceptingStates) {\n        // States are determined during table construction.\n        this.getTransitionTable();\n      }\n      return this._acceptingStates;\n    }\n\n    /**\n     * Returns accepting state numbers.\n     */\n\n  }, {\n    key: 'getAcceptingStateNumbers',\n    value: function getAcceptingStateNumbers() {\n      if (!this._acceptingStateNumbers) {\n        this._acceptingStateNumbers = new Set();\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = this.getAcceptingStates()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var acceptingState = _step.value;\n\n            this._acceptingStateNumbers.add(acceptingState.number);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n      return this._acceptingStateNumbers;\n    }\n\n    /**\n     * Builds and returns transition table.\n     */\n\n  }, {\n    key: 'getTransitionTable',\n    value: function getTransitionTable() {\n      var _this = this;\n\n      if (!this._transitionTable) {\n        this._transitionTable = {};\n        this._acceptingStates = new Set();\n\n        var visited = new Set();\n        var symbols = new Set();\n\n        var visitState = function visitState(state) {\n          if (visited.has(state)) {\n            return;\n          }\n\n          visited.add(state);\n          state.number = visited.size;\n          _this._transitionTable[state.number] = {};\n\n          if (state.accepting) {\n            _this._acceptingStates.add(state);\n          }\n\n          var transitions = state.getTransitions();\n\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = transitions[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var _ref = _step2.value;\n\n              var _ref2 = _slicedToArray(_ref, 2);\n\n              var symbol = _ref2[0];\n              var symbolTransitions = _ref2[1];\n\n              var combinedState = [];\n              symbols.add(symbol);\n              var _iteratorNormalCompletion3 = true;\n              var _didIteratorError3 = false;\n              var _iteratorError3 = undefined;\n\n              try {\n                for (var _iterator3 = symbolTransitions[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                  var nextState = _step3.value;\n\n                  visitState(nextState);\n                  combinedState.push(nextState.number);\n                }\n              } catch (err) {\n                _didIteratorError3 = true;\n                _iteratorError3 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                    _iterator3.return();\n                  }\n                } finally {\n                  if (_didIteratorError3) {\n                    throw _iteratorError3;\n                  }\n                }\n              }\n\n              _this._transitionTable[state.number][symbol] = combinedState;\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n        };\n\n        // Traverse the graph starting from the `in`.\n        visitState(this.in);\n\n        // Append epsilon-closure column.\n        visited.forEach(function (state) {\n          delete _this._transitionTable[state.number][EPSILON];\n          _this._transitionTable[state.number][EPSILON_CLOSURE] = [].concat(_toConsumableArray(state.getEpsilonClosure())).map(function (s) {\n            return s.number;\n          });\n        });\n      }\n\n      return this._transitionTable;\n    }\n  }]);\n\n  return NFA;\n}();\n\nmodule.exports = NFA;","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n// DFA minization.\n\n/**\n * Map from state to current set it goes.\n */\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nfunction _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar currentTransitionMap = null;\n\n/**\n * Takes a DFA, and returns a minimized version of it\n * compressing some states to groups (using standard, 0-, 1-,\n * 2-, ... N-equivalence algorithm).\n */\nfunction minimize(dfa) {\n  var table = dfa.getTransitionTable();\n  var allStates = Object.keys(table);\n  var alphabet = dfa.getAlphabet();\n  var accepting = dfa.getAcceptingStateNumbers();\n\n  currentTransitionMap = {};\n\n  var nonAccepting = new Set();\n\n  allStates.forEach(function (state) {\n    state = Number(state);\n    var isAccepting = accepting.has(state);\n\n    if (isAccepting) {\n      currentTransitionMap[state] = accepting;\n    } else {\n      nonAccepting.add(state);\n      currentTransitionMap[state] = nonAccepting;\n    }\n  });\n\n  // ---------------------------------------------------------------------------\n  // Step 1: build equivalent sets.\n\n  // All [1..N] equivalent sets.\n  var all = [\n  // 0-equivalent sets.\n  [nonAccepting, accepting].filter(function (set) {\n    return set.size > 0;\n  })];\n\n  var current = void 0;\n  var previous = void 0;\n\n  // Top of the stack is the current list of sets to analyze.\n  current = all[all.length - 1];\n\n  // Previous set (to check whether we need to stop).\n  previous = all[all.length - 2];\n\n  // Until we'll not have the same N and N-1 equivalent rows.\n\n  var _loop = function _loop() {\n    var newTransitionMap = {};\n\n    var _iteratorNormalCompletion3 = true;\n    var _didIteratorError3 = false;\n    var _iteratorError3 = undefined;\n\n    try {\n      for (var _iterator3 = current[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n        var _set = _step3.value;\n\n        // Handled states for this set.\n        var handledStates = {};\n\n        var _set2 = _toArray(_set),\n            first = _set2[0],\n            rest = _set2.slice(1);\n\n        handledStates[first] = new Set([first]);\n\n        // Have to compare each from the rest states with\n        // the already handled states, and see if they are equivalent.\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n          restSets: for (var _iterator4 = rest[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var state = _step4.value;\n            var _iteratorNormalCompletion5 = true;\n            var _didIteratorError5 = false;\n            var _iteratorError5 = undefined;\n\n            try {\n              for (var _iterator5 = Object.keys(handledStates)[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                var handledState = _step5.value;\n\n                // This and some previously handled state are equivalent --\n                // just append this state to the same set.\n                if (areEquivalent(state, handledState, table, alphabet)) {\n                  handledStates[handledState].add(state);\n                  handledStates[state] = handledStates[handledState];\n                  continue restSets;\n                }\n              }\n              // Else, this state is not equivalent to any of the\n              // handled states -- allocate a new set for it.\n            } catch (err) {\n              _didIteratorError5 = true;\n              _iteratorError5 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                  _iterator5.return();\n                }\n              } finally {\n                if (_didIteratorError5) {\n                  throw _iteratorError5;\n                }\n              }\n            }\n\n            handledStates[state] = new Set([state]);\n          }\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion4 && _iterator4.return) {\n              _iterator4.return();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n\n        // Add these handled states to all states map.\n\n\n        Object.assign(newTransitionMap, handledStates);\n      }\n\n      // Update current transition map for the handled row.\n    } catch (err) {\n      _didIteratorError3 = true;\n      _iteratorError3 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion3 && _iterator3.return) {\n          _iterator3.return();\n        }\n      } finally {\n        if (_didIteratorError3) {\n          throw _iteratorError3;\n        }\n      }\n    }\n\n    currentTransitionMap = newTransitionMap;\n\n    var newSets = new Set(Object.keys(newTransitionMap).map(function (state) {\n      return newTransitionMap[state];\n    }));\n\n    all.push([].concat(_toConsumableArray(newSets)));\n\n    // Top of the stack is the current.\n    current = all[all.length - 1];\n\n    // Previous set.\n    previous = all[all.length - 2];\n  };\n\n  while (!sameRow(current, previous)) {\n    _loop();\n  }\n\n  // ---------------------------------------------------------------------------\n  // Step 2: build minimized table from the equivalent sets.\n\n  // Remap state numbers from sets to index-based.\n  var remaped = new Map();\n  var idx = 1;\n  current.forEach(function (set) {\n    return remaped.set(set, idx++);\n  });\n\n  // Build the minimized table from the calculated equivalent sets.\n  var minimizedTable = {};\n\n  var minimizedAcceptingStates = new Set();\n\n  var updateAcceptingStates = function updateAcceptingStates(set, idx) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = set[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var state = _step.value;\n\n        if (accepting.has(state)) {\n          minimizedAcceptingStates.add(idx);\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  };\n\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = remaped.entries()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _ref = _step2.value;\n\n      var _ref2 = _slicedToArray(_ref, 2);\n\n      var set = _ref2[0];\n      var _idx = _ref2[1];\n\n      minimizedTable[_idx] = {};\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = alphabet[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var symbol = _step6.value;\n\n          updateAcceptingStates(set, _idx);\n\n          // Determine original transition for this symbol from the set.\n          var originalTransition = void 0;\n          var _iteratorNormalCompletion7 = true;\n          var _didIteratorError7 = false;\n          var _iteratorError7 = undefined;\n\n          try {\n            for (var _iterator7 = set[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n              var originalState = _step7.value;\n\n              originalTransition = table[originalState][symbol];\n              if (originalTransition) {\n                break;\n              }\n            }\n          } catch (err) {\n            _didIteratorError7 = true;\n            _iteratorError7 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion7 && _iterator7.return) {\n                _iterator7.return();\n              }\n            } finally {\n              if (_didIteratorError7) {\n                throw _iteratorError7;\n              }\n            }\n          }\n\n          if (originalTransition) {\n            minimizedTable[_idx][symbol] = remaped.get(currentTransitionMap[originalTransition]);\n          }\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n    }\n\n    // Update the table, and accepting states on the original DFA.\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  dfa.setTransitionTable(minimizedTable);\n  dfa.setAcceptingStateNumbers(minimizedAcceptingStates);\n\n  return dfa;\n}\n\nfunction sameRow(r1, r2) {\n  if (!r2) {\n    return false;\n  }\n\n  if (r1.length !== r2.length) {\n    return false;\n  }\n\n  for (var i = 0; i < r1.length; i++) {\n    var s1 = r1[i];\n    var s2 = r2[i];\n\n    if (s1.size !== s2.size) {\n      return false;\n    }\n\n    if ([].concat(_toConsumableArray(s1)).sort().join(',') !== [].concat(_toConsumableArray(s2)).sort().join(',')) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Checks whether two states are N-equivalent, i.e. whether they go\n * to the same set on a symbol.\n */\nfunction areEquivalent(s1, s2, table, alphabet) {\n  var _iteratorNormalCompletion8 = true;\n  var _didIteratorError8 = false;\n  var _iteratorError8 = undefined;\n\n  try {\n    for (var _iterator8 = alphabet[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n      var symbol = _step8.value;\n\n      if (!goToSameSet(s1, s2, table, symbol)) {\n        return false;\n      }\n    }\n  } catch (err) {\n    _didIteratorError8 = true;\n    _iteratorError8 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion8 && _iterator8.return) {\n        _iterator8.return();\n      }\n    } finally {\n      if (_didIteratorError8) {\n        throw _iteratorError8;\n      }\n    }\n  }\n\n  return true;\n}\n\n/**\n * Checks whether states go to the same set.\n */\nfunction goToSameSet(s1, s2, table, symbol) {\n  if (!currentTransitionMap[s1] || !currentTransitionMap[s2]) {\n    return false;\n  }\n\n  var originalTransitionS1 = table[s1][symbol];\n  var originalTransitionS2 = table[s2][symbol];\n\n  // If no actual transition on this symbol, treat it as positive.\n  if (!originalTransitionS1 && !originalTransitionS2) {\n    return true;\n  }\n\n  // Otherwise, check if they are in the same sets.\n  return currentTransitionMap[s1].has(originalTransitionS1) && currentTransitionMap[s2].has(originalTransitionS2);\n}\n\nmodule.exports = {\n  minimize: minimize\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DFAMinimizer = require('./dfa-minimizer');\n\nvar _require = require('../special-symbols'),\n    EPSILON_CLOSURE = _require.EPSILON_CLOSURE;\n\n/**\n * DFA is build by converting from NFA (subset construction).\n */\n\n\nvar DFA = function () {\n  function DFA(nfa) {\n    _classCallCheck(this, DFA);\n\n    this._nfa = nfa;\n  }\n\n  /**\n   * Minimizes DFA.\n   */\n\n\n  _createClass(DFA, [{\n    key: 'minimize',\n    value: function minimize() {\n      this.getTransitionTable();\n\n      this._originalAcceptingStateNumbers = this._acceptingStateNumbers;\n      this._originalTransitionTable = this._transitionTable;\n\n      DFAMinimizer.minimize(this);\n    }\n\n    /**\n     * Returns alphabet for this DFA.\n     */\n\n  }, {\n    key: 'getAlphabet',\n    value: function getAlphabet() {\n      return this._nfa.getAlphabet();\n    }\n\n    /**\n     * Returns accepting states.\n     */\n\n  }, {\n    key: 'getAcceptingStateNumbers',\n    value: function getAcceptingStateNumbers() {\n      if (!this._acceptingStateNumbers) {\n        // Accepting states are determined during table construction.\n        this.getTransitionTable();\n      }\n\n      return this._acceptingStateNumbers;\n    }\n\n    /**\n     * Returns original accepting states.\n     */\n\n  }, {\n    key: 'getOriginaAcceptingStateNumbers',\n    value: function getOriginaAcceptingStateNumbers() {\n      if (!this._originalAcceptingStateNumbers) {\n        // Accepting states are determined during table construction.\n        this.getTransitionTable();\n      }\n\n      return this._originalAcceptingStateNumbers;\n    }\n\n    /**\n     * Sets transition table.\n     */\n\n  }, {\n    key: 'setTransitionTable',\n    value: function setTransitionTable(table) {\n      this._transitionTable = table;\n    }\n\n    /**\n     * Sets accepting states.\n     */\n\n  }, {\n    key: 'setAcceptingStateNumbers',\n    value: function setAcceptingStateNumbers(stateNumbers) {\n      this._acceptingStateNumbers = stateNumbers;\n    }\n\n    /**\n     * DFA transition table is built from NFA table.\n     */\n\n  }, {\n    key: 'getTransitionTable',\n    value: function getTransitionTable() {\n      var _this = this;\n\n      if (this._transitionTable) {\n        return this._transitionTable;\n      }\n\n      // Calculate from NFA transition table.\n      var nfaTable = this._nfa.getTransitionTable();\n      var nfaStates = Object.keys(nfaTable);\n\n      this._acceptingStateNumbers = new Set();\n\n      // Start state of DFA is E(S[nfa])\n      var startState = nfaTable[nfaStates[0]][EPSILON_CLOSURE];\n\n      // Init the worklist (states which should be in the DFA).\n      var worklist = [startState];\n\n      var alphabet = this.getAlphabet();\n      var nfaAcceptingStates = this._nfa.getAcceptingStateNumbers();\n\n      var dfaTable = {};\n\n      // Determine whether the combined DFA state is accepting.\n      var updateAcceptingStates = function updateAcceptingStates(states) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = nfaAcceptingStates[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var nfaAcceptingState = _step.value;\n\n            // If any of the states from NFA is accepting, DFA's\n            // state is accepting as well.\n            if (states.indexOf(nfaAcceptingState) !== -1) {\n              _this._acceptingStateNumbers.add(states.join(','));\n              break;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      };\n\n      while (worklist.length > 0) {\n        var states = worklist.shift();\n        var dfaStateLabel = states.join(',');\n        dfaTable[dfaStateLabel] = {};\n\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = alphabet[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var symbol = _step2.value;\n\n            var onSymbol = [];\n\n            // Determine whether the combined state is accepting.\n            updateAcceptingStates(states);\n\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n              for (var _iterator3 = states[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var state = _step3.value;\n\n                var nfaStatesOnSymbol = nfaTable[state][symbol];\n                if (!nfaStatesOnSymbol) {\n                  continue;\n                }\n\n                var _iteratorNormalCompletion4 = true;\n                var _didIteratorError4 = false;\n                var _iteratorError4 = undefined;\n\n                try {\n                  for (var _iterator4 = nfaStatesOnSymbol[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                    var nfaStateOnSymbol = _step4.value;\n\n                    if (!nfaTable[nfaStateOnSymbol]) {\n                      continue;\n                    }\n                    onSymbol.push.apply(onSymbol, _toConsumableArray(nfaTable[nfaStateOnSymbol][EPSILON_CLOSURE]));\n                  }\n                } catch (err) {\n                  _didIteratorError4 = true;\n                  _iteratorError4 = err;\n                } finally {\n                  try {\n                    if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                      _iterator4.return();\n                    }\n                  } finally {\n                    if (_didIteratorError4) {\n                      throw _iteratorError4;\n                    }\n                  }\n                }\n              }\n            } catch (err) {\n              _didIteratorError3 = true;\n              _iteratorError3 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                  _iterator3.return();\n                }\n              } finally {\n                if (_didIteratorError3) {\n                  throw _iteratorError3;\n                }\n              }\n            }\n\n            var dfaStatesOnSymbolSet = new Set(onSymbol);\n            var dfaStatesOnSymbol = [].concat(_toConsumableArray(dfaStatesOnSymbolSet));\n\n            if (dfaStatesOnSymbol.length > 0) {\n              var dfaOnSymbolStr = dfaStatesOnSymbol.join(',');\n\n              dfaTable[dfaStateLabel][symbol] = dfaOnSymbolStr;\n\n              if (!dfaTable.hasOwnProperty(dfaOnSymbolStr)) {\n                worklist.unshift(dfaStatesOnSymbol);\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n\n      return this._transitionTable = this._remapStateNumbers(dfaTable);\n    }\n\n    /**\n     * Remaps state numbers in the resulting table:\n     * combined states '1,2,3' -> 1, '3,4' -> 2, etc.\n     */\n\n  }, {\n    key: '_remapStateNumbers',\n    value: function _remapStateNumbers(calculatedDFATable) {\n      var newStatesMap = {};\n\n      this._originalTransitionTable = calculatedDFATable;\n      var transitionTable = {};\n\n      Object.keys(calculatedDFATable).forEach(function (originalNumber, newNumber) {\n        newStatesMap[originalNumber] = newNumber + 1;\n      });\n\n      for (var originalNumber in calculatedDFATable) {\n        var originalRow = calculatedDFATable[originalNumber];\n        var row = {};\n\n        for (var symbol in originalRow) {\n          row[symbol] = newStatesMap[originalRow[symbol]];\n        }\n\n        transitionTable[newStatesMap[originalNumber]] = row;\n      }\n\n      // Remap accepting states.\n      this._originalAcceptingStateNumbers = this._acceptingStateNumbers;\n      this._acceptingStateNumbers = new Set();\n\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = this._originalAcceptingStateNumbers[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var _originalNumber = _step5.value;\n\n          this._acceptingStateNumbers.add(newStatesMap[_originalNumber]);\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      return transitionTable;\n    }\n\n    /**\n     * Returns original DFA table, where state numbers\n     * are combined numbers from NFA.\n     */\n\n  }, {\n    key: 'getOriginalTransitionTable',\n    value: function getOriginalTransitionTable() {\n      if (!this._originalTransitionTable) {\n        // Original table is determined during table construction.\n        this.getTransitionTable();\n      }\n      return this._originalTransitionTable;\n    }\n\n    /**\n     * Checks whether this DFA accepts a string.\n     */\n\n  }, {\n    key: 'matches',\n    value: function matches(string) {\n      var state = 1;\n      var i = 0;\n      var table = this.getTransitionTable();\n\n      while (string[i]) {\n        state = table[state][string[i++]];\n        if (!state) {\n          return false;\n        }\n      }\n\n      if (!this.getAcceptingStateNumbers().has(state)) {\n        return false;\n      }\n\n      return true;\n    }\n  }]);\n\n  return DFA;\n}();\n\nmodule.exports = DFA;","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A generic FA State class (base for NFA and DFA).\n *\n * Maintains the transition map, and the flag whether\n * the state is accepting.\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar State = function () {\n  function State() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$accepting = _ref.accepting,\n        accepting = _ref$accepting === undefined ? false : _ref$accepting;\n\n    _classCallCheck(this, State);\n\n    /**\n     * Outgoing transitions to other states.\n     */\n    this._transitions = new Map();\n\n    /**\n     * Whether the state is accepting.\n     */\n    this.accepting = accepting;\n  }\n\n  /**\n   * Returns transitions for this state.\n   */\n\n\n  _createClass(State, [{\n    key: 'getTransitions',\n    value: function getTransitions() {\n      return this._transitions;\n    }\n\n    /**\n     * Creates a transition on symbol.\n     */\n\n  }, {\n    key: 'addTransition',\n    value: function addTransition(symbol, toState) {\n      this.getTransitionsOnSymbol(symbol).add(toState);\n      return this;\n    }\n\n    /**\n     * Returns transitions set on symbol.\n     */\n\n  }, {\n    key: 'getTransitionsOnSymbol',\n    value: function getTransitionsOnSymbol(symbol) {\n      var transitions = this._transitions.get(symbol);\n\n      if (!transitions) {\n        transitions = new Set();\n        this._transitions.set(symbol, transitions);\n      }\n\n      return transitions;\n    }\n  }]);\n\n  return State;\n}();\n\nmodule.exports = State;","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar State = require('../state');\n\nvar _require = require('../special-symbols'),\n    EPSILON = _require.EPSILON;\n\n/**\n * NFA state.\n *\n * Allows nondeterministic transitions to several states on the\n * same symbol, and also epsilon-transitions.\n */\n\n\nvar NFAState = function (_State) {\n  _inherits(NFAState, _State);\n\n  function NFAState() {\n    _classCallCheck(this, NFAState);\n\n    return _possibleConstructorReturn(this, (NFAState.__proto__ || Object.getPrototypeOf(NFAState)).apply(this, arguments));\n  }\n\n  _createClass(NFAState, [{\n    key: 'matches',\n\n\n    /**\n     * Whether this state matches a string.\n     *\n     * We maintain set of visited epsilon-states to avoid infinite loops\n     * when an epsilon-transition goes eventually to itself.\n     *\n     * NOTE: this function is rather \"educational\", since we use DFA for strings\n     * matching. DFA is built on top of NFA, and uses fast transition table.\n     */\n    value: function matches(string) {\n      var visited = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Set();\n\n      // An epsilon-state has been visited, stop to avoid infinite loop.\n      if (visited.has(this)) {\n        return false;\n      }\n\n      visited.add(this);\n\n      // No symbols left..\n      if (string.length === 0) {\n        // .. and we're in the accepting state.\n        if (this.accepting) {\n          return true;\n        }\n\n        // Check if we can reach any accepting state from\n        // on the epsilon transitions.\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = this.getTransitionsOnSymbol(EPSILON)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var nextState = _step.value;\n\n            if (nextState.matches('', visited)) {\n              return true;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        return false;\n      }\n\n      // Else, we get some symbols.\n      var symbol = string[0];\n      var rest = string.slice(1);\n\n      var symbolTransitions = this.getTransitionsOnSymbol(symbol);\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = symbolTransitions[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var _nextState = _step2.value;\n\n          if (_nextState.matches(rest)) {\n            return true;\n          }\n        }\n\n        // If we couldn't match on symbol, check still epsilon-transitions\n        // without consuming the symbol (i.e. continue from `string`, not `rest`).\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.getTransitionsOnSymbol(EPSILON)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _nextState2 = _step3.value;\n\n          if (_nextState2.matches(string, visited)) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return false;\n    }\n\n    /**\n     * Returns an ε-closure for this state:\n     * self + all states following ε-transitions.\n     */\n\n  }, {\n    key: 'getEpsilonClosure',\n    value: function getEpsilonClosure() {\n      var _this2 = this;\n\n      if (!this._epsilonClosure) {\n        (function () {\n          var epsilonTransitions = _this2.getTransitionsOnSymbol(EPSILON);\n          var closure = _this2._epsilonClosure = new Set();\n          closure.add(_this2);\n          var _iteratorNormalCompletion4 = true;\n          var _didIteratorError4 = false;\n          var _iteratorError4 = undefined;\n\n          try {\n            for (var _iterator4 = epsilonTransitions[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n              var nextState = _step4.value;\n\n              if (!closure.has(nextState)) {\n                closure.add(nextState);\n                var nextClosure = nextState.getEpsilonClosure();\n                nextClosure.forEach(function (state) {\n                  return closure.add(state);\n                });\n              }\n            }\n          } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                _iterator4.return();\n              }\n            } finally {\n              if (_didIteratorError4) {\n                throw _iteratorError4;\n              }\n            }\n          }\n        })();\n      }\n\n      return this._epsilonClosure;\n    }\n  }]);\n\n  return NFAState;\n}(State);\n\nmodule.exports = NFAState;","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar NFA = require('./nfa');\nvar NFAState = require('./nfa-state');\n\nvar _require = require('../special-symbols'),\n    EPSILON = _require.EPSILON;\n\n// -----------------------------------------------------------------------------\n// Char NFA fragment: `c`\n\n/**\n * Char factory.\n *\n * Creates an NFA fragment for a single char.\n *\n * [in] --c--> [out]\n */\n\n\nfunction char(c) {\n  var inState = new NFAState();\n  var outState = new NFAState({\n    accepting: true\n  });\n\n  return new NFA(inState.addTransition(c, outState), outState);\n}\n\n// -----------------------------------------------------------------------------\n// Epsilon NFA fragment\n\n/**\n * Epsilon factory.\n *\n * Creates an NFA fragment for ε (recognizes an empty string).\n *\n * [in] --ε--> [out]\n */\nfunction e() {\n  return char(EPSILON);\n}\n\n// -----------------------------------------------------------------------------\n// Alteration NFA fragment: `abc`\n\n/**\n * Creates a connection between two NFA fragments on epsilon transition.\n *\n * [in-a] --a--> [out-a] --ε--> [in-b] --b--> [out-b]\n */\nfunction altPair(first, second) {\n  first.out.accepting = false;\n  second.out.accepting = true;\n\n  first.out.addTransition(EPSILON, second.in);\n\n  return new NFA(first.in, second.out);\n}\n\n/**\n * Alteration factory.\n *\n * Creates a alteration NFA for (at least) two NFA-fragments.\n */\nfunction alt(first) {\n  for (var _len = arguments.length, fragments = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    fragments[_key - 1] = arguments[_key];\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = fragments[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var fragment = _step.value;\n\n      first = altPair(first, fragment);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return first;\n}\n\n// -----------------------------------------------------------------------------\n// Disjunction NFA fragment: `a|b`\n\n/**\n * Creates a disjunction choice between two fragments.\n */\nfunction orPair(first, second) {\n  var inState = new NFAState();\n  var outState = new NFAState();\n\n  inState.addTransition(EPSILON, first.in);\n  inState.addTransition(EPSILON, second.in);\n\n  outState.accepting = true;\n  first.out.accepting = false;\n  second.out.accepting = false;\n\n  first.out.addTransition(EPSILON, outState);\n  second.out.addTransition(EPSILON, outState);\n\n  return new NFA(inState, outState);\n}\n\n/**\n * Disjunction factory.\n *\n * Creates a disjunction NFA for (at least) two NFA-fragments.\n */\nfunction or(first) {\n  for (var _len2 = arguments.length, fragments = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    fragments[_key2 - 1] = arguments[_key2];\n  }\n\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = fragments[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var fragment = _step2.value;\n\n      first = orPair(first, fragment);\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return first;\n}\n\n// -----------------------------------------------------------------------------\n// Kleene-closure\n\n/**\n * Kleene star/closure.\n *\n * a*\n */\nfunction repExplicit(fragment) {\n  var inState = new NFAState();\n  var outState = new NFAState({\n    accepting: true\n  });\n\n  // 0 or more.\n  inState.addTransition(EPSILON, fragment.in);\n  inState.addTransition(EPSILON, outState);\n\n  fragment.out.accepting = false;\n  fragment.out.addTransition(EPSILON, outState);\n  outState.addTransition(EPSILON, fragment.in);\n\n  return new NFA(inState, outState);\n}\n\n/**\n * Optimized Kleene-star: just adds ε-transitions from\n * input to the output, and back.\n */\nfunction rep(fragment) {\n  fragment.in.addTransition(EPSILON, fragment.out);\n  fragment.out.addTransition(EPSILON, fragment.in);\n  return fragment;\n}\n\n/**\n * Optimized Plus: just adds ε-transitions from\n * the output to the input.\n */\nfunction plusRep(fragment) {\n  fragment.out.addTransition(EPSILON, fragment.in);\n  return fragment;\n}\n\n/**\n * Optimized ? repetition: just adds ε-transitions from\n * the input to the output.\n */\nfunction questionRep(fragment) {\n  fragment.in.addTransition(EPSILON, fragment.out);\n  return fragment;\n}\n\nmodule.exports = {\n  alt: alt,\n  char: char,\n  e: e,\n  or: or,\n  rep: rep,\n  repExplicit: repExplicit,\n  plusRep: plusRep,\n  questionRep: questionRep\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar parser = require('../../../parser');\n\nvar _require = require('./builders'),\n    alt = _require.alt,\n    char = _require.char,\n    or = _require.or,\n    rep = _require.rep,\n    plusRep = _require.plusRep,\n    questionRep = _require.questionRep;\n\n/**\n * Helper `gen` function calls node type handler.\n */\n\n\nfunction gen(node) {\n  if (node && !generator[node.type]) {\n    throw new Error(node.type + ' is not supported in NFA/DFA interpreter.');\n  }\n\n  return node ? generator[node.type](node) : '';\n}\n\n/**\n * AST handler.\n */\nvar generator = {\n  RegExp: function RegExp(node) {\n    if (node.flags !== '') {\n      throw new Error('NFA/DFA: Flags are not supported yet.');\n    }\n\n    return gen(node.body);\n  },\n  Alternative: function Alternative(node) {\n    var fragments = (node.expressions || []).map(gen);\n    return alt.apply(undefined, _toConsumableArray(fragments));\n  },\n  Disjunction: function Disjunction(node) {\n    return or(gen(node.left), gen(node.right));\n  },\n  Repetition: function Repetition(node) {\n    switch (node.quantifier.kind) {\n      case '*':\n        return rep(gen(node.expression));\n      case '+':\n        return plusRep(gen(node.expression));\n      case '?':\n        return questionRep(gen(node.expression));\n      default:\n        throw new Error('Unknown repeatition: ' + node.quantifier.kind + '.');\n    }\n  },\n  Char: function Char(node) {\n    if (node.kind !== 'simple') {\n      throw new Error('NFA/DFA: Only simple chars are supported yet.');\n    }\n\n    return char(node.value);\n  },\n  Group: function Group(node) {\n    return gen(node.expression);\n  }\n};\n\nmodule.exports = {\n  /**\n   * Builds an NFA from the passed regexp.\n   */\n  build: function build(regexp) {\n    var ast = regexp;\n\n    if (regexp instanceof RegExp) {\n      regexp = '' + regexp;\n    }\n\n    if (typeof regexp === 'string') {\n      ast = parser.parse(regexp, {\n        captureLocations: true\n      });\n    }\n\n    return gen(ast);\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar NFA = require('./nfa/nfa');\nvar DFA = require('./dfa/dfa');\n\nvar nfaFromRegExp = require('./nfa/nfa-from-regexp');\nvar builders = require('./nfa/builders');\n\nmodule.exports = {\n\n  /**\n   * Export NFA and DFA classes.\n   */\n  NFA: NFA,\n  DFA: DFA,\n\n  /**\n   * Expose builders.\n   */\n  builders: builders,\n\n  /**\n   * Builds an NFA for the passed regexp.\n   *\n   * @param string | AST | RegExp:\n   *\n   *   a regular expression in different representations: a string,\n   *   a RegExp object, or an AST.\n   */\n  toNFA: function toNFA(regexp) {\n    return nfaFromRegExp.build(regexp);\n  },\n\n\n  /**\n   * Builds DFA for the passed regexp.\n   *\n   * @param string | AST | RegExp:\n   *\n   *   a regular expression in different representations: a string,\n   *   a RegExp object, or an AST.\n   */\n  toDFA: function toDFA(regexp) {\n    return new DFA(this.toNFA(regexp));\n  },\n\n\n  /**\n   * Returns true if regexp accepts the string.\n   */\n  test: function test(regexp, string) {\n    return this.toDFA(regexp).matches(string);\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * The `RegExpTree` class provides runtime support for `compat-transpiler`\n * module from `regexp-tree`.\n *\n * E.g. it tracks names of the capturing groups, in order to access the\n * names on the matched result.\n *\n * It's a thin-wrapper on top of original regexp.\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar RegExpTree = function () {\n  /**\n   * Initializes a `RegExpTree` instance.\n   *\n   * @param RegExp - a regular expression\n   *\n   * @param Object state:\n   *\n   *   An extra state which may store any related to transformation\n   *   data, for example, names of the groups.\n   *\n   *   - flags - original flags\n   *   - groups - names of the groups, and their indices\n   *   - source - original source\n   */\n  function RegExpTree(re, _ref) {\n    var flags = _ref.flags,\n        groups = _ref.groups,\n        source = _ref.source;\n\n    _classCallCheck(this, RegExpTree);\n\n    this._re = re;\n    this._groups = groups;\n\n    // Original props.\n    this.flags = flags;\n    this.source = source || re.source;\n    this.dotAll = flags.includes('s');\n\n    // Inherited directly from `re`.\n    this.global = re.global;\n    this.ignoreCase = re.ignoreCase;\n    this.multiline = re.multiline;\n    this.sticky = re.sticky;\n    this.unicode = re.unicode;\n  }\n\n  /**\n   * Facade wrapper for RegExp `test` method.\n   */\n\n\n  _createClass(RegExpTree, [{\n    key: 'test',\n    value: function test(string) {\n      return this._re.test(string);\n    }\n\n    /**\n     * Facade wrapper for RegExp `compile` method.\n     */\n\n  }, {\n    key: 'compile',\n    value: function compile(string) {\n      return this._re.compile(string);\n    }\n\n    /**\n     * Facade wrapper for RegExp `toString` method.\n     */\n\n  }, {\n    key: 'toString',\n    value: function toString() {\n      if (!this._toStringResult) {\n        this._toStringResult = '/' + this.source + '/' + this.flags;\n      }\n      return this._toStringResult;\n    }\n\n    /**\n     * Facade wrapper for RegExp `exec` method.\n     */\n\n  }, {\n    key: 'exec',\n    value: function exec(string) {\n      var result = this._re.exec(string);\n\n      if (!this._groups || !result) {\n        return result;\n      }\n\n      result.groups = {};\n\n      for (var group in this._groups) {\n        var groupNumber = this._groups[group];\n        result.groups[group] = result[groupNumber];\n      }\n\n      return result;\n    }\n  }]);\n\n  return RegExpTree;\n}();\n\nmodule.exports = {\n  RegExpTree: RegExpTree\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar compatTranspiler = require('./compat-transpiler');\nvar generator = require('./generator');\nvar optimizer = require('./optimizer');\nvar parser = require('./parser');\nvar _transform = require('./transform');\nvar _traverse = require('./traverse');\nvar fa = require('./interpreter/finite-automaton');\n\nvar _require = require('./compat-transpiler/runtime'),\n    RegExpTree = _require.RegExpTree;\n\n/**\n * An API object for RegExp processing (parsing/transform/generation).\n */\n\n\nvar regexpTree = {\n  /**\n   * Parser module exposed.\n   */\n  parser: parser,\n\n  /**\n   * Expose finite-automaton module.\n   */\n  fa: fa,\n\n  /**\n   * `TransformResult` exposed.\n   */\n  TransformResult: _transform.TransformResult,\n\n  /**\n   * Parses a regexp string, producing an AST.\n   *\n   * @param string regexp\n   *\n   *   a regular expression in different formats: string, AST, RegExp.\n   *\n   * @param Object options\n   *\n   *   parsing options for this parse call. Default are:\n   *\n   *     - captureLocations: boolean\n   *     - any other custom options\n   *\n   * @return Object AST\n   */\n  parse: function parse(regexp, options) {\n    return parser.parse('' + regexp, options);\n  },\n\n\n  /**\n   * Traverses a RegExp AST.\n   *\n   * @param Object ast\n   * @param Object | Array<Object> handlers\n   *\n   * Each `handler` is an object containing handler function for needed\n   * node types. Example:\n   *\n   *   regexpTree.traverse(ast, {\n   *     onChar(node) {\n   *       ...\n   *     },\n   *   });\n   *\n   * The value for a node type may also be an object with functions pre and post.\n   * This enables more context-aware analyses, e.g. measuring star height.\n   */\n  traverse: function traverse(ast, handlers, options) {\n    return _traverse.traverse(ast, handlers, options);\n  },\n\n\n  /**\n   * Transforms a regular expression.\n   *\n   * A regexp can be passed in different formats (string, regexp or AST),\n   * applying a set of transformations. It is a convenient wrapper\n   * on top of \"parse-traverse-generate\" tool chain.\n   *\n   * @param string | AST | RegExp regexp - a regular expression;\n   * @param Object | Array<Object> handlers - a list of handlers.\n   *\n   * @return TransformResult - a transformation result.\n   */\n  transform: function transform(regexp, handlers) {\n    return _transform.transform(regexp, handlers);\n  },\n\n\n  /**\n   * Generates a RegExp string from an AST.\n   *\n   * @param Object ast\n   *\n   * Invariant:\n   *\n   *   regexpTree.generate(regexpTree.parse('/[a-z]+/i')); // '/[a-z]+/i'\n   */\n  generate: function generate(ast) {\n    return generator.generate(ast);\n  },\n\n\n  /**\n   * Creates a RegExp object from a regexp string.\n   *\n   * @param string regexp\n   */\n  toRegExp: function toRegExp(regexp) {\n    var compat = this.compatTranspile(regexp);\n    return new RegExp(compat.getSource(), compat.getFlags());\n  },\n\n\n  /**\n   * Optimizes a regular expression by replacing some\n   * sub-expressions with their idiomatic patterns.\n   *\n   * @param string regexp\n   *\n   * @return TransformResult object\n   */\n  optimize: function optimize(regexp, whitelist) {\n    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        blacklist = _ref.blacklist;\n\n    return optimizer.optimize(regexp, { whitelist: whitelist, blacklist: blacklist });\n  },\n\n\n  /**\n   * Translates a regular expression in new syntax or in new format\n   * into equivalent expressions in old syntax.\n   *\n   * @param string regexp\n   *\n   * @return TransformResult object\n   */\n  compatTranspile: function compatTranspile(regexp, whitelist) {\n    return compatTranspiler.transform(regexp, whitelist);\n  },\n\n\n  /**\n   * Executes a regular expression on a string.\n   *\n   * @param RegExp|string re - a regular expression.\n   * @param string string - a testing string.\n   */\n  exec: function exec(re, string) {\n    if (typeof re === 'string') {\n      var compat = this.compatTranspile(re);\n      var extra = compat.getExtra();\n\n      if (extra.namedCapturingGroups) {\n        re = new RegExpTree(compat.toRegExp(), {\n          flags: compat.getFlags(),\n          source: compat.getSource(),\n          groups: extra.namedCapturingGroups\n        });\n      } else {\n        re = compat.toRegExp();\n      }\n    }\n\n    return re.exec(string);\n  }\n};\n\nmodule.exports = regexpTree;","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nmodule.exports = require('./dist/regexp-tree');","/**\n * @typedef {import('./index.d').UserAgentRegex} UserAgentRegex\n */\n\n/** @type {UserAgentRegex[]} */\nexport const regexes = [\n  {\n    regex: /IE (\\d+)\\.(\\d+)/,\n    family: 'ie',\n    maxVersion: [\n      7,\n      Infinity,\n      Infinity\n    ]\n  },\n  /**\n   * IE can be in Compatability Mode (IE 7.0)\n   * so we need to check Trident version\n   */\n  {\n    regex: /Trident\\/4\\.0/,\n    family: 'ie',\n    version: [\n      8,\n      0,\n      0\n    ]\n  },\n  {\n    regex: /Trident\\/5\\.0/,\n    family: 'ie',\n    version: [\n      9,\n      0,\n      0\n    ]\n  },\n  {\n    regex: /Trident\\/6\\.0/,\n    family: 'ie',\n    version: [\n      10,\n      0,\n      0\n    ]\n  },\n  {\n    regex: /Trident\\/[78]\\.0/,\n    family: 'ie',\n    version: [\n      11,\n      0,\n      0\n    ]\n  },\n  {\n    regex: /Edge?\\/(\\d+)\\.(\\d+)(\\.(\\d+)|)/,\n    family: 'edge'\n  },\n  {\n    regex: /Firefox\\/(\\d+)\\.(\\d+)(\\.(\\d+)|)/,\n    family: 'firefox'\n  },\n  {\n    regex: /Chrom(ium|e)\\/(\\d+)\\.(\\d+)(\\.(\\d+)|)/,\n    family: 'chrome'\n  },\n  /**\n   * Ignore Edge with EdgeHTML engine.\n   */\n  {\n    regex: /Chrom(ium|e)\\/(\\d+)\\.(\\d+)(\\.(\\d+)|)([\\d.]+$|.*Safari\\/(?![\\d.]+ Edge\\/[\\d.]+$))/,\n    family: 'chrome',\n    maxVersion: [\n      70,\n      Infinity,\n      Infinity\n    ]\n  },\n  /**\n   * Safari on iPad have desktop-like useragent\n   * Some versions contains letter subversions\n   * GNOME Web (X11) is based on WebKit and should be detected as Safari\n   */\n  {\n    regex: /(Maci|X11).+ Version\\/(\\d+)\\.(\\d+)([.,](\\d+)|)( \\(\\w+\\)|)( Mobile\\/\\w+|) Safari\\//,\n    family: 'safari'\n  },\n  /**\n   * Presto Opera\n   */\n  {\n    regex: /Opera\\/9\\.80.+Version\\/(\\d+)\\.(\\d+)(\\.(\\d+)|)/,\n    family: 'opera',\n    maxVersion: [\n      12,\n      15,\n      0\n    ]\n  },\n  /**\n   * Chromium based Opera\n   */\n  {\n    regex: /Chrome.+OPR\\/(\\d+)\\.(\\d+)\\.(\\d+)/,\n    family: 'opera',\n    minVersion: [\n      15,\n      0,\n      0\n    ]\n  },\n  {\n    regex: /(CPU[ +]OS|iPhone[ +]OS|CPU[ +]iPhone|CPU IPhone OS|CPU iPad OS)[ +]+(\\d+)[_.](\\d+)([_.](\\d+)|)/,\n    family: 'ios_saf'\n  },\n  /**\n   * Ignore IE Mobile 11\n   */\n  {\n    regex: /[^e] (CPU[ +]OS|iPhone[ +]OS|CPU[ +]iPhone|CPU IPhone OS|CPU iPad OS)[ +]+(\\d+)[_.](\\d+)([_.](\\d+)|)/,\n    family: 'ios_saf',\n    version: [\n      7,\n      0,\n      3\n    ]\n  },\n  {\n    regex: /Opera Mini/,\n    family: 'op_mini'\n  },\n  {\n    regex: /Android Donut/,\n    family: 'android',\n    version: [\n      1,\n      2,\n      0\n    ]\n  },\n  {\n    regex: /Android Eclair/,\n    family: 'android',\n    version: [\n      2,\n      1,\n      0\n    ]\n  },\n  {\n    regex: /Android Froyo/,\n    family: 'android',\n    version: [\n      2,\n      2,\n      0\n    ]\n  },\n  {\n    regex: /Android Gingerbread/,\n    family: 'android',\n    version: [\n      2,\n      3,\n      0\n    ]\n  },\n  {\n    regex: /Android Honeycomb/,\n    family: 'android',\n    version: [\n      3,\n      0,\n      0\n    ]\n  },\n  {\n    regex: /Android:?[ /-](\\d+)(\\.(\\d+)|)(\\.(\\d+)|)/,\n    family: 'android'\n  },\n  /**\n   * Ignore IE Mobile 11\n   */\n  {\n    regex: /Android:?[ /-](\\d+)(\\.(\\d+)|)(\\.(\\d+)|);(?! ARM; Trident)/,\n    family: 'android',\n    version: [\n      4,\n      0,\n      0\n    ]\n  },\n  {\n    regex: /PlayBook.+RIM Tablet OS (\\d+)\\.(\\d+)\\.(\\d+)/,\n    family: 'bb'\n  },\n  {\n    regex: /(Black[bB]erry|BB10).+Version\\/(\\d+)\\.(\\d+)\\.(\\d+)/,\n    family: 'bb'\n  },\n  /**\n   * Presto Opera Mobile\n   */\n  {\n    regex: /Opera\\/.+Opera Mobi.+Version\\/(\\d+)\\.(\\d+)/,\n    family: 'op_mob',\n    maxVersion: [\n      12,\n      16,\n      0\n    ]\n  },\n  /**\n   * Chromium based Opera Mobile\n   */\n  {\n    regex: /Mobile Safari.+OPR\\/(\\d+)\\.(\\d+)\\.(\\d+)/,\n    family: 'op_mob',\n    minVersion: [\n      14,\n      0,\n      0\n    ]\n  },\n  {\n    regex: /Android.+Firefox\\/(\\d+)\\.(\\d+)(\\.(\\d+)|)/,\n    family: 'and_ff'\n  },\n  {\n    regex: /Android.+Chrom(ium|e)\\/(\\d+)\\.(\\d+)(\\.(\\d+)|)/,\n    family: 'and_chr'\n  },\n  {\n    regex: /IEMobile[ /](\\d+)\\.(\\d+)/,\n    family: 'ie_mob'\n  },\n  {\n    regex: /Android.+(UC? ?Browser|UCWEB|U3)[ /]?(\\d+)\\.(\\d+)\\.(\\d+)/,\n    family: 'and_uc'\n  },\n  {\n    regex: /SamsungBrowser\\/(\\d+)\\.(\\d+)/,\n    family: 'samsung'\n  },\n  {\n    regex: /Android.+MQQBrowser\\/(\\d+)(\\.(\\d+)|)(\\.(\\d+)|)/,\n    family: 'and_qq'\n  },\n  {\n    regex: /baidubrowser[/\\s](\\d+)(\\.(\\d+)|)(\\.(\\d+)|)/,\n    family: 'baidu'\n  },\n  {\n    regex: /K[Aa][Ii]OS\\/(\\d+)\\.(\\d+)(\\.(\\d+)|)/,\n    family: 'kaios'\n  }\n]\n","import browserslist from 'browserslist';\nimport RegexpTree from 'regexp-tree';\nimport { regexes } from 'ua-regexes-lite';\n\n/**\n * Array of numbers to array of first and last elements.\n * @param numbers - Array of numbers.\n * @returns Number or two numbers.\n */ function numbersToRanges(numbers) {\n    if (typeof numbers === \"number\") {\n        return numbers;\n    }\n    if (numbers.length === 1) {\n        return numbers[0];\n    }\n    return [\n        numbers[0],\n        numbers[numbers.length - 1]\n    ];\n}\n\nvar SemverPart;\n(function(SemverPart) {\n    SemverPart[SemverPart[\"Major\"] = 0] = \"Major\";\n    SemverPart[SemverPart[\"Minor\"] = 1] = \"Minor\";\n    SemverPart[SemverPart[\"Patch\"] = 2] = \"Patch\";\n})(SemverPart || (SemverPart = {}));\n\n/**\n * Get semver from string or array.\n * @param version - Target to convert.\n * @returns Array with semver parts.\n */ function semverify(version) {\n    const versionParts = Array.isArray(version) ? version : version.toString().split(\".\");\n    if (versionParts[0] === \"all\") {\n        return [\n            Infinity,\n            0,\n            0\n        ];\n    }\n    let versionPart = null;\n    let semverPart = null;\n    const semver = [\n        0,\n        0,\n        0\n    ];\n    for(let i = 0; i < 3; i++){\n        versionPart = versionParts[i];\n        if (typeof versionPart === \"undefined\") {\n            continue;\n        }\n        semverPart = typeof versionPart === \"number\" ? versionPart : parseInt(versionPart, 10);\n        if (isNaN(semverPart)) {\n            return null;\n        }\n        semver[i] = semverPart;\n    }\n    return semver;\n}\n/**\n * Get semver range.\n * @param from\n * @param to\n * @returns Semver range.\n */ function rangeSemver(from, to) {\n    let partIndex = 0;\n    const range = [];\n    for(let i = 2; i >= 0; i--){\n        if (from[i] !== to[i]) {\n            partIndex = i;\n            break;\n        }\n    }\n    for(let i1 = from[partIndex], max = to[partIndex]; i1 <= max; i1++){\n        range.push(from.map((v, j)=>j === partIndex ? i1 : v));\n    }\n    return range;\n}\n/**\n * Compare semvers.\n * @param a - Semver to compare.\n * @param b - Semver to compare with.\n * @param options - Compare options.\n * @returns Equals or not.\n */ function compareSemvers(a, b, options) {\n    const [major, minor, patch] = a;\n    const [majorBase, minorBase, patchBase] = b;\n    const { ignoreMinor , ignorePatch , allowHigherVersions  } = options;\n    if (majorBase === Infinity) {\n        return true;\n    }\n    const compareMinor = !ignoreMinor;\n    const comparePatch = compareMinor && !ignorePatch;\n    if (allowHigherVersions) {\n        if (comparePatch && patch < patchBase || compareMinor && minor < minorBase) {\n            return false;\n        }\n        return major >= majorBase;\n    }\n    if (comparePatch && patch !== patchBase || compareMinor && minor !== minorBase) {\n        return false;\n    }\n    return major === majorBase;\n}\n/**\n * Get required semver parts count.\n * @param version - Semver parts or ranges.\n * @param options - Semver compare options.\n * @returns Required semver parts count.\n */ function getRequiredSemverPartsCount(version, options) {\n    const { ignoreMinor , ignorePatch , allowZeroSubversions  } = options;\n    let shouldRepeatCount = ignoreMinor ? 1 : ignorePatch ? 2 : 3;\n    if (allowZeroSubversions) {\n        for(let i = shouldRepeatCount - 1; i > 0; i--){\n            if (version[i] !== 0 || shouldRepeatCount === 1) {\n                break;\n            }\n            shouldRepeatCount--;\n        }\n    }\n    return shouldRepeatCount;\n}\n\n/**\n * Browsers strings to info objects.\n * @param browsersList - Browsers strings with family and version.\n * @returns Browser info objects.\n */ function parseBrowsersList(browsersList) {\n    return browsersList.reduce((browsers, browser)=>{\n        const [family, versionString, versionStringTo] = browser.split(/ |-/);\n        const version = semverify(versionString);\n        const versions = !version ? [] : versionStringTo ? rangeSemver(version, semverify(versionStringTo)) : [\n            version\n        ];\n        return versions.reduce((browsers, semver)=>{\n            if (semver) {\n                browsers.push({\n                    family,\n                    version: semver\n                });\n            }\n            return browsers;\n        }, browsers);\n    }, []);\n}\n/**\n * Request browsers list.\n * @param options - Options to get browsers list.\n * @returns Browser info objects.\n */ function getBrowsersList(options = {}) {\n    const { browsers , ...browserslistOptions } = options;\n    const browsersList = browserslist(browsers, browserslistOptions);\n    const parsedBrowsers = parseBrowsersList(browsersList);\n    return parsedBrowsers;\n}\n\n/**\n * Compare two arrays.\n * @param a - Array to compare.\n * @param b - Array to compare.\n * @param from - Index to start compare from.\n * @returns Equals or not.\n */ function compareArrays(a, b, from = 0) {\n    const len = a.length;\n    for(let i = from; i < len; i++){\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Clone simple object.\n * @param value\n * @returns Object clone.\n */ function clone(value) {\n    if (value === null || typeof value !== \"object\") {\n        return value;\n    }\n    /* eslint-disable */ const copy = Array.isArray(value) ? [] : {};\n    let i;\n    for(i in value){\n        copy[i] = clone(value[i]);\n    }\n    /* eslint-enable */ return copy;\n}\n/**\n * Concat arrays.\n * @param items\n * @returns Concatinated arrays.\n */ function concat(items) {\n    return [].concat(...items);\n}\n\n/**\n * Merge browser info object to map with versions.\n * @param browsers - Browser info object to merge.\n * @returns Merged browsers map.\n */ function mergeBrowserVersions(browsers) {\n    const merge = new Map();\n    browsers.forEach(({ family , version  })=>{\n        const versions = merge.get(family);\n        if (versions) {\n            const strVersion = version.join(\".\");\n            if (versions.every((_)=>_.join(\".\") !== strVersion)) {\n                versions.push(version);\n            }\n            return;\n        }\n        merge.set(family, [\n            version\n        ]);\n    });\n    merge.forEach((versions)=>{\n        versions.sort((a, b)=>{\n            for(const i in a){\n                if (a[i] !== b[i]) {\n                    return a[i] - b[i];\n                }\n            }\n            return 0;\n        });\n    });\n    return merge;\n}\n/**\n * Versions to ranged versions.\n * @param versions - Semver versions list.\n * @returns Ranged versions list.\n */ function versionsListToRanges(versions) {\n    if (versions.length < 2) {\n        return versions;\n    }\n    const max = versions.length + 1;\n    const ranges = [];\n    let prev = null;\n    let current = versions[0];\n    let major = [\n        current[SemverPart.Major]\n    ];\n    let minor = [\n        current[SemverPart.Minor]\n    ];\n    let patch = [\n        current[SemverPart.Patch]\n    ];\n    let part = null;\n    for(let i = 1; i < max; i++){\n        prev = versions[i - 1];\n        current = versions[i] || [];\n        for(let p = SemverPart.Major; p <= SemverPart.Patch; p++){\n            if ((p === part || part === null) && prev[p] + 1 === current[p] && compareArrays(prev, current, p + 1)) {\n                part = p;\n                if (p === SemverPart.Major) {\n                    major.push(current[SemverPart.Major]);\n                } else {\n                    major = current[SemverPart.Major];\n                }\n                if (p === SemverPart.Minor) {\n                    minor.push(current[SemverPart.Minor]);\n                } else {\n                    minor = current[SemverPart.Minor];\n                }\n                if (p === SemverPart.Patch) {\n                    patch.push(current[SemverPart.Patch]);\n                } else {\n                    patch = current[SemverPart.Patch];\n                }\n                break;\n            }\n            if (part === p || prev[p] !== current[p]) {\n                ranges.push([\n                    numbersToRanges(major),\n                    numbersToRanges(minor),\n                    numbersToRanges(patch)\n                ]);\n                major = [\n                    current[SemverPart.Major]\n                ];\n                minor = [\n                    current[SemverPart.Minor]\n                ];\n                patch = [\n                    current[SemverPart.Patch]\n                ];\n                part = null;\n                break;\n            }\n        }\n    }\n    return ranges;\n}\n\nfunction AstRegExpNode(body) {\n    return {\n        type: \"RegExp\",\n        body,\n        flags: \"\"\n    };\n}\nfunction AlternativeNode(...expressions) {\n    const exps = concat(expressions).filter(Boolean);\n    if (exps.length === 1) {\n        return exps[0];\n    }\n    return {\n        type: \"Alternative\",\n        expressions: exps\n    };\n}\nfunction SimpleCharNode(value) {\n    return {\n        type: \"Char\",\n        kind: \"simple\",\n        value: String(value),\n        codePoint: NaN\n    };\n}\nfunction MetaCharNode(value) {\n    return {\n        type: \"Char\",\n        kind: \"meta\",\n        value,\n        codePoint: NaN\n    };\n}\nfunction ClassRangeNode(from, to) {\n    return {\n        type: \"ClassRange\",\n        from,\n        to\n    };\n}\nfunction CharacterClassNode(...expressions) {\n    return {\n        type: \"CharacterClass\",\n        expressions: concat(expressions).filter(Boolean)\n    };\n}\nfunction SimpleQuantifierNode(kind) {\n    return {\n        type: \"Quantifier\",\n        kind,\n        greedy: true\n    };\n}\nfunction RangeQuantifierNode(from, to) {\n    return {\n        type: \"Quantifier\",\n        kind: \"Range\",\n        from,\n        to,\n        greedy: true\n    };\n}\nfunction CapturingGroupNode(expression) {\n    return {\n        type: \"Group\",\n        capturing: true,\n        expression,\n        number: null\n    };\n}\nfunction RepetitionNode(expression, quantifier) {\n    return {\n        type: \"Repetition\",\n        expression,\n        quantifier\n    };\n}\nfunction DisjunctionNode(...expressions) {\n    const exprs = concat(expressions).filter(Boolean);\n    if (exprs.length === 1) {\n        return exprs[0];\n    }\n    const disjunction = {\n        type: \"Disjunction\",\n        left: null,\n        right: exprs.pop()\n    };\n    exprs.reduceRight((disjunction, expr, i)=>{\n        if (i === 0) {\n            disjunction.left = expr;\n            return disjunction;\n        }\n        disjunction.left = {\n            type: \"Disjunction\",\n            left: null,\n            right: expr\n        };\n        return disjunction.left;\n    }, disjunction);\n    return disjunction;\n}\nfunction DisjunctionCapturingGroupNode(...expressions) {\n    const expr = DisjunctionNode(...expressions);\n    if (expr.type === \"Disjunction\") {\n        return CapturingGroupNode(expr);\n    }\n    return expr;\n}\nfunction DigitPatternNode() {\n    return MetaCharNode(\"\\\\d\");\n}\nfunction NumberPatternNode(quantifier = SimpleQuantifierNode(\"+\")) {\n    const numberPattern = RepetitionNode(DigitPatternNode(), quantifier);\n    return numberPattern;\n}\nfunction NumberCharsNode(value) {\n    return AlternativeNode(Array.from(String(value), SimpleCharNode));\n}\n\n/**\n * Check node whether is number pattern.\n * @param node - AST node to check.\n * @returns Is number pattern or not.\n */ function isNumberPatternNode(node) {\n    if (node.type === \"Group\" && node.expression.type === \"Repetition\") {\n        const { expression , quantifier  } = node.expression;\n        return expression.type === \"Char\" && expression.value === \"\\\\d\" && quantifier.kind === \"+\" && quantifier.greedy;\n    }\n    return false;\n}\n/**\n * Check node whether is char node.\n * @param node - AST node to check.\n * @param value - Value to compare.\n * @returns Is char node or not.\n */ function isCharNode(node, value) {\n    if (node && node.type === \"Char\") {\n        return typeof value === \"undefined\" || value instanceof RegExp && value.test(node.value) || String(value) === node.value;\n    }\n    return false;\n}\n/**\n * Check node whether is digit range.\n * @param node - AST node to check.\n * @returns Is digit range or not.\n */ function isDigitRangeNode(node) {\n    if (node.type === \"CharacterClass\" && node.expressions.length === 1) {\n        const [expression] = node.expressions;\n        return expression.type === \"ClassRange\" && isCharNode(expression.from, /\\d/) && isCharNode(expression.to, /\\d/);\n    }\n    return false;\n}\n/**\n * Check node whether is expression.\n * @param node - AST node to check.\n * @returns Is expression node or not.\n */ function isExpressionNode(node) {\n    return node.type !== \"RegExp\" && node.type !== \"ClassRange\" && node.type !== \"Quantifier\";\n}\nfunction parseRegex(regex) {\n    return typeof regex === \"string\" ? RegexpTree.parse(regex.replace(/^([^/])/, \"/$1\").replace(/([^/])$/, \"$1/\")) : regex instanceof RegExp ? RegexpTree.parse(regex) : regex;\n}\n/**\n * Get regex from string or AST.\n * @param src - String or AST.\n * @returns RegExp.\n */ function toRegex(src) {\n    return typeof src === \"string\" ? new RegExp(src) : new RegExp(RegexpTree.generate(src.body), src.flags);\n}\n/**\n * Get string from regex or AST.\n * @param src - RegExp or AST.\n * @returns String.\n */ function toString(src) {\n    return typeof src === \"string\" ? src : src instanceof RegExp ? src.toString() : RegexpTree.generate(src);\n}\n\nconst classes = [\n    \"RegExp\",\n    \"Disjunction\",\n    \"Alternative\",\n    \"Assertion\",\n    \"Char\",\n    \"CharacterClass\",\n    \"ClassRange\",\n    \"Backreference\",\n    \"Group\",\n    \"Repetition\",\n    \"Quantifier\"\n];\n/**\n * Create traversal visitors.\n * @param visitors\n * @returns Traversal handlers.\n */ function visitors(visitors) {\n    const { every  } = visitors;\n    if (!every) {\n        return visitors;\n    }\n    if (typeof every === \"function\") {\n        return {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            \"*\": every,\n            ...visitors\n        };\n    }\n    return classes.reduce((newVisitors, className)=>{\n        const visitor = visitors[className];\n        const visitorPre = visitor ? \"pre\" in visitor ? visitor.pre : visitor : null;\n        const visitorPost = visitor ? \"post\" in visitor ? visitor.post : null : null;\n        newVisitors[className] = {\n            pre (nodePath) {\n                if (every.pre(nodePath) !== false && visitorPre) {\n                    return visitorPre(nodePath);\n                }\n                return true;\n            },\n            post (nodePath) {\n                if (every.post(nodePath) !== false && visitorPost) {\n                    return visitorPost(nodePath);\n                }\n                return true;\n            }\n        };\n        return newVisitors;\n    }, {});\n}\n\nfunction optimizeRegex(regex) {\n    // Optimization requires filled codePoints\n    const regexAst = RegexpTree.optimize(parseRegex(toString(regex))).getAST();\n    RegexpTree.traverse(regexAst, {\n        Group (nodePath) {\n            const { parent , node  } = nodePath;\n            const { expression  } = node;\n            node.capturing = true;\n            if (parent.type === \"RegExp\" || expression.type !== \"Disjunction\" && parent.type !== \"Repetition\" || expression.type === \"Disjunction\" && parent.type === \"Disjunction\") {\n                nodePath.replace(nodePath.node.expression);\n            }\n        }\n    });\n    return regexAst;\n}\n/**\n * Merge digits patterns if possible.\n * @param a\n * @param b\n * @returns Merged node.\n */ function mergeDigits(a, b) {\n    if (isCharNode(a) && isCharNode(b) && a.value === b.value) {\n        return b;\n    }\n    if (isCharNode(a, /\\d/) && isDigitRangeNode(b) && Number(b.expressions[0].from.value) - Number(a.value) === 1) {\n        return {\n            ...b,\n            expressions: [\n                {\n                    ...b.expressions[0],\n                    from: a\n                }\n            ]\n        };\n    }\n    if (isDigitRangeNode(a) && isCharNode(b, /\\d/) && Number(b.value) - Number(a.expressions[0].to.value) === 1) {\n        return {\n            ...a,\n            expressions: [\n                {\n                    ...a.expressions[0],\n                    to: b\n                }\n            ]\n        };\n    }\n    return null;\n}\n/**\n * Optimize segment number patterns.\n * @param patterns\n * @returns Optimized segment number patterns.\n */ function optimizeSegmentNumberPatterns(patterns) {\n    return patterns.reduce((patterns, node)=>{\n        const prevNode = patterns[patterns.length - 1];\n        if (prevNode && node.type === \"Alternative\" && prevNode.type === \"Alternative\" && node.expressions.length === prevNode.expressions.length) {\n            const merged = prevNode.expressions.reduceRight((exps, exp, i)=>{\n                if (!exps) {\n                    return exps;\n                }\n                const merged = mergeDigits(exp, node.expressions[i]);\n                if (merged) {\n                    exps.unshift(merged);\n                } else {\n                    return null;\n                }\n                return exps;\n            }, []);\n            if (merged) {\n                node.expressions = merged;\n                patterns.pop();\n            }\n        }\n        patterns.push(node);\n        return patterns;\n    }, []);\n}\n\n/**\n * Transform number to digits array.\n * @param num - Target number.\n * @returns Digits array.\n */ function numberToDigits(num) {\n    return Array.from(num.toString(), Number);\n}\n\n/**\n * Get digit pattern.\n * @param digit - Ray start.\n * @param includes - Include start digit or use next.\n * @returns Digit pattern.\n */ function rayRangeDigitPattern(digit, includes) {\n    const rangeStart = digit + Number(!includes);\n    if (rangeStart === 0) {\n        return DigitPatternNode();\n    }\n    if (rangeStart === 9) {\n        return SimpleCharNode(\"9\");\n    }\n    if (rangeStart > 9) {\n        return null;\n    }\n    return CharacterClassNode(ClassRangeNode(SimpleCharNode(rangeStart), SimpleCharNode(\"9\")));\n}\n/**\n * Create numeric ray pattern.\n * @param from - Start from this number.\n * @returns Numeric ray pattern parts.\n */ function rayToNumberPatterns(from) {\n    if (from === 0) {\n        return [\n            NumberPatternNode()\n        ];\n    }\n    const digits = numberToDigits(from);\n    const digitsCount = digits.length;\n    const other = NumberPatternNode(RangeQuantifierNode(digitsCount + 1));\n    const zeros = digitsCount - 1;\n    if (from / Math.pow(10, zeros) === digits[0]) {\n        return [\n            AlternativeNode(rayRangeDigitPattern(digits[0], true), Array.from({\n                length: zeros\n            }, DigitPatternNode)),\n            other\n        ];\n    }\n    const raysNumberPatterns = digits.reduce((topNodes, _, i)=>{\n        const ri = digitsCount - i - 1;\n        const d = i === 0;\n        let prev = SimpleCharNode(\"\");\n        const nodes = digits.reduce((nodes, digit, j)=>{\n            if (j < ri) {\n                nodes.push(SimpleCharNode(digit));\n            } else if (prev) {\n                if (j > ri) {\n                    nodes.push(DigitPatternNode());\n                } else {\n                    prev = rayRangeDigitPattern(digit, d);\n                    if (prev) {\n                        nodes.push(prev);\n                    } else {\n                        return [];\n                    }\n                }\n            }\n            return nodes;\n        }, []);\n        if (nodes.length) {\n            topNodes.push(nodes);\n        }\n        return topNodes;\n    }, []);\n    const numberPatterns = raysNumberPatterns.map((_)=>AlternativeNode(_));\n    numberPatterns.push(other);\n    return numberPatterns;\n}\n\n/**\n * Get digit pattern.\n * @param from - Segment start.\n * @param to - Segment end.\n * @param zeros - Zeros to add as prefix.\n * @returns Digit pattern.\n */ function segmentRangeNumberPattern(from, to, zeros) {\n    if (to < from) {\n        return null;\n    }\n    const fromNode = SimpleCharNode(from);\n    const toNode = SimpleCharNode(to);\n    const zerosPrefix = typeof zeros === \"number\" && zeros > 0 ? Array.from({\n        length: zeros\n    }, ()=>SimpleCharNode(0)) : [];\n    const addPrefix = zerosPrefix.length ? (node)=>AlternativeNode(zerosPrefix, node) : (node)=>node;\n    if (from === to) {\n        return addPrefix(fromNode);\n    }\n    if (from === 0 && to === 9) {\n        return addPrefix(DigitPatternNode());\n    }\n    if (to - from === 1) {\n        return addPrefix(CharacterClassNode(fromNode, toNode));\n    }\n    return addPrefix(CharacterClassNode(ClassRangeNode(fromNode, toNode)));\n}\n/**\n * Split segment range to decade ranges.\n * @param from - Segment start.\n * @param to - Segment end.\n * @returns Ranges.\n */ function splitToDecadeRanges(from, to) {\n    const ranges = [];\n    let num = from;\n    let decade = 1;\n    do {\n        decade *= 10;\n        if (num < decade) {\n            ranges.push([\n                num,\n                Math.min(decade - 1, to)\n            ]);\n            num = decade;\n        }\n    }while (decade <= to);\n    return ranges;\n}\n/**\n * Get common and diffs of two numbers (arrays of digits).\n * @param a - Digits.\n * @param b - Other digits.\n * @returns Common part and diffs.\n */ function splitCommonDiff(a, b) {\n    const len = a.length;\n    if (len !== b.length || a[0] !== b[0]) {\n        return null;\n    }\n    let common = a[0].toString();\n    let currA = 0;\n    let currB = 0;\n    let diffA = \"\";\n    let diffB = \"\";\n    for(let i = 1; i < len; i++){\n        currA = a[i];\n        currB = b[i];\n        if (currA === currB) {\n            common += currA;\n        } else {\n            diffA += currA;\n            diffB += currB;\n        }\n    }\n    return [\n        common,\n        parseInt(diffA, 10),\n        parseInt(diffB, 10)\n    ];\n}\n/**\n * Get segment patterns.\n * @param from - Segment start.\n * @param to - Segment end.\n * @param digitsInNumber - How many digits should be en number. Will be filled by zeros.\n * @returns Segment patterns.\n */ function segmentToNumberPatterns(from, to, digitsInNumber = 0) {\n    const fromDigits = numberToDigits(from);\n    const digitsCount = fromDigits.length;\n    if (from < 10 && to < 10 || from === to) {\n        const zeros = digitsInNumber - digitsCount;\n        return [\n            segmentRangeNumberPattern(from, to, zeros)\n        ];\n    }\n    const toDigits = numberToDigits(to);\n    if (digitsCount !== toDigits.length) {\n        const decadeRanges = splitToDecadeRanges(from, to);\n        const parts = concat(decadeRanges.map(([from, to])=>segmentToNumberPatterns(from, to, digitsInNumber)));\n        return parts;\n    }\n    const commonStart = splitCommonDiff(fromDigits, toDigits);\n    if (Array.isArray(commonStart)) {\n        const [common, from1, to1] = commonStart;\n        const digitsInNumber1 = digitsCount - common.length;\n        const diffParts = segmentToNumberPatterns(from1, to1, digitsInNumber1);\n        return [\n            AlternativeNode(Array.from(common, SimpleCharNode), DisjunctionCapturingGroupNode(diffParts))\n        ];\n    }\n    const range = Array.from({\n        length: digitsCount - 1\n    });\n    const middleSegment = segmentRangeNumberPattern(fromDigits[0] + 1, toDigits[0] - 1);\n    const parts1 = [\n        ...range.map((_, i)=>{\n            const ri = digitsCount - i - 1;\n            const d = Number(i > 0);\n            return AlternativeNode(fromDigits.map((digit, j)=>{\n                if (j < ri) {\n                    return SimpleCharNode(digit);\n                }\n                if (j > ri) {\n                    return segmentRangeNumberPattern(0, 9);\n                }\n                return segmentRangeNumberPattern(digit + d, 9);\n            }));\n        }),\n        // but output more readable\n        ...middleSegment ? [\n            AlternativeNode(middleSegment, Array.from({\n                length: digitsCount - 1\n            }, ()=>DigitPatternNode()))\n        ] : [],\n        ...range.map((_, i)=>{\n            const ri = digitsCount - i - 1;\n            const d = Number(i > 0);\n            return AlternativeNode(toDigits.map((digit, j)=>{\n                if (j < ri) {\n                    return SimpleCharNode(digit);\n                }\n                if (j > ri) {\n                    return segmentRangeNumberPattern(0, 9);\n                }\n                return segmentRangeNumberPattern(0, digit - d);\n            }));\n        })\n    ];\n    return optimizeSegmentNumberPatterns(parts1);\n}\n\n/**\n * Get regex for given numeric range.\n * @param from - Range start.\n * @param to - Range end.\n * @returns Range pattern.\n */ function rangeToRegex(from, to = Infinity) {\n    if (from === Infinity) {\n        return NumberPatternNode();\n    }\n    const numberPatterns = to === Infinity ? rayToNumberPatterns(from) : segmentToNumberPatterns(from, to);\n    const regex = DisjunctionCapturingGroupNode(numberPatterns);\n    return regex;\n}\n\n/**\n * Find matched versions.\n * @param minVersion - Semver version.\n * @param maxVersion - Semver version.\n * @param bases - Base semver versions.\n * @param options - Semver compare options.\n * @returns Matched versions.\n */ function findMatchedVersions(minVersion, maxVersion, bases, options) {\n    const compareOptions = {\n        ...options,\n        allowHigherVersions: true\n    };\n    const minComparator = (ver)=>compareSemvers(ver, minVersion, compareOptions);\n    const maxComparator = (ver)=>compareSemvers(maxVersion, ver, compareOptions);\n    const comparator = minVersion && maxVersion ? (ver)=>minComparator(ver) && maxComparator(ver) : minVersion ? minComparator : maxVersion ? maxComparator : ()=>true;\n    return bases.filter(comparator);\n}\n\n/**\n * Get useragent regexes for given browsers.\n * @param browsers - Browsers.\n * @param options - Semver compare options.\n * @param targetRegexes - Override default regexes.\n * @returns User agent regexes.\n */ function getRegexesForBrowsers(browsers, options, targetRegexes = regexes) {\n    const result = [];\n    let prevFamily = \"\";\n    let prevRegexIsGlobal = false;\n    targetRegexes.forEach((regex)=>{\n        const requestVersions = browsers.get(regex.family);\n        if (!requestVersions) {\n            return;\n        }\n        let { version , minVersion , maxVersion  } = regex;\n        if (version) {\n            minVersion = version;\n            maxVersion = version;\n        }\n        let matchedVersions = findMatchedVersions(minVersion, maxVersion, requestVersions, options);\n        if (matchedVersions.length) {\n            // regex contains global patch\n            if (prevFamily === regex.family && prevRegexIsGlobal) {\n                version = undefined;\n                minVersion = undefined;\n                maxVersion = undefined;\n                matchedVersions = requestVersions;\n                result.pop();\n            }\n            result.push({\n                ...regex,\n                version,\n                minVersion,\n                maxVersion,\n                requestVersions,\n                matchedVersions\n            });\n        }\n        prevRegexIsGlobal = !version && !minVersion && !maxVersion;\n        prevFamily = regex.family;\n    });\n    return result;\n}\n\n/**\n * Compile regexes.\n * @param regexes - Objects with info about compiled regexes.\n * @returns Objects with info about compiled regexes.\n */ function compileRegexes(regexes) {\n    return regexes.map(({ regexAst , ...regex })=>{\n        const optimizedRegexAst = optimizeRegex(regexAst);\n        return {\n            ...regex,\n            regexAst: optimizedRegexAst,\n            regex: toRegex(optimizedRegexAst)\n        };\n    });\n}\n/**\n * Compile regex.\n * @param regexes - Objects with info about compiled regexes.\n * @returns Compiled common regex.\n */ function compileRegex(regexes) {\n    const partsRegexes = regexes.map(({ regexAst  })=>CapturingGroupNode(regexAst.body));\n    const regexAst = optimizeRegex(AstRegExpNode(DisjunctionCapturingGroupNode(partsRegexes)));\n    return toRegex(regexAst);\n}\n\n/**\n * Get number patterns count from the regex.\n * @param regex - Target regex.\n * @returns Number patterns count.\n */ function getNumberPatternsCount(regex) {\n    const regexAst = parseRegex(regex);\n    let count = 0;\n    RegexpTree.traverse(regexAst, {\n        Group (nodePath) {\n            if (isNumberPatternNode(nodePath.node)) {\n                count++;\n            }\n        }\n    });\n    return count;\n}\nfunction replaceNumberPatterns(regex, numbers, numberPatternsCount) {\n    let regexAst = parseRegex(regex);\n    const numbersToReplace = typeof numberPatternsCount === \"number\" && numberPatternsCount < numbers.length ? numbers.slice(0, numberPatternsCount) : numbers.slice();\n    RegexpTree.traverse(regexAst, visitors({\n        every () {\n            return Boolean(numbersToReplace.length);\n        },\n        Group (nodePath) {\n            if (isNumberPatternNode(nodePath.node) && numbersToReplace.length) {\n                if (regexAst === nodePath.node) {\n                    regexAst = numbersToReplace.shift();\n                } else {\n                    nodePath.replace(numbersToReplace.shift());\n                }\n                return false;\n            }\n            return true;\n        }\n    }));\n    return regexAst;\n}\n/**\n * Get from regex part with number patterns.\n * @param regex - Target regex.\n * @param numberPatternsCount - Number patterns to extract.\n * @returns Regex part with number patterns.\n */ function getNumberPatternsPart(regex, numberPatternsCount) {\n    const regexAst = parseRegex(regex);\n    const maxNumbersCount = Math.min(getNumberPatternsCount(regexAst), numberPatternsCount || Infinity);\n    const expressions = [];\n    let numbersCounter = 0;\n    let containsNumberPattern = false;\n    RegexpTree.traverse(regexAst, visitors({\n        every: {\n            pre ({ node , parent  }) {\n                if (node === regexAst) {\n                    return true;\n                }\n                if (!isExpressionNode(node)) {\n                    return false;\n                }\n                if (parent === regexAst) {\n                    containsNumberPattern = false;\n                }\n                return numbersCounter < maxNumbersCount;\n            },\n            post ({ node , parent  }) {\n                if (node !== regexAst && parent === regexAst && isExpressionNode(node) && (containsNumberPattern || numbersCounter > 0 && numbersCounter < maxNumbersCount)) {\n                    expressions.push(node);\n                }\n            }\n        },\n        Group (nodePath) {\n            if (isNumberPatternNode(nodePath.node) && numbersCounter < maxNumbersCount) {\n                containsNumberPattern = true;\n                numbersCounter++;\n                return false;\n            }\n            return true;\n        }\n    }));\n    if (expressions.length === 1 && !isNumberPatternNode(expressions[0])) {\n        return getNumberPatternsPart(expressions[0], maxNumbersCount);\n    }\n    return expressions;\n}\n/**\n * Ranged semver to regex patterns.\n * @param rangedVersion - Ranged semver.\n * @param options - Semver compare options.\n * @returns Array of regex pattern.\n */ function rangedSemverToRegex(rangedVersion, options) {\n    const { ignoreMinor , ignorePatch , allowHigherVersions  } = options;\n    const ignoreIndex = rangedVersion[0] === Infinity ? 0 : ignoreMinor ? 1 : ignorePatch ? 2 : 3;\n    if (allowHigherVersions) {\n        const numberPatterns = [];\n        let prevWasZero = true;\n        let d = 0;\n        let start = 0;\n        const createMapper = (i)=>(range, j)=>{\n                if (j >= ignoreIndex) {\n                    return NumberPatternNode();\n                }\n                start = Array.isArray(range) ? range[0] : range;\n                if (j < i) {\n                    return NumberCharsNode(start);\n                }\n                if (j > i) {\n                    return NumberPatternNode();\n                }\n                return rangeToRegex(start + d);\n            };\n        for(let i = ignoreIndex - 1; i >= 0; i--){\n            if (prevWasZero && !rangedVersion[i]) {\n                continue;\n            }\n            prevWasZero = false;\n            numberPatterns.push(rangedVersion.map(createMapper(i)));\n            d = 1;\n        }\n        return numberPatterns;\n    }\n    const numberPatterns1 = rangedVersion.map((range, i)=>{\n        if (i >= ignoreIndex) {\n            return NumberPatternNode();\n        }\n        if (Array.isArray(range)) {\n            return rangeToRegex(range[0], range[1]);\n        }\n        return NumberCharsNode(range);\n    });\n    return [\n        numberPatterns1\n    ];\n}\n\nfunction applyVersionsToRegex(regex, versions, options) {\n    const { allowHigherVersions  } = options;\n    const regexAst = parseRegex(regex);\n    const finalVersions = allowHigherVersions && versions.length ? [\n        versions[0]\n    ] : versions;\n    const maxRequiredPartsCount = finalVersions.reduce((maxRequiredPartsCount, version)=>Math.max(maxRequiredPartsCount, getRequiredSemverPartsCount(version, options)), 1);\n    const numberPatternsPart = getNumberPatternsPart(regexAst, maxRequiredPartsCount);\n    const versionsPart = DisjunctionCapturingGroupNode(...finalVersions.map((version)=>rangedSemverToRegex(version, options).map((parts)=>replaceNumberPatterns(AlternativeNode(clone(numberPatternsPart)), parts, maxRequiredPartsCount))));\n    RegexpTree.traverse(regexAst, visitors({\n        every (nodePath) {\n            if (!numberPatternsPart.length) {\n                return false;\n            }\n            if (nodePath.node === numberPatternsPart[0]) {\n                if (numberPatternsPart.length === 1) {\n                    nodePath.replace(versionsPart);\n                } else {\n                    nodePath.remove();\n                }\n                numberPatternsPart.shift();\n            }\n            return true;\n        }\n    }));\n    return regexAst;\n}\n/**\n * Apply browser versions to info objects.\n * @param browserRegexes - Objects with requested browser version and regex.\n * @param options - Semver compare options.\n * @returns Objects with requested browser version and regex special for this version.\n */ function applyVersionsToRegexes(browserRegexes, options) {\n    return browserRegexes.map(({ regex: sourceRegex , version , maxVersion , matchedVersions , ...other })=>{\n        let regexAst = parseRegex(sourceRegex);\n        if (!version) {\n            regexAst = applyVersionsToRegex(regexAst, versionsListToRanges(matchedVersions), {\n                ...options,\n                allowHigherVersions: !maxVersion && options.allowHigherVersions\n            });\n        }\n        return {\n            regex: null,\n            sourceRegex,\n            regexAst,\n            version,\n            maxVersion,\n            matchedVersions,\n            ...other\n        };\n    });\n}\n\nconst defaultOptions = {\n    ignoreMinor: false,\n    ignorePatch: true,\n    allowZeroSubversions: false,\n    allowHigherVersions: false\n};\n/**\n * Get source regexes objects from browserslist query.\n * @param options - Browserslist and semver compare options.\n * @returns Source regexes objects.\n */ function getPreUserAgentRegexes(options = {}) {\n    const finalOptions = {\n        ...defaultOptions,\n        ...options\n    };\n    const browsersList = getBrowsersList(finalOptions);\n    const mergedBrowsers = mergeBrowserVersions(browsersList);\n    const sourceRegexes = getRegexesForBrowsers(mergedBrowsers, finalOptions);\n    const versionedRegexes = applyVersionsToRegexes(sourceRegexes, finalOptions);\n    return versionedRegexes;\n}\n/**\n * Compile browserslist query to regexes.\n * @param options - Browserslist and semver compare options.\n * @returns Objects with info about compiled regexes.\n */ function getUserAgentRegexes(options = {}) {\n    return compileRegexes(getPreUserAgentRegexes(options));\n}\n/**\n * Compile browserslist query to regex.\n * @param options - Browserslist and semver compare options.\n * @returns Compiled regex.\n */ function getUserAgentRegex(options = {}) {\n    return compileRegex(getPreUserAgentRegexes(options));\n}\n\nexport { AlternativeNode, AstRegExpNode, CapturingGroupNode, CharacterClassNode, ClassRangeNode, DigitPatternNode, DisjunctionCapturingGroupNode, DisjunctionNode, MetaCharNode, NumberCharsNode, NumberPatternNode, RangeQuantifierNode, RepetitionNode, SemverPart, SimpleCharNode, SimpleQuantifierNode, applyVersionsToRegex, applyVersionsToRegexes, clone, compareArrays, compareSemvers, compileRegex, compileRegexes, concat, defaultOptions, findMatchedVersions, getBrowsersList, getNumberPatternsCount, getNumberPatternsPart, getPreUserAgentRegexes, getRegexesForBrowsers, getRequiredSemverPartsCount, getUserAgentRegex, getUserAgentRegexes, isCharNode, isDigitRangeNode, isExpressionNode, isNumberPatternNode, mergeBrowserVersions, mergeDigits, numberToDigits, numbersToRanges, optimizeRegex, optimizeSegmentNumberPatterns, parseBrowsersList, parseRegex, rangeSemver, rangeToRegex, rangedSemverToRegex, rayRangeDigitPattern, rayToNumberPatterns, replaceNumberPatterns, segmentRangeNumberPattern, segmentToNumberPatterns, semverify, splitCommonDiff, splitToDecadeRanges, toRegex, toString, versionsListToRanges, visitors };\n//# sourceMappingURL=index.js.map\n","module.exports = [\n  '>0.25%',\n  'not op_mini all',\n  'not dead',\n  'Firefox ESR',\n];\n","/**\n * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { getUserAgentRegex } from 'browserslist-useragent-regexp'\n// eslint-disable-next-line n/no-extraneous-import\nimport browserslist from 'browserslist'\nimport browserslistConfig from '@nextcloud/browserslist-config'\n\n// Generate a regex that matches user agents to detect incompatible browsers\nexport const supportedBrowsersRegExp = getUserAgentRegex({ allowHigherVersions: true, browsers: browserslistConfig })\nexport const supportedBrowsers = browserslist(browserslistConfig)\n","/**\n * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { getBuilder } from '@nextcloud/browser-storage'\n\nexport default getBuilder('core')\n\t.clearOnLogout()\n\t.persist()\n\t.build()\n","/**\n * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { generateUrl } from '@nextcloud/router'\nimport { supportedBrowsersRegExp } from '../services/BrowsersListService.js'\nimport browserStorage from '../services/BrowserStorageService.js'\nimport logger from '../logger.js'\n\nexport const browserStorageKey = 'unsupported-browser-ignore'\nconst redirectPath = generateUrl('/unsupported')\n\nconst isBrowserOverridden = browserStorage.getItem(browserStorageKey) === 'true'\n\n/**\n * Test the current browser user agent against our official browserslist config\n * and redirect if unsupported\n */\nexport const testSupportedBrowser = function() {\n\tif (supportedBrowsersRegExp.test(navigator.userAgent)) {\n\t\tlogger.debug('this browser is officially supported ! 🚀')\n\t\treturn\n\t}\n\n\t// If incompatible BUT ignored, let's keep going\n\tif (isBrowserOverridden) {\n\t\tlogger.debug('this browser is NOT supported but has been manually overridden ! ⚠️')\n\t\treturn\n\t}\n\n\t// If incompatible, NOT overridden AND NOT already on the warning page,\n\t// redirect to the unsupported warning page\n\tif (window.location.pathname.indexOf(redirectPath) === -1) {\n\t\tconst redirectUrl = window.location.href.replace(window.location.origin, '')\n\t\tconst base64Param = Buffer.from(redirectUrl).toString('base64')\n\t\thistory.pushState(null, null, `${redirectPath}?redirect_url=${base64Param}`)\n\t\twindow.location.reload()\n\t}\n}\n"],"names":["browsers","require$$0","browserVersions","agents","versions","require$$1","agentsData","require$$2","unpackBrowserVersions","versionsData","usage","version","agents_1","map","key","data","entry","list","map2","key2","BrowserslistError","message","error","AND_REGEXP","OR_REGEXP","flatten","array","a","b","find","string","predicate","n","max","parsed","matchQuery","all","query","node","name","type","match","i","matchBlock","qs","parse","queries","block","noop","browser","opts","resolve","context","jsReleases","jsEOL","path","require$$3","e2c","require$$4","require$$5","require$$6","env","require$$7","YEAR","ANDROID_EVERGREEN_FIRST","OP_MOB_BLINK_FIRST","isVersionsMatch","versionA","versionB","isEolReleased","browserslist","normalize","normalizeElectron","versionToUse","nameMapper","getMajor","getMajorVersions","released","number","majorVersions","uniq","minimum","selected","filtered","fillUsage","result","generateFilter","sign","v","generateSemverFilter","parseSimpleInt","compareSemver","x","compare","semverFilterLoose","operator","range","compareSemverLoose","resolveVersion","normalizeVersion","resolved","filterByYear","since","byName","date","cloneData","desktop","normalizeAndroidData","cloned","normalizeAndroidVersions","androidVersions","chromeVersions","iFirstEvergreen","copyObject","obj","copy","android","chrome","checkName","unknownQuery","filterJumps","nVersions","jump","latest","isSupported","flags","withPartial","QUERIES","index","j","parts","filter","prepareOpts","prepareQueries","config","checkQueries","cache","stats","cacheKey","name1","name2","version1","version2","customStats","nodeQuery","matched","sinceQuery","year","month","day","coverQuery","coverage","place","coveraged","validVersions","popularity","percentage","features","checkDesktop","fromToUse","toToUse","from","to","alias","now","dead","full","interval","release","browserslist_1","compatDotallSTransform","ast","shouldRun","toValue","toSymbol","compatNamedCapturingGroupsTransform","compatXFlagTransform","_ref","transforms","gen","generator","expression","assertion","_assertion","expressions","quantifier","greedy","value","escapeChar","namePart","generator_1","NON_BINARY_PROP_NAMES_TO_ALIASES","NON_BINARY_ALIASES_TO_PROP_NAMES","inverseMap","BINARY_PROP_NAMES_TO_ALIASES","BINARY_ALIASES_TO_PROP_NAMES","GENERAL_CATEGORY_VALUE_TO_ALIASES","GENERAL_CATEGORY_VALUE_ALIASES_TO_VALUES","SCRIPT_VALUE_TO_ALIASES","SCRIPT_VALUE_ALIASES_TO_VALUE","inverse","isValidName","isValidValue","isGeneralCategoryName","isGeneralCategoryValue","isScriptCategoryName","isScriptCategoryValue","isAlias","isBinaryPropertyName","getCanonicalName","getCanonicalValue","parserUnicodeProperties","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_i","_s","err","_toConsumableArray","arr2","yytext","yy","__","__loc","yyloc","start","end","EOF","productions","_1","_1loc","_2","_3","_4","_2loc","_3loc","_4loc","Node","checkFlags","loc","_loc","Char","UnicodeProperty","GroupRefOrDecChar","NamedGroupRefOrChars","getRange","nameRaw","decodeUnicodeGroupName","namedGroups","checkClassRange","tokens","table","stack","tokenizer","lexRules","groupName","validateUnicodeGroupName","s","lexRulesByConditions","EOF_TOKEN","state","lexRulesForState","lexRuleIndex","lexRule","token","tokensToQueue","_tokensQueue","symbol","line","column","lineSource","lineData","pad","nlRe","nlMatch","tokenType","regexp","yyparse","options","parseOptions","globalOptions","shiftedToken","unexpectedEndOfInput","unexpectedToken","_loc2","productionNumber","production","hasSemanticAction","semanticValueArgs","locationArgs","rhsLength","stackEntry","reduceStackEntry","semanticActionArgs","nextState","symbolToReduceWith","customTokenizer","capturingGroupsCount","parsingString","lexer","lastSlash","text","unicodeProperties","negative","separatorIdx","isShorthand","isBinaryProperty","kind","codePoint","_value$split$slice","_value$split$slice2","lead","trail","hex","validFlags","seen","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","flag","textLoc","reference","uReStart","ucpReStart","ucpReAnywhere","isUnicodeName","isUnicodeState","uidRe","_","leadSurrogate","trailSurrogate","leadSurrogateOnly","trailSurrogateOnly","nonSurrogate","referenceRaw","startOffset","startLine","endLine","startColumn","charRe","chars","parseError","regexpTree","regexpTreeParser","generatedParseFn","parser","_createClass","defineProperties","target","props","descriptor","Constructor","protoProps","staticProps","_classCallCheck","instance","DEFAULT_COLLECTION_PROP","DEFAULT_SINGLE_PROP","NodePath","parentPath","property","childPath","parent","newNode","nodeProps","jsonSkipLoc","format","useLoc","prop","dx","nodePath","astTraverse","root","pre","post","skipProperty","visit","idx","res","_prop","child","traverse","handlers","handler","getPathFor","handlerResult","handlerFuncPre","_handlerResult","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","handlerFuncPost","TransformResult","extra","transform","compatTransforms","_transform","compatTranspiler","transformsWhitelist","transformToApply","transformName","clone","charSurrogatePairToSingleUnicodeTransform","UPPER_A_CP","UPPER_Z_CP","LOWER_A_CP","LOWER_Z_CP","DIGIT_0_CP","DIGIT_9_CP","charCodeToSimpleCharTransform","isSimpleRange","isPrintableASCIIChar","newChar","needsEscape","classRange","parentType","charCaseInsensitiveLowercaseTransform","isAZClassRange","lower","displaySymbolAsValue","_getSurrogatePairFrom","getSurrogatePairFromCodePoint","code","charClassRemoveDuplicatesTransform","sources","source","disjunctionToList","listToDisjunction","left","right","increaseQuantifierByOne","utils","_require","quantifiersMergeTransform","previousSibling","_extractFromTo","extractFromTo","previousSiblingFrom","previousSiblingTo","_extractFromTo2","nodeFrom","nodeTo","isGreedyOpenRange","quantifierRangeToSymbolTransform","rewriteOpenZero","rewriteOpenOne","rewriteExactOne","charClassClassrangesToCharsTransform","charClassToMetaTransform","rewriteNumberRanges","rewriteWordRanges","rewriteWhitespaceRanges","isFullNumberRange","hasIFlag","hasUFlag","numberPath","lowerCasePath","upperCasePath","underscorePath","u017fPath","u212aPath","isMetaChar","isLowerCaseRange","isUpperCaseRange","isUnderscore","isCodePoint","whitespaceRangeTests","isChar","char","test","nNode","charClassToSingleCharTransform","hasAppropriateSiblings","isAppropriateChar","_node$expressions$","escaped","isMeta","getInverseMeta","shouldEscape","previousNode","charEscapeUnescapeTransform","shouldUnescape","hasXFlag","preservesEscape","preservesInCharClass","preservesOpeningCurlyBraceEscape","preservesClosingCurlyBraceEscape","consumeNumbers","startIndex","rtl","siblingNode","isSimpleChar","nbFollowingNumbers","nextSiblingNode","nbPrecedingNumbers","previousSiblingNode","charClassClassrangesMergeTransform","metas","sortCharClass","fitsInMetas","combinesWithPrecedingClassRange","combinesWithFollowingClassRange","nbMergedChars","charCombinesWithPrecedingChars","aValue","getSortValue","bValue","isControl","hasIUFlags","fitsInMeta","meta","fitsInMetaS","fitsInMetaD","fitsInMetaW","fitsInClassRange","isMetaWCharOrCode","currentExpression","precedingExpresion","disjunctionRemoveDuplicatesTransform","uniqueNodesMap","part","encoded","groupSingleCharsToCharClass","charset","shouldProcess","characterClass","removeEmptyGroupTransform","ungroupTransform","combineRepeatingPatternsTransform","combineRepeatingPatternLeft","combineWithPreviousRepetition","combineRepetitionWithPrevious","alternative","nbPossibleLengths","previousChild","rightLength","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","optimizationTransforms","optimizer","_ref$whitelist","whitelist","_ref$blacklist","blacklist","transformsRaw","prevResultString","transformer","newResult","EPSILON","EPSILON_CLOSURE","specialSymbols","NFA","inState","outState","transitions","acceptingState","_this","visited","symbols","visitState","_ref2","symbolTransitions","combinedState","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","nfa","_toArray","currentTransitionMap","minimize","dfa","allStates","alphabet","accepting","nonAccepting","isAccepting","set","current","previous","_loop","newTransitionMap","_set","handledStates","_set2","first","rest","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","restSets","_iterator4","_step4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_iterator5","_step5","handledState","areEquivalent","newSets","sameRow","remaped","minimizedTable","minimizedAcceptingStates","updateAcceptingStates","_idx","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_iterator6","_step6","originalTransition","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_iterator7","_step7","originalState","r1","r2","s1","s2","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_iterator8","_step8","goToSameSet","originalTransitionS1","originalTransitionS2","dfaMinimizer","DFAMinimizer","DFA","stateNumbers","nfaTable","nfaStates","startState","worklist","nfaAcceptingStates","dfaTable","states","nfaAcceptingState","dfaStateLabel","onSymbol","nfaStatesOnSymbol","nfaStateOnSymbol","dfaStatesOnSymbolSet","dfaStatesOnSymbol","dfaOnSymbolStr","calculatedDFATable","newStatesMap","transitionTable","originalNumber","newNumber","originalRow","row","_originalNumber","State","_ref$accepting","toState","_possibleConstructorReturn","self","call","_inherits","subClass","superClass","NFAState","_State","_nextState","_nextState2","_this2","epsilonTransitions","closure","nextClosure","nfaState","c","e","altPair","second","alt","_len","fragments","_key","fragment","orPair","or","_len2","_key2","repExplicit","rep","plusRep","questionRep","builders","nfaFromRegexp","nfaFromRegExp","finiteAutomaton","RegExpTree","re","groups","group","groupNumber","runtime","_traverse","fa","compat","regexpTree_1","regexes","numbersToRanges","numbers","SemverPart","semverify","versionParts","versionPart","semverPart","semver","rangeSemver","partIndex","i1","compareSemvers","major","minor","patch","majorBase","minorBase","patchBase","ignoreMinor","ignorePatch","allowHigherVersions","compareMinor","comparePatch","getRequiredSemverPartsCount","allowZeroSubversions","shouldRepeatCount","parseBrowsersList","browsersList","family","versionString","versionStringTo","getBrowsersList","browserslistOptions","compareArrays","len","concat","items","mergeBrowserVersions","merge","strVersion","versionsListToRanges","ranges","prev","p","AstRegExpNode","body","AlternativeNode","exps","SimpleCharNode","MetaCharNode","ClassRangeNode","CharacterClassNode","SimpleQuantifierNode","RangeQuantifierNode","CapturingGroupNode","RepetitionNode","DisjunctionNode","exprs","disjunction","expr","DisjunctionCapturingGroupNode","DigitPatternNode","NumberPatternNode","NumberCharsNode","isNumberPatternNode","isCharNode","isDigitRangeNode","isExpressionNode","parseRegex","regex","RegexpTree","toRegex","src","toString","classes","visitors","every","newVisitors","className","visitor","visitorPre","visitorPost","optimizeRegex","regexAst","mergeDigits","optimizeSegmentNumberPatterns","patterns","prevNode","merged","exp","numberToDigits","num","rayRangeDigitPattern","digit","includes","rangeStart","rayToNumberPatterns","digits","digitsCount","other","zeros","numberPatterns","topNodes","ri","d","nodes","segmentRangeNumberPattern","fromNode","toNode","zerosPrefix","addPrefix","splitToDecadeRanges","decade","splitCommonDiff","common","currA","currB","diffA","diffB","segmentToNumberPatterns","digitsInNumber","fromDigits","toDigits","decadeRanges","commonStart","from1","to1","digitsInNumber1","diffParts","middleSegment","parts1","rangeToRegex","findMatchedVersions","minVersion","maxVersion","bases","compareOptions","minComparator","ver","maxComparator","comparator","getRegexesForBrowsers","targetRegexes","prevFamily","prevRegexIsGlobal","requestVersions","matchedVersions","compileRegex","partsRegexes","getNumberPatternsCount","count","replaceNumberPatterns","numberPatternsCount","numbersToReplace","getNumberPatternsPart","maxNumbersCount","numbersCounter","containsNumberPattern","rangedSemverToRegex","rangedVersion","ignoreIndex","prevWasZero","createMapper","applyVersionsToRegex","finalVersions","maxRequiredPartsCount","numberPatternsPart","versionsPart","applyVersionsToRegexes","browserRegexes","sourceRegex","defaultOptions","getPreUserAgentRegexes","finalOptions","mergedBrowsers","sourceRegexes","getUserAgentRegex","browserlist_config","supportedBrowsersRegExp","browserslistConfig","supportedBrowsers","getBuilder","browserStorageKey","redirectPath","generateUrl","isBrowserOverridden","browserStorage","testSupportedBrowser","logger","redirectUrl","base64Param","Buffer"],"mappings":"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E,MAAO,uGACP,OAAQ,UACR,QAAS,CACP,EACA,EACA,CACD,CACF,EACD,CACE,MAAO,aACP,OAAQ,SACT,EACD,CACE,MAAO,gBACP,OAAQ,UACR,QAAS,CACP,EACA,EACA,CACD,CACF,EACD,CACE,MAAO,iBACP,OAAQ,UACR,QAAS,CACP,EACA,EACA,CACD,CACF,EACD,CACE,MAAO,gBACP,OAAQ,UACR,QAAS,CACP,EACA,EACA,CACD,CACF,EACD,CACE,MAAO,sBACP,OAAQ,UACR,QAAS,CACP,EACA,EACA,CACD,CACF,EACD,CACE,MAAO,oBACP,OAAQ,UACR,QAAS,CACP,EACA,EACA,CACD,CACF,EACD,CACE,MAAO,0CACP,OAAQ,SACT,EAID,CACE,MAAO,4DACP,OAAQ,UACR,QAAS,CACP,EACA,EACA,CACD,CACF,EACD,CACE,MAAO,8CACP,OAAQ,IACT,EACD,CACE,MAAO,qDACP,OAAQ,IACT,EAID,CACE,MAAO,6CACP,OAAQ,SACR,WAAY,CACV,GACA,GACA,CACD,CACF,EAID,CACE,MAAO,0CACP,OAAQ,SACR,WAAY,CACV,GACA,EACA,CACD,CACF,EACD,CACE,MAAO,2CACP,OAAQ,QACT,EACD,CACE,MAAO,gDACP,OAAQ,SACT,EACD,CACE,MAAO,2BACP,OAAQ,QACT,EACD,CACE,MAAO,2DACP,OAAQ,QACT,EACD,CACE,MAAO,+BACP,OAAQ,SACT,EACD,CACE,MAAO,iDACP,OAAQ,QACT,EACD,CACE,MAAO,6CACP,OAAQ,OACT,EACD,CACE,MAAO,sCACP,OAAQ,OACT,CACH,ECzPI,SAASC,GAAgBC,EAAS,CAClC,OAAI,OAAOA,GAAY,SACZA,EAEPA,EAAQ,SAAW,EACZA,EAAQ,CAAC,EAEb,CACHA,EAAQ,CAAC,EACTA,EAAQA,EAAQ,OAAS,CAAC,CAClC,CACA,CAEA,IAAIC,GACH,SAASA,EAAY,CAClBA,EAAWA,EAAW,MAAW,CAAC,EAAI,QACtCA,EAAWA,EAAW,MAAW,CAAC,EAAI,QACtCA,EAAWA,EAAW,MAAW,CAAC,EAAI,OAC1C,GAAGA,IA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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57]}