{"version":3,"file":"UserManagementNavigation-a0iPIKqj.mjs","sources":["../../apps/settings/src/components/GroupListItem.vue","../../apps/settings/src/components/Users/UserSettingsDialog.vue","../../apps/settings/src/composables/useGroupsNavigation.ts","../../apps/settings/src/views/UserManagementNavigation.vue"],"sourcesContent":["<!--\n  - SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n\n<template>\n\t<Fragment>\n\t\t<NcModal v-if=\"showRemoveGroupModal\"\n\t\t\t@close=\"showRemoveGroupModal = false\">\n\t\t\t<div class=\"modal__content\">\n\t\t\t\t<h2 class=\"modal__header\">\n\t\t\t\t\t{{ t('settings', 'Please confirm the group removal') }}\n\t\t\t\t</h2>\n\t\t\t\t<NcNoteCard type=\"warning\"\n\t\t\t\t\tshow-alert>\n\t\t\t\t\t{{ t('settings', 'You are about to remove the group \"{group}\". The accounts will NOT be deleted.', { group: name }) }}\n\t\t\t\t</NcNoteCard>\n\t\t\t\t<div class=\"modal__button-row\">\n\t\t\t\t\t<NcButton type=\"secondary\"\n\t\t\t\t\t\t@click=\"showRemoveGroupModal = false\">\n\t\t\t\t\t\t{{ t('settings', 'Cancel') }}\n\t\t\t\t\t</NcButton>\n\t\t\t\t\t<NcButton type=\"primary\"\n\t\t\t\t\t\t@click=\"removeGroup\">\n\t\t\t\t\t\t{{ t('settings', 'Confirm') }}\n\t\t\t\t\t</NcButton>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</NcModal>\n\n\t\t<NcAppNavigationItem :key=\"id\"\n\t\t\t:exact=\"true\"\n\t\t\t:name=\"name\"\n\t\t\t:to=\"{ name: 'group', params: { selectedGroup: encodeURIComponent(id) } }\"\n\t\t\t:loading=\"loadingRenameGroup\"\n\t\t\t:menu-open=\"openGroupMenu\"\n\t\t\t@update:menuOpen=\"handleGroupMenuOpen\">\n\t\t\t<template #icon>\n\t\t\t\t<AccountGroup :size=\"20\" />\n\t\t\t</template>\n\t\t\t<template #counter>\n\t\t\t\t<NcCounterBubble v-if=\"count\"\n\t\t\t\t\t:type=\"active ? 'highlighted' : undefined\">\n\t\t\t\t\t{{ count }}\n\t\t\t\t</NcCounterBubble>\n\t\t\t</template>\n\t\t\t<template #actions>\n\t\t\t\t<NcActionInput v-if=\"id !== 'admin' && id !== 'disabled' && settings.isAdmin\"\n\t\t\t\t\tref=\"displayNameInput\"\n\t\t\t\t\t:trailing-button-label=\"t('settings', 'Submit')\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t:value=\"name\"\n\t\t\t\t\t:label=\" t('settings', 'Rename group')\"\n\t\t\t\t\t@submit=\"renameGroup(id)\">\n\t\t\t\t\t<template #icon>\n\t\t\t\t\t\t<Pencil :size=\"20\" />\n\t\t\t\t\t</template>\n\t\t\t\t</NcActionInput>\n\t\t\t\t<NcActionButton v-if=\"id !== 'admin' && id !== 'disabled' && settings.isAdmin\"\n\t\t\t\t\t@click=\"showRemoveGroupModal = true\">\n\t\t\t\t\t<template #icon>\n\t\t\t\t\t\t<Delete :size=\"20\" />\n\t\t\t\t\t</template>\n\t\t\t\t\t{{ t('settings', 'Remove group') }}\n\t\t\t\t</NcActionButton>\n\t\t\t</template>\n\t\t</NcAppNavigationItem>\n\t</Fragment>\n</template>\n\n<script>\nimport { Fragment } from 'vue-frag'\n\nimport NcActionButton from '@nextcloud/vue/dist/Components/NcActionButton.js'\nimport NcActionInput from '@nextcloud/vue/dist/Components/NcActionInput.js'\nimport NcAppNavigationItem from '@nextcloud/vue/dist/Components/NcAppNavigationItem.js'\nimport NcButton from '@nextcloud/vue/dist/Components/NcButton.js'\nimport NcCounterBubble from '@nextcloud/vue/dist/Components/NcCounterBubble.js'\nimport NcModal from '@nextcloud/vue/dist/Components/NcModal.js'\nimport NcNoteCard from '@nextcloud/vue/dist/Components/NcNoteCard.js'\n\nimport AccountGroup from 'vue-material-design-icons/AccountGroup.vue'\nimport Delete from 'vue-material-design-icons/Delete.vue'\nimport Pencil from 'vue-material-design-icons/Pencil.vue'\n\nimport { showError } from '@nextcloud/dialogs'\n\nexport default {\n\tname: 'GroupListItem',\n\tcomponents: {\n\t\tAccountGroup,\n\t\tDelete,\n\t\tFragment,\n\t\tNcActionButton,\n\t\tNcActionInput,\n\t\tNcAppNavigationItem,\n\t\tNcButton,\n\t\tNcCounterBubble,\n\t\tNcModal,\n\t\tNcNoteCard,\n\t\tPencil,\n\t},\n\tprops: {\n\t\t/**\n\t\t * If this group is currently selected\n\t\t */\n\t\tactive: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true,\n\t\t},\n\t\t/**\n\t\t * Number of members within this group\n\t\t */\n\t\tcount: {\n\t\t\ttype: Number,\n\t\t\tdefault: null,\n\t\t},\n\t\t/**\n\t\t * Identifier of this group\n\t\t */\n\t\tid: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\t/**\n\t\t * Name of this group\n\t\t */\n\t\tname: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tloadingRenameGroup: false,\n\t\t\topenGroupMenu: false,\n\t\t\tshowRemoveGroupModal: false,\n\t\t}\n\t},\n\tcomputed: {\n\t\tsettings() {\n\t\t\treturn this.$store.getters.getServerData\n\t\t},\n\t},\n\tmethods: {\n\t\thandleGroupMenuOpen() {\n\t\t\tthis.openGroupMenu = true\n\t\t},\n\t\tasync renameGroup(gid) {\n\t\t\t// check if group id is valid\n\t\t\tif (gid.trim() === '') {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst displayName = this.$refs.displayNameInput.$el.querySelector('input[type=\"text\"]').value\n\n\t\t\t// check if group name is valid\n\t\t\tif (displayName.trim() === '') {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tthis.openGroupMenu = false\n\t\t\t\tthis.loadingRenameGroup = true\n\t\t\t\tawait this.$store.dispatch('renameGroup', {\n\t\t\t\t\tgroupid: gid.trim(),\n\t\t\t\t\tdisplayName: displayName.trim(),\n\t\t\t\t})\n\n\t\t\t\tthis.loadingRenameGroup = false\n\t\t\t} catch {\n\t\t\t\tthis.openGroupMenu = true\n\t\t\t\tthis.loadingRenameGroup = false\n\t\t\t}\n\t\t},\n\t\tasync removeGroup() {\n\t\t\ttry {\n\t\t\t\tawait this.$store.dispatch('removeGroup', this.id)\n\t\t\t\tthis.showRemoveGroupModal = false\n\t\t\t} catch (error) {\n\t\t\t\tshowError(t('settings', 'Failed to remove group \"{group}\"', { group: this.name }))\n\t\t\t}\n\t\t},\n\t},\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.modal {\n\t&__header {\n\t\tmargin: 0;\n\t}\n\n\t&__content {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tpadding: 20px;\n\t\tgap: 4px 0;\n\t}\n\n\t&__button-row {\n\t\tdisplay: flex;\n\t\twidth: 100%;\n\t\tjustify-content: space-between;\n\t}\n}\n</style>\n","<!--\n  - SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n\n<template>\n\t<NcAppSettingsDialog :open.sync=\"isModalOpen\"\n\t\t:show-navigation=\"true\"\n\t\t:name=\"t('settings', 'Account management settings')\">\n\t\t<NcAppSettingsSection id=\"visibility-settings\"\n\t\t\t:name=\"t('settings', 'Visibility')\">\n\t\t\t<NcCheckboxRadioSwitch type=\"switch\"\n\t\t\t\tdata-test=\"showLanguages\"\n\t\t\t\t:checked.sync=\"showLanguages\">\n\t\t\t\t{{ t('settings', 'Show language') }}\n\t\t\t</NcCheckboxRadioSwitch>\n\t\t\t<NcCheckboxRadioSwitch type=\"switch\"\n\t\t\t\tdata-test=\"showUserBackend\"\n\t\t\t\t:checked.sync=\"showUserBackend\">\n\t\t\t\t{{ t('settings', 'Show account backend') }}\n\t\t\t</NcCheckboxRadioSwitch>\n\t\t\t<NcCheckboxRadioSwitch type=\"switch\"\n\t\t\t\tdata-test=\"showStoragePath\"\n\t\t\t\t:checked.sync=\"showStoragePath\">\n\t\t\t\t{{ t('settings', 'Show storage path') }}\n\t\t\t</NcCheckboxRadioSwitch>\n\t\t\t<NcCheckboxRadioSwitch type=\"switch\"\n\t\t\t\tdata-test=\"showLastLogin\"\n\t\t\t\t:checked.sync=\"showLastLogin\">\n\t\t\t\t{{ t('settings', 'Show last login') }}\n\t\t\t</NcCheckboxRadioSwitch>\n\t\t</NcAppSettingsSection>\n\n\t\t<NcAppSettingsSection id=\"groups-sorting\"\n\t\t\t:name=\"t('settings', 'Sorting')\">\n\t\t\t<NcNoteCard v-if=\"isGroupSortingEnforced\" type=\"warning\">\n\t\t\t\t{{ t('settings', 'The system config enforces sorting the groups by name. This also disables showing the member count.') }}\n\t\t\t</NcNoteCard>\n\t\t\t<fieldset>\n\t\t\t\t<legend>{{ t('settings', 'Group list sorting') }}</legend>\n\t\t\t\t<NcCheckboxRadioSwitch type=\"radio\"\n\t\t\t\t\t:checked.sync=\"groupSorting\"\n\t\t\t\t\tdata-test=\"sortGroupsByMemberCount\"\n\t\t\t\t\t:disabled=\"isGroupSortingEnforced\"\n\t\t\t\t\tname=\"group-sorting-mode\"\n\t\t\t\t\tvalue=\"member-count\">\n\t\t\t\t\t{{ t('settings', 'By member count') }}\n\t\t\t\t</NcCheckboxRadioSwitch>\n\t\t\t\t<NcCheckboxRadioSwitch type=\"radio\"\n\t\t\t\t\t:checked.sync=\"groupSorting\"\n\t\t\t\t\tdata-test=\"sortGroupsByName\"\n\t\t\t\t\t:disabled=\"isGroupSortingEnforced\"\n\t\t\t\t\tname=\"group-sorting-mode\"\n\t\t\t\t\tvalue=\"name\">\n\t\t\t\t\t{{ t('settings', 'By name') }}\n\t\t\t\t</NcCheckboxRadioSwitch>\n\t\t\t</fieldset>\n\t\t</NcAppSettingsSection>\n\n\t\t<NcAppSettingsSection id=\"email-settings\"\n\t\t\t:name=\"t('settings', 'Send email')\">\n\t\t\t<NcCheckboxRadioSwitch type=\"switch\"\n\t\t\t\tdata-test=\"sendWelcomeMail\"\n\t\t\t\t:checked.sync=\"sendWelcomeMail\"\n\t\t\t\t:disabled=\"loadingSendMail\">\n\t\t\t\t{{ t('settings', 'Send welcome email to new accounts') }}\n\t\t\t</NcCheckboxRadioSwitch>\n\t\t</NcAppSettingsSection>\n\n\t\t<NcAppSettingsSection id=\"default-settings\"\n\t\t\t:name=\"t('settings', 'Defaults')\">\n\t\t\t<NcSelect v-model=\"defaultQuota\"\n\t\t\t\t:input-label=\"t('settings', 'Default quota')\"\n\t\t\t\tplacement=\"top\"\n\t\t\t\t:taggable=\"true\"\n\t\t\t\t:options=\"quotaOptions\"\n\t\t\t\t:create-option=\"validateQuota\"\n\t\t\t\t:placeholder=\"t('settings', 'Select default quota')\"\n\t\t\t\t:clearable=\"false\"\n\t\t\t\t@option:selected=\"setDefaultQuota\" />\n\t\t</NcAppSettingsSection>\n\t</NcAppSettingsDialog>\n</template>\n\n<script>\nimport { formatFileSize, parseFileSize } from '@nextcloud/files'\nimport { generateUrl } from '@nextcloud/router'\n\nimport axios from '@nextcloud/axios'\nimport NcAppSettingsDialog from '@nextcloud/vue/dist/Components/NcAppSettingsDialog.js'\nimport NcAppSettingsSection from '@nextcloud/vue/dist/Components/NcAppSettingsSection.js'\nimport NcCheckboxRadioSwitch from '@nextcloud/vue/dist/Components/NcCheckboxRadioSwitch.js'\nimport NcNoteCard from '@nextcloud/vue/dist/Components/NcNoteCard.js'\nimport NcSelect from '@nextcloud/vue/dist/Components/NcSelect.js'\n\nimport { GroupSorting } from '../../constants/GroupManagement.ts'\nimport { unlimitedQuota } from '../../utils/userUtils.ts'\n\nexport default {\n\tname: 'UserSettingsDialog',\n\n\tcomponents: {\n\t\tNcAppSettingsDialog,\n\t\tNcAppSettingsSection,\n\t\tNcCheckboxRadioSwitch,\n\t\tNcNoteCard,\n\t\tNcSelect,\n\t},\n\n\tprops: {\n\t\topen: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true,\n\t\t},\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tselectedQuota: false,\n\t\t\tloadingSendMail: false,\n\t\t}\n\t},\n\n\tcomputed: {\n\t\tgroupSorting: {\n\t\t\tget() {\n\t\t\t\treturn this.$store.getters.getGroupSorting === GroupSorting.GroupName ? 'name' : 'member-count'\n\t\t\t},\n\t\t\tset(sorting) {\n\t\t\t\tthis.$store.commit('setGroupSorting', sorting === 'name' ? GroupSorting.GroupName : GroupSorting.UserCount)\n\t\t\t},\n\t\t},\n\n\t\t/**\n\t\t * Admin has configured `sort_groups_by_name` in the system config\n\t\t */\n\t\tisGroupSortingEnforced() {\n\t\t\treturn this.$store.getters.getServerData.forceSortGroupByName\n\t\t},\n\n\t\tisModalOpen: {\n\t\t\tget() {\n\t\t\t\treturn this.open\n\t\t\t},\n\t\t\tset(open) {\n\t\t\t\tthis.$emit('update:open', open)\n\t\t\t},\n\t\t},\n\n\t\tshowConfig() {\n\t\t\treturn this.$store.getters.getShowConfig\n\t\t},\n\n\t\tsettings() {\n\t\t\treturn this.$store.getters.getServerData\n\t\t},\n\n\t\tshowLanguages: {\n\t\t\tget() {\n\t\t\t\treturn this.showConfig.showLanguages\n\t\t\t},\n\t\t\tset(status) {\n\t\t\t\tthis.setShowConfig('showLanguages', status)\n\t\t\t},\n\t\t},\n\n\t\tshowLastLogin: {\n\t\t\tget() {\n\t\t\t\treturn this.showConfig.showLastLogin\n\t\t\t},\n\t\t\tset(status) {\n\t\t\t\tthis.setShowConfig('showLastLogin', status)\n\t\t\t},\n\t\t},\n\n\t\tshowUserBackend: {\n\t\t\tget() {\n\t\t\t\treturn this.showConfig.showUserBackend\n\t\t\t},\n\t\t\tset(status) {\n\t\t\t\tthis.setShowConfig('showUserBackend', status)\n\t\t\t},\n\t\t},\n\n\t\tshowStoragePath: {\n\t\t\tget() {\n\t\t\t\treturn this.showConfig.showStoragePath\n\t\t\t},\n\t\t\tset(status) {\n\t\t\t\tthis.setShowConfig('showStoragePath', status)\n\t\t\t},\n\t\t},\n\n\t\tquotaOptions() {\n\t\t\t// convert the preset array into objects\n\t\t\tconst quotaPreset = this.settings.quotaPreset.reduce((acc, cur) => acc.concat({ id: cur, label: cur }), [])\n\t\t\t// add default presets\n\t\t\tif (this.settings.allowUnlimitedQuota) {\n\t\t\t\tquotaPreset.unshift(unlimitedQuota)\n\t\t\t}\n\t\t\treturn quotaPreset\n\t\t},\n\n\t\tdefaultQuota: {\n\t\t\tget() {\n\t\t\t\tif (this.selectedQuota !== false) {\n\t\t\t\t\treturn this.selectedQuota\n\t\t\t\t}\n\t\t\t\tif (this.settings.defaultQuota !== unlimitedQuota.id && OC.Util.computerFileSize(this.settings.defaultQuota) >= 0) {\n\t\t\t\t\t// if value is valid, let's map the quotaOptions or return custom quota\n\t\t\t\t\treturn { id: this.settings.defaultQuota, label: this.settings.defaultQuota }\n\t\t\t\t}\n\t\t\t\treturn unlimitedQuota // unlimited\n\t\t\t},\n\t\t\tset(quota) {\n\t\t\t\tthis.selectedQuota = quota\n\t\t\t},\n\t\t},\n\n\t\tsendWelcomeMail: {\n\t\t\tget() {\n\t\t\t\treturn this.settings.newUserSendEmail\n\t\t\t},\n\t\t\tasync set(value) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.loadingSendMail = true\n\t\t\t\t\tthis.$store.commit('setServerData', {\n\t\t\t\t\t\t...this.settings,\n\t\t\t\t\t\tnewUserSendEmail: value,\n\t\t\t\t\t})\n\t\t\t\t\tawait axios.post(generateUrl('/settings/users/preferences/newUser.sendEmail'), { value: value ? 'yes' : 'no' })\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('could not update newUser.sendEmail preference: ' + e.message, e)\n\t\t\t\t} finally {\n\t\t\t\t\tthis.loadingSendMail = false\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t},\n\n\tmethods: {\n\t\tsetShowConfig(key, status) {\n\t\t\tthis.$store.commit('setShowConfig', { key, value: status })\n\t\t},\n\n\t\t/**\n\t\t * Validate quota string to make sure it's a valid human file size\n\t\t *\n\t\t * @param {string | object} quota Quota in readable format '5 GB' or Object {id: '5 GB', label: '5GB'}\n\t\t * @return {object} The validated quota object or unlimited quota if input is invalid\n\t\t */\n\t\tvalidateQuota(quota) {\n\t\t\tif (typeof quota === 'object') {\n\t\t\t\tquota = quota?.id || quota.label\n\t\t\t}\n\t\t\t// only used for new presets sent through @Tag\n\t\t\tconst validQuota = parseFileSize(quota)\n\t\t\tif (validQuota === null) {\n\t\t\t\treturn unlimitedQuota\n\t\t\t} else {\n\t\t\t\t// unify format output\n\t\t\t\tquota = formatFileSize(parseFileSize(quota))\n\t\t\t\treturn { id: quota, label: quota }\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Dispatch default quota set request\n\t\t *\n\t\t * @param {string | object} quota Quota in readable format '5 GB' or Object {id: '5 GB', label: '5GB'}\n\t\t */\n\t\tsetDefaultQuota(quota = 'none') {\n\t\t\t// Make sure correct label is set for unlimited quota\n\t\t\tif (quota === 'none') {\n\t\t\t\tquota = unlimitedQuota\n\t\t\t}\n\t\t\tthis.$store.dispatch('setAppConfig', {\n\t\t\t\tapp: 'files',\n\t\t\t\tkey: 'default_quota',\n\t\t\t\t// ensure we only send the preset id\n\t\t\t\tvalue: quota.id ? quota.id : quota,\n\t\t\t}).then(() => {\n\t\t\t\tif (typeof quota !== 'object') {\n\t\t\t\t\tquota = { id: quota, label: quota }\n\t\t\t\t}\n\t\t\t\tthis.defaultQuota = quota\n\t\t\t})\n\t\t},\n\t},\n}\n</script>\n\n<style scoped lang=\"scss\">\nfieldset {\n\tfont-weight: bold;\n}\n</style>\n","/**\n * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport type { ComputedRef, Ref } from 'vue'\nimport type { IGroup } from '../views/user-types'\n\nimport { computed } from 'vue'\n\n/**\n * Format a group to a menu entry\n *\n * @param group the group\n */\nfunction formatGroupMenu(group?: IGroup) {\n\tif (typeof group === 'undefined') {\n\t\treturn null\n\t}\n\n\tconst item = {\n\t\tid: group.id,\n\t\ttitle: group.name,\n\t\tusercount: group.usercount,\n\t\tcount: Math.max(0, group.usercount - group.disabled),\n\t}\n\n\treturn item\n}\n\nexport const useFormatGroups = (groups: Ref<IGroup[]>|ComputedRef<IGroup[]>) => {\n\t/**\n\t * All non-disabled non-admin groups\n\t */\n\tconst userGroups = computed(() => {\n\t\tconst formatted = groups.value\n\t\t\t// filter out disabled and admin\n\t\t\t.filter(group => group.id !== 'disabled' && group.id !== 'admin')\n\t\t\t// format group\n\t\t\t.map(group => formatGroupMenu(group))\n\t\t\t// remove invalid\n\t\t\t.filter(group => group !== null)\n\t\treturn formatted as NonNullable<ReturnType<typeof formatGroupMenu>>[]\n\t})\n\n\t/**\n\t * The admin group if found otherwise null\n\t */\n\tconst adminGroup = computed(() => formatGroupMenu(groups.value.find(group => group.id === 'admin')))\n\n\t/**\n\t * The group of disabled users\n\t */\n\tconst disabledGroup = computed(() => formatGroupMenu(groups.value.find(group => group.id === 'disabled')))\n\n\treturn { adminGroup, disabledGroup, userGroups }\n}\n","<!--\n  - SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n<template>\n\t<NcAppNavigation :aria-label=\"t('settings', 'Account management')\">\n\t\t<NcAppNavigationNew button-id=\"new-user-button\"\n\t\t\t:text=\"t('settings','New account')\"\n\t\t\t@click=\"showNewUserMenu\"\n\t\t\t@keyup.enter=\"showNewUserMenu\"\n\t\t\t@keyup.space=\"showNewUserMenu\">\n\t\t\t<template #icon>\n\t\t\t\t<NcIconSvgWrapper :path=\"mdiPlus\" />\n\t\t\t</template>\n\t\t</NcAppNavigationNew>\n\n\t\t<NcAppNavigationList class=\"account-management__system-list\"\n\t\t\tdata-cy-users-settings-navigation-groups=\"system\">\n\t\t\t<NcAppNavigationItem id=\"everyone\"\n\t\t\t\t:exact=\"true\"\n\t\t\t\t:name=\"t('settings', 'Active accounts')\"\n\t\t\t\t:to=\"{ name: 'users' }\">\n\t\t\t\t<template #icon>\n\t\t\t\t\t<NcIconSvgWrapper :path=\"mdiAccount\" />\n\t\t\t\t</template>\n\t\t\t\t<template #counter>\n\t\t\t\t\t<NcCounterBubble v-if=\"userCount\" :type=\"!selectedGroupDecoded ? 'highlighted' : undefined\">\n\t\t\t\t\t\t{{ userCount }}\n\t\t\t\t\t</NcCounterBubble>\n\t\t\t\t</template>\n\t\t\t</NcAppNavigationItem>\n\n\t\t\t<NcAppNavigationItem v-if=\"isAdmin\"\n\t\t\t\tid=\"admin\"\n\t\t\t\t:exact=\"true\"\n\t\t\t\t:name=\"t('settings', 'Admins')\"\n\t\t\t\t:to=\"{ name: 'group', params: { selectedGroup: 'admin' } }\">\n\t\t\t\t<template #icon>\n\t\t\t\t\t<NcIconSvgWrapper :path=\"mdiShieldAccount\" />\n\t\t\t\t</template>\n\t\t\t\t<template #counter>\n\t\t\t\t\t<NcCounterBubble v-if=\"adminGroup && adminGroup.count > 0\"\n\t\t\t\t\t\t:type=\"selectedGroupDecoded === 'admin' ? 'highlighted' : undefined\">\n\t\t\t\t\t\t{{ adminGroup.count }}\n\t\t\t\t\t</NcCounterBubble>\n\t\t\t\t</template>\n\t\t\t</NcAppNavigationItem>\n\n\t\t\t<!-- Hide the disabled if none, if we don't have the data (-1) show it -->\n\t\t\t<NcAppNavigationItem v-if=\"disabledGroup && (disabledGroup.usercount > 0 || disabledGroup.usercount === -1)\"\n\t\t\t\tid=\"disabled\"\n\t\t\t\t:exact=\"true\"\n\t\t\t\t:name=\"t('settings', 'Disabled accounts')\"\n\t\t\t\t:to=\"{ name: 'group', params: { selectedGroup: 'disabled' } }\">\n\t\t\t\t<template #icon>\n\t\t\t\t\t<NcIconSvgWrapper :path=\"mdiAccountOff\" />\n\t\t\t\t</template>\n\t\t\t\t<template v-if=\"disabledGroup.usercount > 0\" #counter>\n\t\t\t\t\t<NcCounterBubble :type=\"selectedGroupDecoded === 'disabled' ? 'highlighted' : undefined\">\n\t\t\t\t\t\t{{ disabledGroup.usercount }}\n\t\t\t\t\t</NcCounterBubble>\n\t\t\t\t</template>\n\t\t\t</NcAppNavigationItem>\n\t\t</NcAppNavigationList>\n\n\t\t<NcAppNavigationCaption :name=\"t('settings', 'Groups')\"\n\t\t\t:disabled=\"loadingAddGroup\"\n\t\t\t:aria-label=\"loadingAddGroup ? t('settings', 'Creating group…') : t('settings', 'Create group')\"\n\t\t\tforce-menu\n\t\t\tis-heading\n\t\t\t:open.sync=\"isAddGroupOpen\">\n\t\t\t<template #actionsTriggerIcon>\n\t\t\t\t<NcLoadingIcon v-if=\"loadingAddGroup\" />\n\t\t\t\t<NcIconSvgWrapper v-else :path=\"mdiPlus\" />\n\t\t\t</template>\n\t\t\t<template #actions>\n\t\t\t\t<NcActionText>\n\t\t\t\t\t<template #icon>\n\t\t\t\t\t\t<AccountGroup :size=\"20\" />\n\t\t\t\t\t</template>\n\t\t\t\t\t{{ t('settings', 'Create group') }}\n\t\t\t\t</NcActionText>\n\t\t\t\t<NcActionInput :label=\"t('settings', 'Group name')\"\n\t\t\t\t\tdata-cy-users-settings-new-group-name\n\t\t\t\t\t:label-outside=\"false\"\n\t\t\t\t\t:disabled=\"loadingAddGroup\"\n\t\t\t\t\t:value.sync=\"newGroupName\"\n\t\t\t\t\t:error=\"hasAddGroupError\"\n\t\t\t\t\t:helper-text=\"hasAddGroupError ? t('settings', 'Please enter a valid group name') : ''\"\n\t\t\t\t\t@submit=\"createGroup\" />\n\t\t\t</template>\n\t\t</NcAppNavigationCaption>\n\n\t\t<NcAppNavigationList class=\"account-management__group-list\" data-cy-users-settings-navigation-groups=\"custom\">\n\t\t\t<GroupListItem v-for=\"group in userGroups\"\n\t\t\t\t:id=\"group.id\"\n\t\t\t\t:key=\"group.id\"\n\t\t\t\t:active=\"selectedGroupDecoded === group.id\"\n\t\t\t\t:name=\"group.title\"\n\t\t\t\t:count=\"group.count\" />\n\t\t</NcAppNavigationList>\n\n\t\t<template #footer>\n\t\t\t<NcButton class=\"account-management__settings-toggle\"\n\t\t\t\ttype=\"tertiary\"\n\t\t\t\t@click=\"isDialogOpen = true\">\n\t\t\t\t<template #icon>\n\t\t\t\t\t<NcIconSvgWrapper :path=\"mdiCog\" />\n\t\t\t\t</template>\n\t\t\t\t{{ t('settings', 'Account management settings') }}\n\t\t\t</NcButton>\n\t\t\t<UserSettingsDialog :open.sync=\"isDialogOpen\" />\n\t\t</template>\n\t</NcAppNavigation>\n</template>\n\n<script setup lang=\"ts\">\nimport { mdiAccount, mdiAccountOff, mdiCog, mdiPlus, mdiShieldAccount } from '@mdi/js'\nimport { showError } from '@nextcloud/dialogs'\nimport { translate as t } from '@nextcloud/l10n'\nimport { computed, ref } from 'vue'\n\nimport NcActionInput from '@nextcloud/vue/dist/Components/NcActionInput.js'\nimport NcActionText from '@nextcloud/vue/dist/Components/NcActionText.js'\nimport NcAppNavigation from '@nextcloud/vue/dist/Components/NcAppNavigation.js'\nimport NcAppNavigationCaption from '@nextcloud/vue/dist/Components/NcAppNavigationCaption.js'\nimport NcAppNavigationItem from '@nextcloud/vue/dist/Components/NcAppNavigationItem.js'\nimport NcAppNavigationList from '@nextcloud/vue/dist/Components/NcAppNavigationList.js'\nimport NcAppNavigationNew from '@nextcloud/vue/dist/Components/NcAppNavigationNew.js'\nimport NcButton from '@nextcloud/vue/dist/Components/NcButton.js'\nimport NcCounterBubble from '@nextcloud/vue/dist/Components/NcCounterBubble.js'\nimport NcIconSvgWrapper from '@nextcloud/vue/dist/Components/NcIconSvgWrapper.js'\nimport NcLoadingIcon from '@nextcloud/vue/dist/Components/NcLoadingIcon.js'\n\nimport GroupListItem from '../components/GroupListItem.vue'\nimport UserSettingsDialog from '../components/Users/UserSettingsDialog.vue'\nimport { useStore } from '../store'\nimport { useRoute, useRouter } from 'vue-router/composables'\nimport { useFormatGroups } from '../composables/useGroupsNavigation'\n\nconst route = useRoute()\nconst router = useRouter()\nconst store = useStore()\n\n/** State of the 'new-account' dialog */\nconst isDialogOpen = ref(false)\n\n/** Current active group in the view - this is URL encoded */\nconst selectedGroup = computed(() => route.params?.selectedGroup)\n/** Current active group - URL decoded  */\nconst selectedGroupDecoded = computed(() => selectedGroup.value ? decodeURIComponent(selectedGroup.value) : null)\n\n/** Overall user count */\nconst userCount = computed(() => store.getters.getUserCount)\n/** All available groups */\nconst groups = computed(() => store.getters.getSortedGroups)\nconst { adminGroup, disabledGroup, userGroups } = useFormatGroups(groups)\n\n/** True if the current user is an administrator */\nconst isAdmin = computed(() => store.getters.getServerData.isAdmin)\n\n/** True if the 'add-group' dialog is open - needed to be able to close it when the group is created */\nconst isAddGroupOpen = ref(false)\n/** True if the group creation is in progress to show loading spinner and disable adding another one */\nconst loadingAddGroup = ref(false)\n/** Error state for creating a new group */\nconst hasAddGroupError = ref(false)\n/** Name of the group to create (used in the group creation dialog) */\nconst newGroupName = ref('')\n\n/**\n * Create a new group\n */\nasync function createGroup() {\n\thasAddGroupError.value = false\n\tconst groupId = newGroupName.value.trim()\n\tif (groupId === '') {\n\t\thasAddGroupError.value = true\n\t\treturn\n\t}\n\n\tisAddGroupOpen.value = false\n\tloadingAddGroup.value = true\n\n\ttry {\n\t\tawait store.dispatch('addGroup', groupId)\n\t\tawait router.push({\n\t\t\tname: 'group',\n\t\t\tparams: {\n\t\t\t\tselectedGroup: encodeURIComponent(groupId),\n\t\t\t},\n\t\t})\n\t\tnewGroupName.value = ''\n\t} catch {\n\t\tshowError(t('settings', 'Failed to create group'))\n\t}\n\tloadingAddGroup.value = false\n}\n\n/**\n * Open the new-user form dialog\n */\nfunction showNewUserMenu() {\n\tstore.commit('setShowConfig', {\n\t\tkey: 'showNewUserForm',\n\t\tvalue: true,\n\t})\n}\n</script>\n\n<style scoped lang=\"scss\">\n.account-management{\n\t&__system-list {\n\t\theight: auto !important;\n\t\toverflow: visible !important;\n\t}\n\n\t&__group-list {\n\t\theight: 100% !important;\n\t}\n\n\t&__settings-toggle {\n\t\tmargin-bottom: 12px;\n\t}\n}\n</style>\n"],"names":["_sfc_main","AccountGroup","Delete","Fragment","NcActionButton","NcActionInput","NcAppNavigationItem","NcButton","NcCounterBubble","NcModal","NcNoteCard","Pencil","gid","displayName","showError","NcAppSettingsDialog","NcAppSettingsSection","NcCheckboxRadioSwitch","NcSelect","GroupSorting","sorting","open","status","quotaPreset","acc","cur","unlimitedQuota","quota","value","axios","generateUrl","e","key","parseFileSize","formatFileSize","formatGroupMenu","group","useFormatGroups","groups","userGroups","computed","adminGroup","disabledGroup","route","useRoute","router","useRouter","store","useStore","isDialogOpen","ref","selectedGroup","_a","selectedGroupDecoded","userCount","isAdmin","isAddGroupOpen","loadingAddGroup","hasAddGroupError","newGroupName","createGroup","groupId","t","showNewUserMenu"],"mappings":"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"}