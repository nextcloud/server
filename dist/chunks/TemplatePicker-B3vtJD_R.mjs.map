{"version":3,"file":"TemplatePicker-B3vtJD_R.mjs","sources":["../../apps/files/src/services/Templates.js","../../apps/files/src/utils/davUtils.js","../../apps/files/src/components/TemplatePreview.vue","../../apps/files/src/views/TemplatePicker.vue"],"sourcesContent":["/**\n * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { generateOcsUrl } from '@nextcloud/router'\nimport axios from '@nextcloud/axios'\n\nexport const getTemplates = async function() {\n\tconst response = await axios.get(generateOcsUrl('apps/files/api/v1/templates'))\n\treturn response.data.ocs.data\n}\n\n/**\n * Create a new file from a specified template\n *\n * @param {string} filePath The new file destination path\n * @param {string} templatePath The template source path\n * @param {string} templateType The template type e.g 'user'\n */\nexport const createFromTemplate = async function(filePath, templatePath, templateType) {\n\tconst response = await axios.post(generateOcsUrl('apps/files/api/v1/templates/create'), {\n\t\tfilePath,\n\t\ttemplatePath,\n\t\ttemplateType,\n\t})\n\treturn response.data.ocs.data\n}\n","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { generateRemoteUrl } from '@nextcloud/router'\nimport { getCurrentUser } from '@nextcloud/auth'\n\nexport const getRootPath = function() {\n\tif (getCurrentUser()) {\n\t\treturn generateRemoteUrl(`dav/files/${getCurrentUser().uid}`)\n\t} else {\n\t\treturn generateRemoteUrl('webdav').replace('/remote.php', '/public.php')\n\t}\n}\n\nexport const isPublic = function() {\n\treturn !getCurrentUser()\n}\n\nexport const getToken = function() {\n\treturn document.getElementById('sharingToken') && document.getElementById('sharingToken').value\n}\n","<!--\n  - SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n\n<template>\n\t<li class=\"template-picker__item\">\n\t\t<input :id=\"id\"\n\t\t\t:checked=\"checked\"\n\t\t\ttype=\"radio\"\n\t\t\tclass=\"radio\"\n\t\t\tname=\"template-picker\"\n\t\t\t@change=\"onCheck\">\n\n\t\t<label :for=\"id\" class=\"template-picker__label\">\n\t\t\t<div class=\"template-picker__preview\"\n\t\t\t\t:class=\"failedPreview ? 'template-picker__preview--failed' : ''\">\n\t\t\t\t<img class=\"template-picker__image\"\n\t\t\t\t\t:src=\"realPreviewUrl\"\n\t\t\t\t\talt=\"\"\n\t\t\t\t\tdraggable=\"false\"\n\t\t\t\t\t@error=\"onFailure\">\n\t\t\t</div>\n\n\t\t\t<span class=\"template-picker__title\">\n\t\t\t\t{{ nameWithoutExt }}\n\t\t\t</span>\n\t\t</label>\n\t</li>\n</template>\n\n<script>\nimport { encodePath } from '@nextcloud/paths'\nimport { generateUrl } from '@nextcloud/router'\nimport { getToken, isPublic } from '../utils/davUtils.js'\n\n// preview width generation\nconst previewWidth = 256\n\nexport default {\n\tname: 'TemplatePreview',\n\tinheritAttrs: false,\n\n\tprops: {\n\t\tbasename: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tchecked: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t\tfileid: {\n\t\t\ttype: [String, Number],\n\t\t\trequired: true,\n\t\t},\n\t\tfilename: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tpreviewUrl: {\n\t\t\ttype: String,\n\t\t\tdefault: null,\n\t\t},\n\t\thasPreview: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t},\n\t\tmime: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tratio: {\n\t\t\ttype: Number,\n\t\t\tdefault: null,\n\t\t},\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tfailedPreview: false,\n\t\t}\n\t},\n\n\tcomputed: {\n\t\t/**\n\t\t * Strip away extension from name\n\t\t *\n\t\t * @return {string}\n\t\t */\n\t\tnameWithoutExt() {\n\t\t\treturn this.basename.indexOf('.') > -1 ? this.basename.split('.').slice(0, -1).join('.') : this.basename\n\t\t},\n\n\t\tid() {\n\t\t\treturn `template-picker-${this.fileid}`\n\t\t},\n\n\t\trealPreviewUrl() {\n\t\t\t// If original preview failed, fallback to mime icon\n\t\t\tif (this.failedPreview && this.mimeIcon) {\n\t\t\t\treturn this.mimeIcon\n\t\t\t}\n\n\t\t\tif (this.previewUrl) {\n\t\t\t\treturn this.previewUrl\n\t\t\t}\n\t\t\t// TODO: find a nicer standard way of doing this?\n\t\t\tif (isPublic()) {\n\t\t\t\treturn generateUrl(`/apps/files_sharing/publicpreview/${getToken()}?fileId=${this.fileid}&file=${encodePath(this.filename)}&x=${previewWidth}&y=${previewWidth}&a=1`)\n\t\t\t}\n\t\t\treturn generateUrl(`/core/preview?fileId=${this.fileid}&x=${previewWidth}&y=${previewWidth}&a=1`)\n\t\t},\n\n\t\tmimeIcon() {\n\t\t\treturn OC.MimeType.getIconUrl(this.mime)\n\t\t},\n\t},\n\n\tmethods: {\n\t\tonCheck() {\n\t\t\tthis.$emit('check', this.fileid)\n\t\t},\n\t\tonFailure() {\n\t\t\tthis.failedPreview = true\n\t\t},\n\t},\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n.template-picker {\n\t&__item {\n\t\tdisplay: flex;\n\t}\n\n\t&__label {\n\t\tdisplay: flex;\n\t\t// Align in the middle of the grid\n\t\talign-items: center;\n\t\tflex: 1 1;\n\t\tflex-direction: column;\n\n\t\t&, * {\n\t\t\tcursor: pointer;\n\t\t\tuser-select: none;\n\t\t}\n\n\t\t&::before {\n\t\t\tdisplay: none !important;\n\t\t}\n\t}\n\n\t&__preview {\n\t\tdisplay: block;\n\t\toverflow: hidden;\n\t\t// Stretch so all entries are the same width\n\t\tflex: 1 1;\n\t\twidth: var(--width);\n\t\tmin-height: var(--height);\n\t\tmax-height: var(--height);\n\t\tpadding: 0;\n\t\tborder: var(--border) solid var(--color-border);\n\t\tborder-radius: var(--border-radius-large);\n\n\t\tinput:checked + label > & {\n\t\t\tborder-color: var(--color-primary-element);\n\t\t}\n\n\t\t&--failed {\n\t\t\t// Make sure to properly center fallback icon\n\t\t\tdisplay: flex;\n\t\t}\n\t}\n\n\t&__image {\n\t\tmax-width: 100%;\n\t\tbackground-color: var(--color-main-background);\n\n\t\tobject-fit: cover;\n\t}\n\n\t// Failed preview, fallback to mime icon\n\t&__preview--failed &__image {\n\t\twidth: calc(var(--margin) * 8);\n\t\t// Center mime icon\n\t\tmargin: auto;\n\t\tbackground-color: transparent !important;\n\n\t\tobject-fit: initial;\n\t}\n\n\t&__title {\n\t\toverflow: hidden;\n\t\t// also count preview border\n\t\tmax-width: calc(var(--width) + 2*2px);\n\t\tpadding: var(--margin);\n\t\twhite-space: nowrap;\n\t\ttext-overflow: ellipsis;\n\t}\n}\n\n</style>\n","<!--\n  - SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n\n<template>\n\t<NcModal v-if=\"opened\"\n\t\t:clear-view-delay=\"-1\"\n\t\tclass=\"templates-picker\"\n\t\tsize=\"large\"\n\t\t@close=\"close\">\n\t\t<form class=\"templates-picker__form\"\n\t\t\t:style=\"style\"\n\t\t\t@submit.prevent.stop=\"onSubmit\">\n\t\t\t<h2>{{ t('files', 'Pick a template for {name}', { name: nameWithoutExt }) }}</h2>\n\n\t\t\t<!-- Templates list -->\n\t\t\t<ul class=\"templates-picker__list\">\n\t\t\t\t<TemplatePreview v-bind=\"emptyTemplate\"\n\t\t\t\t\t:checked=\"checked === emptyTemplate.fileid\"\n\t\t\t\t\t@check=\"onCheck\" />\n\n\t\t\t\t<TemplatePreview v-for=\"template in provider.templates\"\n\t\t\t\t\t:key=\"template.fileid\"\n\t\t\t\t\tv-bind=\"template\"\n\t\t\t\t\t:checked=\"checked === template.fileid\"\n\t\t\t\t\t:ratio=\"provider.ratio\"\n\t\t\t\t\t@check=\"onCheck\" />\n\t\t\t</ul>\n\n\t\t\t<!-- Cancel and submit -->\n\t\t\t<div class=\"templates-picker__buttons\">\n\t\t\t\t<input type=\"submit\"\n\t\t\t\t\tclass=\"primary\"\n\t\t\t\t\t:value=\"t('files', 'Create')\"\n\t\t\t\t\t:aria-label=\"t('files', 'Create a new file with the selected template')\">\n\t\t\t</div>\n\t\t</form>\n\n\t\t<NcEmptyContent v-if=\"loading\" class=\"templates-picker__loading\" icon=\"icon-loading\">\n\t\t\t{{ t('files', 'Creating file') }}\n\t\t</NcEmptyContent>\n\t</NcModal>\n</template>\n\n<script lang=\"ts\">\nimport type { TemplateFile } from '../types.ts'\n\nimport { getCurrentUser } from '@nextcloud/auth'\nimport { showError } from '@nextcloud/dialogs'\nimport { emit } from '@nextcloud/event-bus'\nimport { File } from '@nextcloud/files'\nimport { translate as t } from '@nextcloud/l10n'\nimport { generateRemoteUrl } from '@nextcloud/router'\nimport { normalize, extname, join } from 'path'\nimport { defineComponent } from 'vue'\nimport { createFromTemplate, getTemplates } from '../services/Templates.js'\n\nimport NcEmptyContent from '@nextcloud/vue/dist/Components/NcEmptyContent.js'\nimport NcModal from '@nextcloud/vue/dist/Components/NcModal.js'\nimport TemplatePreview from '../components/TemplatePreview.vue'\nimport logger from '../logger.js'\n\nconst border = 2\nconst margin = 8\n\nexport default defineComponent({\n\tname: 'TemplatePicker',\n\n\tcomponents: {\n\t\tNcEmptyContent,\n\t\tNcModal,\n\t\tTemplatePreview,\n\t},\n\n\tprops: {\n\t\t/**\n\t\t * The parent folder where to create the node\n\t\t */\n\t\tparent: {\n\t\t\ttype: Object,\n\t\t\tdefault: () => null,\n\t\t},\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\t// Check empty template by default\n\t\t\tchecked: -1,\n\t\t\tloading: false,\n\t\t\tname: null as string|null,\n\t\t\topened: false,\n\t\t\tprovider: null as TemplateFile|null,\n\t\t}\n\t},\n\n\tcomputed: {\n\t\textension() {\n\t\t\treturn extname(this.name ?? '')\n\t\t},\n\n\t\tnameWithoutExt() {\n\t\t\t// Strip extension from name if defined\n\t\t\treturn !this.extension\n\t\t\t\t? this.name!\n\t\t\t\t: this.name!.slice(0, 0 - this.extension.length)\n\t\t},\n\n\t\temptyTemplate() {\n\t\t\treturn {\n\t\t\t\tbasename: t('files', 'Blank'),\n\t\t\t\tfileid: -1,\n\t\t\t\tfilename: t('files', 'Blank'),\n\t\t\t\thasPreview: false,\n\t\t\t\tmime: this.provider?.mimetypes[0] || this.provider?.mimetypes,\n\t\t\t}\n\t\t},\n\n\t\tselectedTemplate() {\n\t\t\tif (!this.provider) {\n\t\t\t\treturn null\n\t\t\t}\n\n\t\t\treturn this.provider.templates!.find((template) => template.fileid === this.checked)\n\t\t},\n\n\t\t/**\n\t\t * Style css vars bind\n\t\t *\n\t\t * @return {object}\n\t\t */\n\t\tstyle() {\n\t\t\tif (!this.provider) {\n\t\t\t\treturn {}\n\t\t\t}\n\n\t\t\t// Fallback to 16:9 landscape ratio\n\t\t\tconst ratio = this.provider.ratio ? this.provider.ratio : 1.77\n\t\t\t// Landscape templates should be wider than tall ones\n\t\t\t// We fit 3 templates per row at max for landscape and 4 for portrait\n\t\t\tconst width = ratio > 1 ? margin * 30 : margin * 20\n\t\t\treturn {\n\t\t\t\t'--margin': margin + 'px',\n\t\t\t\t'--width': width + 'px',\n\t\t\t\t'--border': border + 'px',\n\t\t\t\t'--fullwidth': width + 2 * margin + 2 * border + 'px',\n\t\t\t\t'--height': this.provider.ratio ? Math.round(width / this.provider.ratio) + 'px' : null,\n\t\t\t}\n\t\t},\n\t},\n\n\tmethods: {\n\t\tt,\n\n\t\t/**\n\t\t * Open the picker\n\t\t *\n\t\t * @param {string} name the file name to create\n\t\t * @param {object} provider the template provider picked\n\t\t */\n\t\tasync open(name: string, provider) {\n\t\t\tthis.checked = this.emptyTemplate.fileid\n\t\t\tthis.name = name\n\t\t\tthis.provider = provider\n\n\t\t\tconst templates = await getTemplates()\n\t\t\tconst fetchedProvider = templates.find((fetchedProvider) => fetchedProvider.app === provider.app && fetchedProvider.label === provider.label)\n\t\t\tif (fetchedProvider === null) {\n\t\t\t\tthrow new Error('Failed to match provider in results')\n\t\t\t}\n\t\t\tthis.provider = fetchedProvider\n\n\t\t\t// If there is no templates available, just create an empty file\n\t\t\tif (fetchedProvider.templates.length === 0) {\n\t\t\t\tthis.onSubmit()\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// Else, open the picker\n\t\t\tthis.opened = true\n\t\t},\n\n\t\t/**\n\t\t * Close the picker and reset variables\n\t\t */\n\t\tclose() {\n\t\t\tthis.checked = this.emptyTemplate.fileid\n\t\t\tthis.loading = false\n\t\t\tthis.name = null\n\t\t\tthis.opened = false\n\t\t\tthis.provider = null\n\t\t},\n\n\t\t/**\n\t\t * Manages the radio template picker change\n\t\t *\n\t\t * @param fileid the selected template file id\n\t\t */\n\t\tonCheck(fileid: number) {\n\t\t\tthis.checked = fileid\n\t\t},\n\n\t\tasync onSubmit() {\n\t\t\tthis.loading = true\n\t\t\tconst currentDirectory = new URL(window.location.href).searchParams.get('dir') || '/'\n\n\t\t\t// If the file doesn't have an extension, add the default one\n\t\t\tif (this.nameWithoutExt === this.name) {\n\t\t\t\tlogger.warn('Fixed invalid filename', { name: this.name, extension: this.provider?.extension })\n\t\t\t\tthis.name = `${this.name}${this.provider?.extension ?? ''}`\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst fileInfo = await createFromTemplate(\n\t\t\t\t\tnormalize(`${currentDirectory}/${this.name}`),\n\t\t\t\t\tthis.selectedTemplate?.filename as string ?? '',\n\t\t\t\t\tthis.selectedTemplate?.templateType as string ?? '',\n\t\t\t\t)\n\t\t\t\tlogger.debug('Created new file', fileInfo)\n\n\t\t\t\tconst owner = getCurrentUser()?.uid || null\n\t\t\t\tconst node = new File({\n\t\t\t\t\tid: fileInfo.fileid,\n\t\t\t\t\tsource: generateRemoteUrl(join(`dav/files/${owner}`, fileInfo.filename)),\n\t\t\t\t\troot: `/files/${owner}`,\n\t\t\t\t\tmime: fileInfo.mime,\n\t\t\t\t\tmtime: new Date(fileInfo.lastmod * 1000),\n\t\t\t\t\towner,\n\t\t\t\t\tsize: fileInfo.size,\n\t\t\t\t\tpermissions: fileInfo.permissions,\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\t// Inherit some attributes from parent folder like the mount type and real owner\n\t\t\t\t\t\t'mount-type': this.parent?.attributes?.['mount-type'],\n\t\t\t\t\t\t'owner-id': this.parent?.attributes?.['owner-id'],\n\t\t\t\t\t\t'owner-display-name': this.parent?.attributes?.['owner-display-name'],\n\t\t\t\t\t\t...fileInfo,\n\t\t\t\t\t\t'has-preview': fileInfo.hasPreview,\n\t\t\t\t\t},\n\t\t\t\t})\n\n\t\t\t\t// Update files list\n\t\t\t\temit('files:node:created', node)\n\n\t\t\t\t// Open the new file\n\t\t\t\twindow.OCP.Files.Router.goToRoute(\n\t\t\t\t\tnull, // use default route\n\t\t\t\t\t{ view: 'files', fileid: node.fileid },\n\t\t\t\t\t{ dir: node.dirname, openfile: 'true' },\n\t\t\t\t)\n\n\t\t\t\t// Close the picker\n\t\t\t\tthis.close()\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error('Error while creating the new file from template', { error })\n\t\t\t\tshowError(t('files', 'Unable to create new file from template'))\n\t\t\t} finally {\n\t\t\t\tthis.loading = false\n\t\t\t}\n\t\t},\n\t},\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.templates-picker {\n\t&__form {\n\t\tpadding: calc(var(--margin) * 2);\n\t\t// Will be handled by the buttons\n\t\tpadding-bottom: 0;\n\n\t\th2 {\n\t\t\ttext-align: center;\n\t\t\tfont-weight: bold;\n\t\t\tmargin: var(--margin) 0 calc(var(--margin) * 2);\n\t\t}\n\t}\n\n\t&__list {\n\t\tdisplay: grid;\n\t\tgrid-gap: calc(var(--margin) * 2);\n\t\tgrid-auto-columns: 1fr;\n\t\t// We want maximum 5 columns. Putting 6 as we don't count the grid gap. So it will always be lower than 6\n\t\tmax-width: calc(var(--fullwidth) * 6);\n\t\tgrid-template-columns: repeat(auto-fit, var(--fullwidth));\n\t\t// Make sure all rows are the same height\n\t\tgrid-auto-rows: 1fr;\n\t\t// Center the columns set\n\t\tjustify-content: center;\n\t}\n\n\t&__buttons {\n\t\tdisplay: flex;\n\t\tjustify-content: end;\n\t\tpadding: calc(var(--margin) * 2) var(--margin);\n\t\tposition: sticky;\n\t\tbottom: 0;\n\t\tbackground-image: linear-gradient(0, var(--gradient-main-background));\n\n\t\tbutton, input[type='submit'] {\n\t\t\theight: 44px;\n\t\t}\n\t}\n\n\t// Make sure we're relative for the loading emptycontent on top\n\t::v-deep .modal-container {\n\t\tposition: relative;\n\t}\n\n\t&__loading {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tjustify-content: center;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tmargin: 0;\n\t\tbackground-color: var(--color-main-background-translucent);\n\t}\n}\n\n</style>\n"],"names":["getTemplates","axios","generateOcsUrl","createFromTemplate","filePath","templatePath","templateType","isPublic","getCurrentUser","getToken","previewWidth","_sfc_main","generateUrl","encodePath","border","margin","defineComponent","NcEmptyContent","NcModal","TemplatePreview","extname","_a","t","_b","template","width","name","provider","fetchedProvider","fileid","currentDirectory","logger","_c","fileInfo","normalize","_e","_d","_g","_f","owner","_h","node","File","generateRemoteUrl","join","_j","_i","_l","_k","_n","_m","emit","error","showError"],"mappings":"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"}