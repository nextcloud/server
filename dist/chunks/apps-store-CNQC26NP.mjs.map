{"version":3,"file":"apps-store-CNQC26NP.mjs","sources":["../../apps/settings/src/constants/AppstoreCategoryIcons.ts","../../apps/settings/src/store/apps-store.ts"],"sourcesContent":["/**\n * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport {\n\tmdiAccount,\n\tmdiAccountMultiple,\n\tmdiArchive,\n\tmdiCheck,\n\tmdiClipboardFlow,\n\tmdiClose,\n\tmdiCog,\n\tmdiControllerClassic,\n\tmdiDownload,\n\tmdiFileDocumentEdit,\n\tmdiFolder,\n\tmdiKey,\n\tmdiMagnify,\n\tmdiMonitorEye,\n\tmdiMultimedia,\n\tmdiOfficeBuilding,\n\tmdiOpenInApp,\n\tmdiSecurity,\n\tmdiStar,\n\tmdiStarCircleOutline,\n\tmdiStarShooting,\n\tmdiTools,\n\tmdiViewDashboard,\n} from '@mdi/js'\n\n/**\n * SVG paths used for appstore category icons\n */\nexport default Object.freeze({\n\t// system special categories\n\tdiscover: mdiStarCircleOutline,\n\tinstalled: mdiAccount,\n\tenabled: mdiCheck,\n\tdisabled: mdiClose,\n\tbundles: mdiArchive,\n\tsupported: mdiStarShooting,\n\tfeatured: mdiStar,\n\tupdates: mdiDownload,\n\n\t// generic categories\n\tauth: mdiKey,\n\tcustomization: mdiCog,\n\tdashboard: mdiViewDashboard,\n\tfiles: mdiFolder,\n\tgames: mdiControllerClassic,\n\tintegration: mdiOpenInApp,\n\tmonitoring: mdiMonitorEye,\n\tmultimedia: mdiMultimedia,\n\toffice: mdiFileDocumentEdit,\n\torganization: mdiOfficeBuilding,\n\tsearch: mdiMagnify,\n\tsecurity: mdiSecurity,\n\tsocial: mdiAccountMultiple,\n\ttools: mdiTools,\n\tworkflow: mdiClipboardFlow,\n})\n","/**\n * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport type { IAppstoreApp, IAppstoreCategory } from '../app-types.ts'\n\nimport { showError } from '@nextcloud/dialogs'\nimport { loadState } from '@nextcloud/initial-state'\nimport { translate as t } from '@nextcloud/l10n'\nimport { generateUrl } from '@nextcloud/router'\nimport { defineStore } from 'pinia'\n\nimport axios from '@nextcloud/axios'\n\nimport logger from '../logger'\nimport APPSTORE_CATEGORY_ICONS from '../constants/AppstoreCategoryIcons.ts'\n\nconst showApiError = () => showError(t('settings', 'An error occurred during the request. Unable to proceed.'))\n\nexport const useAppsStore = defineStore('settings-apps', {\n\tstate: () => ({\n\t\tapps: [] as IAppstoreApp[],\n\t\tcategories: [] as IAppstoreCategory[],\n\t\tupdateCount: loadState<number>('settings', 'appstoreUpdateCount', 0),\n\t\tloading: {\n\t\t\tapps: false,\n\t\t\tcategories: false,\n\t\t},\n\t\tloadingList: false,\n\t\tgettingCategoriesPromise: null,\n\t}),\n\n\tactions: {\n\t\tasync loadCategories(force = false) {\n\t\t\tif (this.categories.length > 0 && !force) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tthis.loading.categories = true\n\t\t\t\tconst { data: categories } = await axios.get<IAppstoreCategory[]>(generateUrl('settings/apps/categories'))\n\n\t\t\t\tfor (const category of categories) {\n\t\t\t\t\tcategory.icon = APPSTORE_CATEGORY_ICONS[category.id] ?? ''\n\t\t\t\t}\n\n\t\t\t\tthis.$patch({\n\t\t\t\t\tcategories,\n\t\t\t\t})\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error as Error)\n\t\t\t\tshowApiError()\n\t\t\t} finally {\n\t\t\t\tthis.loading.categories = false\n\t\t\t}\n\t\t},\n\n\t\tasync loadApps(force = false) {\n\t\t\tif (this.apps.length > 0 && !force) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tthis.loading.apps = true\n\t\t\t\tconst { data } = await axios.get<{ apps: IAppstoreApp[] }>(generateUrl('settings/apps/list'))\n\n\t\t\t\tthis.$patch({\n\t\t\t\t\tapps: data.apps,\n\t\t\t\t})\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error as Error)\n\t\t\t\tshowApiError()\n\t\t\t} finally {\n\t\t\t\tthis.loading.apps = false\n\t\t\t}\n\t\t},\n\n\t\tgetCategoryById(categoryId: string) {\n\t\t\treturn this.categories.find(({ id }) => id === categoryId) ?? null\n\t\t},\n\n\t\tgetAppById(appId: string): IAppstoreApp|null {\n\t\t\treturn this.apps.find(({ id }) => id === appId) ?? null\n\t\t},\n\t},\n})\n"],"names":["AppstoreCategoryIcons","mdiStarCircleOutline","mdiAccount","mdiCheck","mdiClose","mdiArchive","mdiStarShooting","mdiStar","mdiDownload","mdiKey","mdiCog","mdiViewDashboard","mdiFolder","mdiControllerClassic","mdiOpenInApp","mdiMonitorEye","mdiMultimedia","mdiFileDocumentEdit","mdiOfficeBuilding","mdiMagnify","mdiSecurity","mdiAccountMultiple","mdiTools","mdiClipboardFlow","showApiError","showError","t","useAppsStore","defineStore","loadState","force","_a","categories","axios","generateUrl","category","APPSTORE_CATEGORY_ICONS","error","logger","data","categoryId","id","appId"],"mappings":";kbAiCA,MAAeA,EAAA,OAAO,OAAO,CAE5B,SAAUC,EACV,UAAWC,EACX,QAASC,EACT,SAAUC,EACV,QAASC,EACT,UAAWC,EACX,SAAUC,EACV,QAASC,EAGT,KAAMC,EACN,cAAeC,EACf,UAAWC,EACX,MAAOC,EACP,MAAOC,EACP,YAAaC,EACb,WAAYC,EACZ,WAAYC,EACZ,OAAQC,EACR,aAAcC,EACd,OAAQC,EACR,SAAUC,EACV,OAAQC,EACR,MAAOC,EACP,SAAUC,CACX,CAAC,EC1CKC,EAAe,IAAMC,EAAUC,EAAE,WAAY,0DAA0D,CAAC,EAEjGC,EAAeC,EAAY,gBAAiB,CACxD,MAAO,KAAO,CACb,KAAM,CAAC,EACP,WAAY,CAAC,EACb,YAAaC,EAAkB,WAAY,sBAAuB,CAAC,EACnE,QAAS,CACR,KAAM,GACN,WAAY,EACb,EACA,YAAa,GACb,yBAA0B,IAAA,GAG3B,QAAS,CACR,MAAM,eAAeC,EAAQ,GAAO,CAlCtC,IAAAC,EAmCG,GAAI,OAAK,WAAW,OAAS,GAAK,CAACD,GAI/B,GAAA,CACH,KAAK,QAAQ,WAAa,GACpB,KAAA,CAAE,KAAME,GAAe,MAAMC,EAAM,IAAyBC,EAAY,0BAA0B,CAAC,EAEzG,UAAWC,KAAYH,EACtBG,EAAS,MAAOJ,EAAAK,EAAwBD,EAAS,EAAE,IAAnC,KAAwCJ,EAAA,GAGzD,KAAK,OAAO,CACX,WAAAC,CAAA,CACA,QACOK,EAAO,CACfC,EAAO,MAAMD,CAAc,EACdb,GAAA,QACZ,CACD,KAAK,QAAQ,WAAa,EAC3B,CACD,EAEA,MAAM,SAASM,EAAQ,GAAO,CAC7B,GAAI,EAAK,KAAA,KAAK,OAAS,GAAK,CAACA,GAIzB,GAAA,CACH,KAAK,QAAQ,KAAO,GACd,KAAA,CAAE,KAAAS,GAAS,MAAMN,EAAM,IAA8BC,EAAY,oBAAoB,CAAC,EAE5F,KAAK,OAAO,CACX,KAAMK,EAAK,IAAA,CACX,QACOF,EAAO,CACfC,EAAO,MAAMD,CAAc,EACdb,GAAA,QACZ,CACD,KAAK,QAAQ,KAAO,EACrB,CACD,EAEA,gBAAgBgB,EAAoB,CA9EtC,IAAAT,EA+EU,OAAAA,EAAA,KAAK,WAAW,KAAK,CAAC,CAAE,GAAAU,CAAS,IAAAA,IAAOD,CAAU,IAAlD,KAAuDT,EAAA,IAC/D,EAEA,WAAWW,EAAkC,CAlF/C,IAAAX,EAmFU,OAAAA,EAAA,KAAK,KAAK,KAAK,CAAC,CAAE,GAAAU,CAAS,IAAAA,IAAOC,CAAK,IAAvC,KAA4CX,EAAA,IACpD,CACD,CACD,CAAC"}