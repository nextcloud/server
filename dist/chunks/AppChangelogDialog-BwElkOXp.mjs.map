{"version":3,"file":"AppChangelogDialog-BwElkOXp.mjs","sources":["../../apps/updatenotification/src/components/AppChangelogDialog.vue"],"sourcesContent":["<!--\n  - SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n<template>\n\t<NcDialog content-classes=\"app-changelog-dialog\"\n\t\t:buttons=\"dialogButtons\"\n\t\t:name=\"t('updatenotification', 'What\\'s new in {app} {version}', { app: appName, version: appVersion })\"\n\t\t:open=\"open && markdown !== undefined\"\n\t\tsize=\"normal\"\n\t\t@update:open=\"$emit('update:open', $event)\">\n\t\t<Markdown class=\"app-changelog-dialog__text\" :markdown=\"markdown\" :min-heading-level=\"3\" />\n\t</NcDialog>\n</template>\n\n<script setup lang=\"ts\">\nimport { translate as t } from '@nextcloud/l10n'\nimport { generateOcsUrl } from '@nextcloud/router'\nimport { ref, watchEffect } from 'vue'\n\nimport axios from '@nextcloud/axios'\nimport NcDialog from '@nextcloud/vue/dist/Components/NcDialog.js'\nimport Markdown from './Markdown.vue'\n\nconst props = withDefaults(\n\tdefineProps<{\n\t\tappId: string\n\t\tversion?: string\n\t\topen?: boolean\n\t}>(),\n\n\t// Default values\n\t{\n\t\topen: true,\n\t\tversion: undefined,\n\t},\n)\n\nconst emit = defineEmits<{\n\t/**\n\t * Event that is called when the \"Get started\"-button is pressed\n\t */\n\t(e: 'dismiss'): void\n\n\t(e: 'update:open', v: boolean): void\n}>()\n\nconst dialogButtons = [\n\t{\n\t\tlabel: t('updatenotification', 'Give feedback'),\n\t\tcallback: () => {\n\t\t\twindow.open(`https://apps.nextcloud.com/apps/${props.appId}#comments`, '_blank', 'noreferrer noopener')\n\t\t},\n\t},\n\t{\n\t\tlabel: t('updatenotification', 'Get started'),\n\t\ttype: 'primary',\n\t\tcallback: () => {\n\t\t\temit('dismiss')\n\t\t\temit('update:open', false)\n\t\t},\n\t},\n]\n\nconst appName = ref(props.appId)\nconst appVersion = ref(props.version ?? '')\nconst markdown = ref<string>('')\nwatchEffect(() => {\n\tconst url = props.version\n\t\t? generateOcsUrl('/apps/updatenotification/api/v1/changelog/{app}?version={version}', { version: props.version, app: props.appId })\n\t\t: generateOcsUrl('/apps/updatenotification/api/v1/changelog/{app}', { version: props.version, app: props.appId })\n\n\taxios.get(url)\n\t\t.then(({ data }) => {\n\t\t\tappName.value = data.ocs.data.appName\n\t\t\tappVersion.value = data.ocs.data.version\n\t\t\tmarkdown.value = data.ocs.data.content\n\t\t})\n\t\t.catch((error) => {\n\t\t\tif (error?.response?.status === 404) {\n\t\t\t\tappName.value = props.appId\n\t\t\t\tmarkdown.value = t('updatenotification', 'No changelog available')\n\t\t\t} else {\n\t\t\t\tconsole.error('Failed to load changelog entry', error)\n\t\t\t\temit('update:open', false)\n\t\t\t}\n\t\t})\n\n})\n</script>\n\n<style scoped lang=\"scss\">\n:deep(.app-changelog-dialog) {\n\tmin-height: 50vh !important;\n}\n\n.app-changelog-dialog__text {\n\tpadding-inline: 14px;\n}\n</style>\n"],"names":["dialogButtons","t","props","emit","appName","ref","appVersion","_a","markdown","watchEffect","url","generateOcsUrl","axios","data","error"],"mappings":";kYA+CMA,EAAgB,CACrB,CACC,MAAOC,EAAE,qBAAsB,eAAe,EAC9C,SAAU,IAAM,CACf,OAAO,KAAK,mCAAmC,OAAAC,EAAM,MAAK,WAAA,EAAa,SAAU,qBAAqB,CACvG,CACD,EACA,CACC,MAAOD,EAAE,qBAAsB,aAAa,EAC5C,KAAM,UACN,SAAU,IAAM,CACfE,EAAK,SAAS,EACdA,EAAK,cAAe,EAAK,CAC1B,CACD,CAAA,EAGKC,EAAUC,EAAIH,EAAM,KAAK,EACzBI,EAAaD,GAAIE,EAAML,EAAA,UAAN,OAAiB,EAAE,EACpCM,EAAWH,EAAY,EAAE,EAC/B,OAAAI,EAAY,IAAM,CACX,MAAAC,EAAMR,EAAM,QACfS,EAAe,oEAAqE,CAAE,QAAST,EAAM,QAAS,IAAKA,EAAM,KAAO,CAAA,EAChIS,EAAe,kDAAmD,CAAE,QAAST,EAAM,QAAS,IAAKA,EAAM,KAAA,CAAO,EAEjHU,EAAM,IAAIF,CAAG,EACX,KAAK,CAAC,CAAE,KAAAG,KAAW,CACXT,EAAA,MAAQS,EAAK,IAAI,KAAK,QACnBP,EAAA,MAAQO,EAAK,IAAI,KAAK,QACxBL,EAAA,MAAQK,EAAK,IAAI,KAAK,OAAA,CAC/B,EACA,MAAOC,GAAU,SACbP,EAAOO,iBAAA,WAAP,KAAAP,OAAAA,EAAiB,UAAW,KAC/BH,EAAQ,MAAQF,EAAM,MACbM,EAAA,MAAQP,EAAE,qBAAsB,wBAAwB,IAEzD,QAAA,MAAM,iCAAkCa,CAAK,EACrDX,EAAK,cAAe,EAAK,EAC1B,CACA,CAAA,CAEF"}