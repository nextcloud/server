"use strict";(self.webpackChunknextcloud_ui_legacy=self.webpackChunknextcloud_ui_legacy||[]).push([[5679],{5679:(t,e,n)=>{n.d(e,{default:()=>k});var o=n(85168),r=n(53334),s=n(85471),m=n(65463),a=n(96689),c=n(70452);const l=(0,s.pM)({components:{Comment:m.A},mixins:[c.A],props:{reloadCallback:{type:Function,required:!0}},methods:{onNewComment(){try{this.reloadCallback()}catch(t){(0,o.Qg)((0,r.t)("comments","Could not reload comments")),a.A.error("Could not reload comments",{error:t})}}}});var i=n(85072),u=n.n(i),d=n(97825),p=n.n(d),C=n(77659),A=n.n(C),f=n(55056),y=n.n(f),g=n(10540),b=n.n(g),h=n(41113),w=n.n(h),x=n(83422),v={};v.styleTagTransform=w(),v.setAttributes=y(),v.insert=A().bind(null,"head"),v.domAPI=p(),v.insertStyleElement=b(),u()(x.A,v),x.A&&x.A.locals&&x.A.locals;const k=(0,n(14486).A)(l,function(){var t=this,e=t._self._c;return t._self._setupProxy,e("Comment",t._b({staticClass:"comments-action",attrs:{"auto-complete":t.autoComplete,"resource-type":t.resourceType,editor:!0,"user-data":t.userData,"resource-id":t.resourceId},on:{new:t.onNewComment}},"Comment",t.editorData,!1))},[],!1,null,"07ed56b2",null).exports},83422:(t,e,n)=>{n.d(e,{A:()=>a});var o=n(71354),r=n.n(o),s=n(76314),m=n.n(s)()(r());m.push([t.id,"\n.comments-action[data-v-07ed56b2] {\n\tpadding: 0;\n}\n","",{version:3,sources:["webpack://./apps/comments/src/views/ActivityCommentAction.vue"],names:[],mappings:";AAqDA;CACA,UAAA;AACA",sourcesContent:["\x3c!--\n  - SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n--\x3e\n\n<template>\n\t<Comment\n\t\tv-bind=\"editorData\"\n\t\t:auto-complete=\"autoComplete\"\n\t\t:resource-type=\"resourceType\"\n\t\t:editor=\"true\"\n\t\t:user-data=\"userData\"\n\t\t:resource-id=\"resourceId\"\n\t\tclass=\"comments-action\"\n\t\t@new=\"onNewComment\" />\n</template>\n\n<script lang=\"ts\">\nimport { showError } from '@nextcloud/dialogs'\nimport { t } from '@nextcloud/l10n'\nimport { defineComponent } from 'vue'\nimport Comment from '../components/Comment.vue'\nimport logger from '../logger.js'\nimport CommentView from '../mixins/CommentView.js'\n\nexport default defineComponent({\n\tcomponents: {\n\t\tComment,\n\t},\n\n\tmixins: [CommentView],\n\tprops: {\n\t\treloadCallback: {\n\t\t\ttype: Function,\n\t\t\trequired: true,\n\t\t},\n\t},\n\n\tmethods: {\n\t\tonNewComment() {\n\t\t\ttry {\n\t\t\t\t// just force reload\n\t\t\t\tthis.reloadCallback()\n\t\t\t} catch (error) {\n\t\t\t\tshowError(t('comments', 'Could not reload comments'))\n\t\t\t\tlogger.error('Could not reload comments', { error })\n\t\t\t}\n\t\t},\n\t},\n})\n<\/script>\n\n<style scoped>\n.comments-action {\n\tpadding: 0;\n}\n</style>\n"],sourceRoot:""}]);const a=m}}]);
//# sourceMappingURL=5679-5679.js.map?v=511ae90ef3c57cd814e9